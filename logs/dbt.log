[0m23:51:02.049646 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffb7f9dee0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffb66c9dc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffb66c9e20>]}


============================== 23:51:02.053991 | 9a1b6308-ac9e-4682-a407-4406783fb46c ==============================
[0m23:51:02.053991 [info ] [MainThread]: Running with dbt=1.8.5
[0m23:51:02.056640 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'debug': 'False', 'log_path': '/workspaces/fxtn7c3oiwkalwzz/repository/logs', 'profiles_dir': '/workspaces/fxtn7c3oiwkalwzz', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'log_format': 'default', 'static_parser': 'True', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m23:51:03.081611 [info ] [MainThread]: Initializing dbt-loom=0.5.6
[0m23:51:03.084275 [info ] [MainThread]: dbt-loom: Patching ref protection methods to support dbt-loom dependencies.
[0m23:51:03.086703 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '9a1b6308-ac9e-4682-a407-4406783fb46c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e91a3a0>]}
[0m23:51:03.153896 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '9a1b6308-ac9e-4682-a407-4406783fb46c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffb6777ca0>]}
[0m23:51:03.156912 [info ] [MainThread]: Registered adapter: snowflake=1.8.3
[0m23:51:03.166910 [error] [MainThread]: Encountered an error:
Compilation Error
  dbt found 4 package(s) specified in packages.yml, but only 0 package(s) installed in dbt_packages. Run "dbt deps" to install package dependencies.
[0m23:51:03.170012 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 1.1914766, "process_user_time": 2.454174, "process_kernel_time": 0.216834, "process_mem_max_rss": "197596", "process_out_blocks": "72", "command_success": false, "process_in_blocks": "0"}
[0m23:51:03.172954 [debug] [MainThread]: Command `dbt run` failed at 23:51:03.172762 after 1.19 seconds
[0m23:51:03.175480 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffb7f9dee0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e8deaf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e8decd0>]}
[0m23:51:03.178044 [debug] [MainThread]: Flushing usage events
[0m23:52:04.029676 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff975f1ee0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff95d1a310>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff95d1a2b0>]}


============================== 23:52:04.034056 | d2e6f623-0ad9-41c8-9b81-148c435b0b49 ==============================
[0m23:52:04.034056 [info ] [MainThread]: Running with dbt=1.8.5
[0m23:52:04.036780 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'profiles_dir': '/workspaces/fxtn7c3oiwkalwzz', 'log_path': '/workspaces/fxtn7c3oiwkalwzz/repository/logs', 'debug': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt test --select nba_player_game_logs', 'log_format': 'default', 'static_parser': 'True', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m23:52:05.060994 [info ] [MainThread]: Initializing dbt-loom=0.5.6
[0m23:52:05.063651 [info ] [MainThread]: dbt-loom: Patching ref protection methods to support dbt-loom dependencies.
[0m23:52:05.066154 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd2e6f623-0ad9-41c8-9b81-148c435b0b49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff7df623a0>]}
[0m23:52:05.134865 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd2e6f623-0ad9-41c8-9b81-148c435b0b49', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff84045970>]}
[0m23:52:05.137961 [info ] [MainThread]: Registered adapter: snowflake=1.8.3
[0m23:52:05.148557 [error] [MainThread]: Encountered an error:
Compilation Error
  dbt found 4 package(s) specified in packages.yml, but only 0 package(s) installed in dbt_packages. Run "dbt deps" to install package dependencies.
[0m23:52:05.151582 [debug] [MainThread]: Resource report: {"command_name": "test", "command_wall_clock_time": 1.1892381, "process_user_time": 2.468057, "process_kernel_time": 0.169181, "process_mem_max_rss": "197044", "process_out_blocks": "80", "command_success": false, "process_in_blocks": "0"}
[0m23:52:05.154444 [debug] [MainThread]: Command `dbt test` failed at 23:52:05.154261 after 1.19 seconds
[0m23:52:05.159285 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff975f1ee0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff969ce160>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff7df26520>]}
[0m23:52:05.161924 [debug] [MainThread]: Flushing usage events
[0m23:52:28.787422 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffa2b09eb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffa1235d30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffa1235d90>]}


============================== 23:52:28.791584 | 30258792-cd8f-4432-a5ee-c324159a7dfc ==============================
[0m23:52:28.791584 [info ] [MainThread]: Running with dbt=1.8.5
[0m23:52:28.794366 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/workspaces/fxtn7c3oiwkalwzz', 'debug': 'False', 'version_check': 'True', 'log_path': '/workspaces/fxtn7c3oiwkalwzz/repository/logs', 'fail_fast': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'None', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt deps', 'log_format': 'default', 'static_parser': 'True', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m23:52:29.168988 [info ] [MainThread]: Initializing dbt-loom=0.5.6
[0m23:52:29.171839 [info ] [MainThread]: dbt-loom: Patching ref protection methods to support dbt-loom dependencies.
[0m23:52:29.174514 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '30258792-cd8f-4432-a5ee-c324159a7dfc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e897b50>]}
[0m23:52:29.188267 [debug] [MainThread]: Set downloads directory='/tmp/tmp9090/dbt-downloads-emqo8pmj'
[0m23:52:29.191027 [debug] [MainThread]: Making package index registry request: GET https://hub.getdbt.com/api/v1/index.json
[0m23:52:29.211551 [debug] [MainThread]: Response from registry index: GET https://hub.getdbt.com/api/v1/index.json 200
[0m23:52:29.214524 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/codegen.json
[0m23:52:29.235297 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/codegen.json 200
[0m23:52:29.243582 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
[0m23:52:29.261423 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
[0m23:52:29.268994 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/calogica/dbt_expectations.json
[0m23:52:29.287521 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/calogica/dbt_expectations.json 200
[0m23:52:29.294992 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/elementary-data/elementary.json
[0m23:52:29.348666 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/elementary-data/elementary.json 200
[0m23:52:29.407975 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/calogica/dbt_date.json
[0m23:52:29.425899 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/calogica/dbt_date.json 200
[0m23:52:29.458065 [info ] [MainThread]: Updating lock file in file path: /workspaces/fxtn7c3oiwkalwzz/repository/package-lock.yml
[0m23:52:29.466322 [debug] [MainThread]: Set downloads directory='/tmp/tmp9090/dbt-downloads-0zucpx49'
[0m23:52:29.487064 [info ] [MainThread]: Installing dbt-labs/codegen
[0m23:52:29.956353 [info ] [MainThread]: Installed from version 0.12.1
[0m23:52:29.958788 [info ] [MainThread]: Up to date!
[0m23:52:29.961242 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '30258792-cd8f-4432-a5ee-c324159a7dfc', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e835580>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e774be0>]}
[0m23:52:29.963652 [info ] [MainThread]: Installing dbt-labs/dbt_utils
[0m23:52:31.285986 [info ] [MainThread]: Installed from version 1.1.1
[0m23:52:31.290229 [info ] [MainThread]: Updated version available: 1.3.0
[0m23:52:31.293321 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '30258792-cd8f-4432-a5ee-c324159a7dfc', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e80a2e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffa1230fa0>]}
[0m23:52:31.296085 [info ] [MainThread]: Installing calogica/dbt_expectations
[0m23:52:32.327073 [info ] [MainThread]: Installed from version 0.10.3
[0m23:52:32.329652 [info ] [MainThread]: Updated version available: 0.10.4
[0m23:52:32.332261 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '30258792-cd8f-4432-a5ee-c324159a7dfc', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e7fb280>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e8357c0>]}
[0m23:52:32.334744 [info ] [MainThread]: Installing elementary-data/elementary
[0m23:52:35.542935 [info ] [MainThread]: Installed from version 0.15.0
[0m23:52:35.545498 [info ] [MainThread]: Updated version available: 0.16.1
[0m23:52:35.547880 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '30258792-cd8f-4432-a5ee-c324159a7dfc', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e80a2e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e865820>]}
[0m23:52:35.550278 [info ] [MainThread]: Installing calogica/dbt_date
[0m23:52:36.110298 [info ] [MainThread]: Installed from version 0.10.1
[0m23:52:36.113413 [info ] [MainThread]: Up to date!
[0m23:52:36.116156 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '30258792-cd8f-4432-a5ee-c324159a7dfc', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e80a2e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e81d220>]}
[0m23:52:36.118639 [info ] [MainThread]: 
[0m23:52:36.121190 [info ] [MainThread]: Updates available for packages: ['dbt-labs/dbt_utils', 'calogica/dbt_expectations', 'elementary-data/elementary']                 
Update your versions in packages.yml, then run dbt deps
[0m23:52:36.125880 [debug] [MainThread]: Resource report: {"command_name": "deps", "command_success": true, "command_wall_clock_time": 7.403989, "process_user_time": 2.155278, "process_kernel_time": 0.385243, "process_mem_max_rss": "127600", "process_out_blocks": "28296", "process_in_blocks": "0"}
[0m23:52:36.131070 [debug] [MainThread]: Command `dbt deps` succeeded at 23:52:36.130869 after 7.41 seconds
[0m23:52:36.135515 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffa2b09eb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e835580>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9e844eb0>]}
[0m23:52:36.141238 [debug] [MainThread]: Flushing usage events
[0m23:52:50.744577 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9dc04f40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9c32cd00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9c32cd60>]}


============================== 23:52:50.748935 | 1e51ddeb-2f81-460f-872c-7f45e659bcce ==============================
[0m23:52:50.748935 [info ] [MainThread]: Running with dbt=1.8.5
[0m23:52:50.751653 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'profiles_dir': '/workspaces/fxtn7c3oiwkalwzz', 'log_path': '/workspaces/fxtn7c3oiwkalwzz/repository/logs', 'debug': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'introspect': 'True', 'static_parser': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m23:52:51.786106 [info ] [MainThread]: Initializing dbt-loom=0.5.6
[0m23:52:51.789331 [info ] [MainThread]: dbt-loom: Patching ref protection methods to support dbt-loom dependencies.
[0m23:52:51.791980 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff845833a0>]}
[0m23:52:51.859721 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff86565160>]}
[0m23:52:51.862812 [info ] [MainThread]: Registered adapter: snowflake=1.8.3
[0m23:52:51.926072 [debug] [MainThread]: checksum: 643640a45b16e0d012867be4ac17daaa0c3ce97300faec3ce9a6de300b5e1c09, vars: {}, profile: , target: , version: 1.8.5
[0m23:52:52.679328 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m23:52:52.681929 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m23:52:52.684520 [info ] [MainThread]: dbt-loom: Injecting nodes
[0m23:52:52.686886 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'plugin_get_nodes', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff841da610>]}
[0m23:52:52.697654 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.demo_project.intermediate
[0m23:52:52.773492 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff844ab130>]}
[0m23:52:53.097118 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff86565ac0>]}
[0m23:52:53.099806 [info ] [MainThread]: Found 38 models, 2 operations, 1 test, 7 sources, 1539 macros
[0m23:52:53.102278 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff84033f70>]}
[0m23:52:53.107802 [info ] [MainThread]: 
[0m23:52:53.110476 [debug] [MainThread]: Acquiring new snowflake connection 'master'
[0m23:52:53.120831 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_NBA'
[0m23:52:53.122374 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_NBA'
[0m23:52:53.123308 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_NBA'
[0m23:52:53.144906 [debug] [ThreadPool]: Using snowflake connection "list_NBA"
[0m23:52:53.151356 [debug] [ThreadPool]: Using snowflake connection "list_NBA"
[0m23:52:53.157293 [debug] [ThreadPool]: Using snowflake connection "list_NBA"
[0m23:52:53.159425 [debug] [ThreadPool]: On list_NBA: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA"} */
show terse schemas in database NBA
    limit 10000
[0m23:52:53.161771 [debug] [ThreadPool]: On list_NBA: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA"} */
show terse schemas in database NBA
    limit 10000
[0m23:52:53.164001 [debug] [ThreadPool]: On list_NBA: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA"} */
show terse schemas in database NBA
    limit 10000
[0m23:52:53.166336 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:52:53.168570 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:52:53.170775 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:52:53.843486 [debug] [ThreadPool]: SQL status: SUCCESS 2 in 0.675 seconds
[0m23:52:53.847492 [debug] [ThreadPool]: On list_NBA: Close
[0m23:52:53.889718 [debug] [ThreadPool]: SQL status: SUCCESS 2 in 0.723 seconds
[0m23:52:53.893712 [debug] [ThreadPool]: On list_NBA: Close
[0m23:52:53.907994 [debug] [ThreadPool]: SQL status: SUCCESS 2 in 0.737 seconds
[0m23:52:53.911836 [debug] [ThreadPool]: On list_NBA: Close
[0m23:52:54.123919 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_NBA, now create_NBA_dbt_parker_elementary)
[0m23:52:54.125009 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_NBA, now create_NBA_dbt_parker_staging)
[0m23:52:54.125989 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_NBA, now create_NBA_dbt_parker)
[0m23:52:54.126871 [debug] [ThreadPool]: Creating schema "database: "NBA"
schema: "dbt_parker_elementary"
"
[0m23:52:54.129370 [debug] [ThreadPool]: Creating schema "database: "NBA"
schema: "dbt_parker_staging"
"
[0m23:52:54.131895 [debug] [ThreadPool]: Creating schema "database: "NBA"
schema: "dbt_parker"
"
[0m23:52:54.143002 [debug] [ThreadPool]: Using snowflake connection "create_NBA_dbt_parker_elementary"
[0m23:52:54.149132 [debug] [ThreadPool]: Using snowflake connection "create_NBA_dbt_parker_staging"
[0m23:52:54.155346 [debug] [ThreadPool]: Using snowflake connection "create_NBA_dbt_parker"
[0m23:52:54.157596 [debug] [ThreadPool]: On create_NBA_dbt_parker_elementary: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "create_NBA_dbt_parker_elementary"} */
create schema if not exists NBA.dbt_parker_elementary
[0m23:52:54.159872 [debug] [ThreadPool]: On create_NBA_dbt_parker_staging: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "create_NBA_dbt_parker_staging"} */
create schema if not exists NBA.dbt_parker_staging
[0m23:52:54.162192 [debug] [ThreadPool]: On create_NBA_dbt_parker: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "create_NBA_dbt_parker"} */
create schema if not exists NBA.dbt_parker
[0m23:52:54.164324 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m23:52:54.166435 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m23:52:54.168567 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m23:52:54.842562 [debug] [ThreadPool]: SQL status: SUCCESS 1 in 0.676 seconds
[0m23:52:54.845943 [debug] [ThreadPool]: On create_NBA_dbt_parker_staging: Close
[0m23:52:54.873117 [debug] [ThreadPool]: SQL status: SUCCESS 1 in 0.704 seconds
[0m23:52:54.876410 [debug] [ThreadPool]: On create_NBA_dbt_parker: Close
[0m23:52:54.880925 [debug] [ThreadPool]: SQL status: SUCCESS 1 in 0.717 seconds
[0m23:52:54.884360 [debug] [ThreadPool]: On create_NBA_dbt_parker_elementary: Close
[0m23:52:55.069425 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_NBA_dbt_parker_staging, now list_NBA_dbt_parker_elementary)
[0m23:52:55.070615 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_NBA_dbt_parker, now list_NBA_dbt_parker_staging)
[0m23:52:55.071799 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_NBA_dbt_parker_elementary, now list_NBA_dbt_parker)
[0m23:52:55.086825 [debug] [ThreadPool]: Using snowflake connection "list_NBA_dbt_parker_elementary"
[0m23:52:55.092414 [debug] [ThreadPool]: Using snowflake connection "list_NBA_dbt_parker_staging"
[0m23:52:55.099668 [debug] [ThreadPool]: Using snowflake connection "list_NBA_dbt_parker"
[0m23:52:55.106750 [debug] [ThreadPool]: On list_NBA_dbt_parker: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA_dbt_parker"} */
show objects in NBA.dbt_parker limit 10000
[0m23:52:55.104378 [debug] [ThreadPool]: On list_NBA_dbt_parker_staging: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA_dbt_parker_staging"} */
show objects in NBA.dbt_parker_staging limit 10000
[0m23:52:55.101869 [debug] [ThreadPool]: On list_NBA_dbt_parker_elementary: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA_dbt_parker_elementary"} */
show objects in NBA.dbt_parker_elementary limit 10000
[0m23:52:55.114748 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m23:52:55.112350 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m23:52:55.109888 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m23:52:55.706534 [debug] [ThreadPool]: SQL status: SUCCESS 0 in 0.597 seconds
[0m23:52:55.710710 [debug] [ThreadPool]: On list_NBA_dbt_parker: Close
[0m23:52:55.761036 [debug] [ThreadPool]: SQL status: SUCCESS 0 in 0.646 seconds
[0m23:52:55.762775 [debug] [ThreadPool]: SQL status: SUCCESS 0 in 0.650 seconds
[0m23:52:55.768578 [debug] [ThreadPool]: On list_NBA_dbt_parker_staging: Close
[0m23:52:55.764969 [debug] [ThreadPool]: On list_NBA_dbt_parker_elementary: Close
[0m23:52:55.990324 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83bd5040>]}
[0m23:52:55.993194 [info ] [MainThread]: 
[0m23:52:55.995675 [info ] [MainThread]: Running 1 on-run-start hook
[0m23:52:56.037131 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-start-0"
[0m23:52:56.055756 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-start.0 ................................... [RUN]
[0m23:52:56.058472 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-start.0 ...................................... [[32mOK[0m in 0.00s]
[0m23:52:56.060956 [info ] [MainThread]: 
[0m23:52:56.063820 [info ] [MainThread]: Concurrency: 8 threads (target='dev')
[0m23:52:56.066148 [info ] [MainThread]: 
[0m23:52:56.072012 [debug] [Thread-1  ]: Began running node model.demo_project.nba_games
[0m23:52:56.073406 [debug] [Thread-2  ]: Began running node model.demo_project.nba_player_game_logs
[0m23:52:56.079919 [info ] [Thread-2  ]: 2 of 38 START sql table model dbt_parker_staging.nba_player_game_logs .......... [RUN]
[0m23:52:56.074786 [debug] [Thread-4  ]: Began running node model.demo_project.nba_player_salaries
[0m23:52:56.075414 [debug] [Thread-5  ]: Began running node model.demo_project.nba_team_spend
[0m23:52:56.087307 [info ] [Thread-5  ]: 5 of 38 START sql table model dbt_parker_staging.nba_team_spend ................ [RUN]
[0m23:52:56.089979 [debug] [Thread-5  ]: Acquiring new snowflake connection 'model.demo_project.nba_team_spend'
[0m23:52:56.092345 [debug] [Thread-5  ]: Began compiling node model.demo_project.nba_team_spend
[0m23:52:56.078262 [debug] [Thread-8  ]: Began running node model.elementary.data_monitoring_metrics
[0m23:52:56.102409 [info ] [Thread-8  ]: 8 of 38 START sql incremental model dbt_parker_elementary.data_monitoring_metrics  [RUN]
[0m23:52:56.082423 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly list_NBA_dbt_parker_staging, now model.demo_project.nba_player_game_logs)
[0m23:52:56.107418 [debug] [Thread-2  ]: Began compiling node model.demo_project.nba_player_game_logs
[0m23:52:56.076076 [debug] [Thread-6  ]: Began running node model.demo_project.nba_team_stats
[0m23:52:56.118033 [info ] [Thread-6  ]: 6 of 38 START sql table model dbt_parker_staging.nba_team_stats ................ [RUN]
[0m23:52:56.076876 [info ] [Thread-1  ]: 1 of 38 START sql table model dbt_parker_staging.nba_games ..................... [RUN]
[0m23:52:56.101444 [debug] [Thread-5  ]: Writing injected SQL for node "model.demo_project.nba_team_spend"
[0m23:52:56.074132 [debug] [Thread-3  ]: Began running node model.demo_project.nba_player_info
[0m23:52:56.104968 [debug] [Thread-8  ]: Acquiring new snowflake connection 'model.elementary.data_monitoring_metrics'
[0m23:52:56.084916 [info ] [Thread-4  ]: 4 of 38 START sql table model dbt_parker_staging.nba_player_salaries ........... [RUN]
[0m23:52:56.132028 [debug] [Thread-4  ]: Acquiring new snowflake connection 'model.demo_project.nba_player_salaries'
[0m23:52:56.134343 [debug] [Thread-4  ]: Began compiling node model.demo_project.nba_player_salaries
[0m23:52:56.120543 [debug] [Thread-6  ]: Acquiring new snowflake connection 'model.demo_project.nba_team_stats'
[0m23:52:56.148663 [debug] [Thread-6  ]: Began compiling node model.demo_project.nba_team_stats
[0m23:52:56.127113 [info ] [Thread-3  ]: 3 of 38 START sql table model dbt_parker_staging.nba_player_info ............... [RUN]
[0m23:52:56.159271 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly list_NBA_dbt_parker, now model.demo_project.nba_player_info)
[0m23:52:56.161797 [debug] [Thread-3  ]: Began compiling node model.demo_project.nba_player_info
[0m23:52:56.077366 [debug] [Thread-7  ]: Began running node model.demo_project.nba_teams
[0m23:52:56.134984 [debug] [Thread-5  ]: Began executing node model.demo_project.nba_team_spend
[0m23:52:56.180554 [warn ] [Thread-5  ]: [[33mWARNING[0m]: Installed package 'elementary' is overriding the built-in
materialization 'table'. Overrides of built-in materializations from installed
packages will be deprecated in future versions of dbt. Please refer to https://d
ocs.getdbt.com/reference/global-configs/legacy-behaviors#require_explicit_packag
e_overrides_for_builtin_materializations for detailed documentation and
suggested workarounds.
[0m23:52:56.122938 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly list_NBA_dbt_parker_elementary, now model.demo_project.nba_games)
[0m23:52:56.185604 [debug] [Thread-1  ]: Began compiling node model.demo_project.nba_games
[0m23:52:56.129299 [debug] [Thread-8  ]: Began compiling node model.elementary.data_monitoring_metrics
[0m23:52:56.117076 [debug] [Thread-2  ]: Writing injected SQL for node "model.demo_project.nba_player_game_logs"
[0m23:52:56.172632 [info ] [Thread-7  ]: 7 of 38 START sql table model dbt_parker_staging.nba_teams ..................... [RUN]
[0m23:52:56.171707 [debug] [Thread-3  ]: Writing injected SQL for node "model.demo_project.nba_player_info"
[0m23:52:56.146110 [debug] [Thread-4  ]: Writing injected SQL for node "model.demo_project.nba_player_salaries"
[0m23:52:56.183108 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'deprecation', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'property_': 'warn', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff806e1fa0>]}
[0m23:52:56.158241 [debug] [Thread-6  ]: Writing injected SQL for node "model.demo_project.nba_team_stats"
[0m23:52:56.194288 [debug] [Thread-1  ]: Writing injected SQL for node "model.demo_project.nba_games"
[0m23:52:56.330541 [debug] [Thread-8  ]: Writing injected SQL for node "model.elementary.data_monitoring_metrics"
[0m23:52:56.331566 [debug] [Thread-7  ]: Acquiring new snowflake connection 'model.demo_project.nba_teams'
[0m23:52:56.332230 [debug] [Thread-2  ]: Began executing node model.demo_project.nba_player_game_logs
[0m23:52:56.338256 [debug] [Thread-3  ]: Began executing node model.demo_project.nba_player_info
[0m23:52:56.345961 [debug] [Thread-4  ]: Began executing node model.demo_project.nba_player_salaries
[0m23:52:56.383158 [debug] [Thread-5  ]: Writing runtime sql for node "model.demo_project.nba_team_spend"
[0m23:52:56.386257 [debug] [Thread-6  ]: Began executing node model.demo_project.nba_team_stats
[0m23:52:56.388846 [debug] [Thread-1  ]: Began executing node model.demo_project.nba_games
[0m23:52:56.389608 [debug] [Thread-7  ]: Began compiling node model.demo_project.nba_teams
[0m23:52:56.398753 [debug] [Thread-2  ]: Writing runtime sql for node "model.demo_project.nba_player_game_logs"
[0m23:52:56.405756 [debug] [Thread-3  ]: Writing runtime sql for node "model.demo_project.nba_player_info"
[0m23:52:56.411796 [debug] [Thread-8  ]: Began executing node model.elementary.data_monitoring_metrics
[0m23:52:56.414024 [debug] [Thread-4  ]: Writing runtime sql for node "model.demo_project.nba_player_salaries"
[0m23:52:56.422512 [debug] [Thread-6  ]: Writing runtime sql for node "model.demo_project.nba_team_stats"
[0m23:52:56.429622 [debug] [Thread-1  ]: Writing runtime sql for node "model.demo_project.nba_games"
[0m23:52:56.438582 [debug] [Thread-7  ]: Writing injected SQL for node "model.demo_project.nba_teams"
[0m23:52:56.441952 [debug] [Thread-5  ]: Using snowflake connection "model.demo_project.nba_team_spend"
[0m23:52:56.447960 [debug] [Thread-2  ]: Using snowflake connection "model.demo_project.nba_player_game_logs"
[0m23:52:56.515423 [debug] [Thread-2  ]: On model.demo_project.nba_player_game_logs: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.demo_project.nba_player_game_logs"} */
create or replace transient table NBA.dbt_parker_staging.nba_player_game_logs
         as
        (WITH source AS (
    SELECT 
        *,
        
    DATEADD(
        'second', 
        UNIFORM(0, 86400, RANDOM()), 
        CURRENT_DATE
    )
 AS timestamp_column -- use the macro here to generate random timestamps
    FROM 
        NBA.PUBLIC.PLAYER_GAME_LOGS
),

renamed AS (
    SELECT
        player_id,
        player_name,
        nickname,
        team_id,
        team_abbreviation,
        team_name,
        game_id,
        game_date,
        matchup,
        wl as win_loss,
        min AS mins_played,
        fgm AS field_goals_made,
        fga AS field_goals_attempted,
        fg_pct AS field_goal_pct,
        fg3m AS three_point_made,
        fg3a AS three_point_attempted,
        fg3_pct AS three_point_pct,
        ftm AS free_throws_made,
        fta AS free_throws_attempted,
        ft_pct AS free_throw_pct,
        oreb AS offensive_rebounds,
        dreb AS defensive_rebounds,
        reb AS total_rebounds,
        ast AS assists,
        tov AS turnovers,
        stl AS steals,
        blk AS blocks,
        pf AS personal_fouls,
        pts AS points,
        plus_minus AS plus_minus,
        season,
        game_type,
        timestamp_column -- keep the generated timestamp
    FROM 
        source
)

SELECT
    *
FROM
    renamed
        );
[0m23:52:56.517887 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m23:52:56.503975 [debug] [Thread-4  ]: Using snowflake connection "model.demo_project.nba_player_salaries"
[0m23:52:56.508052 [debug] [Thread-6  ]: Using snowflake connection "model.demo_project.nba_team_stats"
[0m23:52:56.510849 [debug] [Thread-5  ]: On model.demo_project.nba_team_spend: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.demo_project.nba_team_spend"} */
create or replace transient table NBA.dbt_parker_staging.nba_team_spend
         as
        (WITH source AS (
    SELECT 
        *
    FROM 
        NBA.PUBLIC.TEAM_SPEND
),

renamed as (
    SELECT 
        team_id,
        team_city,
        team_name,
        full_name,
        year as season,
        total_spend as team_payroll,
        active_payroll,
        dead_payroll,
        luxury_tax_payroll,
        luxury_tax_space,
        luxury_tax_bill
    FROM 
        source
)

SELECT
    *
FROM
    renamed
        );
[0m23:52:56.513114 [debug] [Thread-1  ]: Using snowflake connection "model.demo_project.nba_games"
[0m23:52:56.513811 [debug] [Thread-7  ]: Began executing node model.demo_project.nba_teams
[0m23:52:56.538619 [debug] [Thread-7  ]: Writing runtime sql for node "model.demo_project.nba_teams"
[0m23:52:56.500619 [debug] [Thread-8  ]: Writing runtime sql for node "model.elementary.data_monitoring_metrics"
[0m23:52:56.523147 [debug] [Thread-4  ]: On model.demo_project.nba_player_salaries: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.demo_project.nba_player_salaries"} */
create or replace transient table NBA.dbt_parker_staging.nba_player_salaries
         as
        (WITH source AS (
    SELECT 
        player_id,
        player_name,
        salary,
        season
    FROM 
        NBA.PUBLIC.PLAYER_SALARIES
)

SELECT 
    *
FROM
    source
        );
[0m23:52:56.525566 [debug] [Thread-6  ]: On model.demo_project.nba_team_stats: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.demo_project.nba_team_stats"} */
create or replace transient table NBA.dbt_parker_staging.nba_team_stats
         as
        (WITH source AS (
    SELECT 
        *
    FROM 
        NBA.PUBLIC.TEAM_STATS
),
renamed AS (
    SELECT 
        team_id,
        team_city,
        team_name,
        year AS season,
        gp AS games_played,
        wins,
        losses,
        conf_rank AS conference_rank,
        div_rank AS division_rank,
        po_wins AS playoff_wins,
        po_losses AS playoff_losses,
        nba_finals_appearance,
        fgm AS field_goals_made,
        fga AS field_goals_attempted,
        fg3m AS three_pointers_made,
        fg3a AS three_pointers_attempted,
        ftm AS free_throws_made,
        fta AS free_throws_attempted,
        oreb AS offensive_rebounds,
        dreb AS defensive_rebounds,
        reb AS total_rebounds,
        ast AS assists,
        pf AS personal_fouls,
        stl AS steals,
        tov AS turnovers,
        blk AS blocks,
        pts AS points
    FROM
        source
)

SELECT 
    *
FROM
    renamed
        );
[0m23:52:56.527932 [debug] [Thread-5  ]: Opening a new connection, currently in state init
[0m23:52:56.530316 [debug] [Thread-1  ]: On model.demo_project.nba_games: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.demo_project.nba_games"} */
create or replace transient table NBA.dbt_parker_staging.nba_games
         as
        (WITH source AS (
    SELECT 
        *
    FROM 
        NBA.PUBLIC.GAMES
),


renamed AS (
    SELECT 
        season_id,
        team_id,
        team_abbreviation,
        team_name,
        game_id,
        game_date,
        matchup,
        wl,
        min AS game_duration_mins,
        pts AS points,
        fgm AS field_goals_made,
        fga AS field_goals_attempted,
        fg_pct AS field_goal_pct,
        fg3m AS three_point_made,
        fg3a AS three_point_attempted,
        fg3_pct AS three_point_pct,
        ftm AS free_throws_made,
        fta AS free_throws_attempted,
        ft_pct AS free_throw_pct,
        oreb AS offensive_rebounds,
        dreb AS defensive_rebounds,
        reb AS total_rebounds,
        ast AS assists,
        stl AS steals,
        blk AS blocks,
        tov AS turnovers,
        pf AS personal_fouls,
        plus_minus,
        season,
        game_type
    FROM 
        source
)

SELECT 
    *
FROM
    renamed
        );
[0m23:52:56.555082 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m23:52:56.545331 [debug] [Thread-7  ]: Using snowflake connection "model.demo_project.nba_teams"
[0m23:52:56.547071 [debug] [Thread-4  ]: Opening a new connection, currently in state init
[0m23:52:56.549846 [debug] [Thread-6  ]: Opening a new connection, currently in state init
[0m23:52:56.449288 [debug] [Thread-3  ]: Using snowflake connection "model.demo_project.nba_player_info"
[0m23:52:56.560629 [debug] [Thread-7  ]: On model.demo_project.nba_teams: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.demo_project.nba_teams"} */
create or replace transient table NBA.dbt_parker_staging.nba_teams
         as
        (WITH source AS (
    SELECT 
        *
    FROM 
        NBA.PUBLIC.TEAMS
),

renamed AS (
    SELECT
        id as team_id,
        full_name,
        abbreviation as team_name_abbreviation,
        nickname,
        city,
        state,
        year_founded
    FROM
        source
)

SELECT 
    *
FROM
    renamed
        );
[0m23:52:56.577561 [debug] [Thread-7  ]: Opening a new connection, currently in state init
[0m23:52:56.574956 [debug] [Thread-3  ]: On model.demo_project.nba_player_info: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.demo_project.nba_player_info"} */
create or replace transient table NBA.dbt_parker_staging.nba_player_info
         as
        (WITH source AS (
    SELECT 
        person_id AS player_id,
        first_name,
        last_name,
        team_name,
        position,
        height,
        weight
    FROM 
        NBA.PUBLIC.COMMON_PLAYER_INFO
)

SELECT 
    *
FROM
    source
        );
[0m23:52:56.590415 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m23:52:56.567916 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m23:52:56.597041 [debug] [Thread-8  ]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
create or replace transient table NBA.dbt_parker_elementary.data_monitoring_metrics
         as
        (


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar) as id

,
                
        cast('dummy_string' as varchar) as full_table_name

,
                
        cast('dummy_string' as varchar) as column_name

,
                
        cast('dummy_string' as varchar) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar) as dimension

,
                
        cast('dummy_string' as varchar) as dimension_value

,
                
        cast('dummy_string' as varchar) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0

        );
[0m23:52:56.599673 [debug] [Thread-8  ]: Opening a new connection, currently in state init
[0m23:52:57.775205 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 1.175 seconds
[0m23:52:57.793700 [debug] [Thread-8  ]: Applying DROP to: NBA.dbt_parker_elementary.data_monitoring_metrics__dbt_tmp
[0m23:52:57.804117 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.data_monitoring_metrics"
[0m23:52:57.806668 [debug] [Thread-8  ]: On model.elementary.data_monitoring_metrics: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.data_monitoring_metrics"} */
drop view if exists NBA.dbt_parker_elementary.data_monitoring_metrics__dbt_tmp cascade
[0m23:52:57.982415 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.173 seconds
[0m23:52:58.019675 [debug] [Thread-8  ]: On model.elementary.data_monitoring_metrics: Close
[0m23:52:58.119061 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 1.541 seconds
[0m23:52:58.120844 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 1.593 seconds
[0m23:52:58.124686 [debug] [Thread-7  ]: On model.demo_project.nba_teams: Close
[0m23:52:58.136149 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 1.586 seconds
[0m23:52:58.141896 [debug] [Thread-5  ]: On model.demo_project.nba_team_spend: Close
[0m23:52:58.143703 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 1.553 seconds
[0m23:52:58.159936 [debug] [Thread-3  ]: On model.demo_project.nba_player_info: Close
[0m23:52:58.152011 [debug] [Thread-6  ]: On model.demo_project.nba_team_stats: Close
[0m23:52:58.185193 [debug] [Thread-4  ]: SQL status: SUCCESS 1 in 1.638 seconds
[0m23:52:58.190255 [debug] [Thread-4  ]: On model.demo_project.nba_player_salaries: Close
[0m23:52:58.194386 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839ac610>]}
[0m23:52:58.198106 [info ] [Thread-8  ]: 8 of 38 OK created sql incremental model dbt_parker_elementary.data_monitoring_metrics  [[32mSUCCESS 1[0m in 2.09s]
[0m23:52:58.200832 [debug] [Thread-8  ]: Finished running node model.elementary.data_monitoring_metrics
[0m23:52:58.203319 [debug] [Thread-8  ]: Began running node model.elementary.dbt_columns
[0m23:52:58.206497 [info ] [Thread-8  ]: 9 of 38 START sql incremental model dbt_parker_elementary.dbt_columns .......... [RUN]
[0m23:52:58.209081 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.elementary.data_monitoring_metrics, now model.elementary.dbt_columns)
[0m23:52:58.211428 [debug] [Thread-8  ]: Began compiling node model.elementary.dbt_columns
[0m23:52:58.230806 [debug] [Thread-8  ]: Writing injected SQL for node "model.elementary.dbt_columns"
[0m23:52:58.241574 [debug] [Thread-8  ]: Began executing node model.elementary.dbt_columns
[0m23:52:58.259840 [debug] [Thread-8  ]: Writing runtime sql for node "model.elementary.dbt_columns"
[0m23:52:58.269345 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:52:58.271859 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
create or replace  table NBA.dbt_parker_elementary.dbt_columns
         as
        (

select * from (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as parent_unique_id

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('dummy_string' as varchar) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as resource_type

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


        ) as empty_table
        where 1 = 0
        );
[0m23:52:58.274500 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m23:52:58.342988 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839ac760>]}
[0m23:52:58.345427 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839d9ee0>]}
[0m23:52:58.346555 [info ] [Thread-7  ]: 7 of 38 OK created sql table model dbt_parker_staging.nba_teams ................ [[32mSUCCESS 1[0m in 2.01s]
[0m23:52:58.353001 [debug] [Thread-7  ]: Finished running node model.demo_project.nba_teams
[0m23:52:58.351175 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839acb50>]}
[0m23:52:58.358294 [info ] [Thread-5  ]: 5 of 38 OK created sql table model dbt_parker_staging.nba_team_spend ........... [[32mSUCCESS 1[0m in 2.26s]
[0m23:52:58.361051 [debug] [Thread-5  ]: Finished running node model.demo_project.nba_team_spend
[0m23:52:58.363633 [debug] [Thread-5  ]: Began running node model.elementary.dbt_invocations
[0m23:52:58.366166 [info ] [Thread-5  ]: 11 of 38 START sql incremental model dbt_parker_elementary.dbt_invocations ..... [RUN]
[0m23:52:58.354052 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839ac880>]}
[0m23:52:58.371433 [info ] [Thread-6  ]: 6 of 38 OK created sql table model dbt_parker_staging.nba_team_stats ........... [[32mSUCCESS 1[0m in 2.23s]
[0m23:52:58.374143 [debug] [Thread-6  ]: Finished running node model.demo_project.nba_team_stats
[0m23:52:58.376639 [debug] [Thread-6  ]: Began running node model.elementary.dbt_metrics
[0m23:52:58.379302 [info ] [Thread-6  ]: 12 of 38 START sql incremental model dbt_parker_elementary.dbt_metrics ......... [RUN]
[0m23:52:58.349677 [info ] [Thread-3  ]: 3 of 38 OK created sql table model dbt_parker_staging.nba_player_info .......... [[32mSUCCESS 1[0m in 2.19s]
[0m23:52:58.386791 [debug] [Thread-3  ]: Finished running node model.demo_project.nba_player_info
[0m23:52:58.389270 [debug] [Thread-3  ]: Began running node model.elementary.dbt_models
[0m23:52:58.382548 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.demo_project.nba_team_stats, now model.elementary.dbt_metrics)
[0m23:52:58.384148 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83a80f10>]}
[0m23:52:58.396680 [info ] [Thread-4  ]: 4 of 38 OK created sql table model dbt_parker_staging.nba_player_salaries ...... [[32mSUCCESS 1[0m in 2.25s]
[0m23:52:58.399427 [debug] [Thread-4  ]: Finished running node model.demo_project.nba_player_salaries
[0m23:52:58.401932 [debug] [Thread-4  ]: Began running node model.elementary.dbt_run_results
[0m23:52:58.404423 [info ] [Thread-4  ]: 14 of 38 START sql incremental model dbt_parker_elementary.dbt_run_results ..... [RUN]
[0m23:52:58.406897 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.demo_project.nba_player_salaries, now model.elementary.dbt_run_results)
[0m23:52:58.409358 [debug] [Thread-4  ]: Began compiling node model.elementary.dbt_run_results
[0m23:52:58.391772 [info ] [Thread-3  ]: 13 of 38 START sql incremental model dbt_parker_elementary.dbt_models .......... [RUN]
[0m23:52:58.428567 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.demo_project.nba_player_info, now model.elementary.dbt_models)
[0m23:52:58.368695 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.demo_project.nba_team_spend, now model.elementary.dbt_invocations)
[0m23:52:58.355432 [debug] [Thread-7  ]: Began running node model.elementary.dbt_exposures
[0m23:52:58.393989 [debug] [Thread-6  ]: Began compiling node model.elementary.dbt_metrics
[0m23:52:58.435413 [debug] [Thread-3  ]: Began compiling node model.elementary.dbt_models
[0m23:52:58.443201 [debug] [Thread-5  ]: Began compiling node model.elementary.dbt_invocations
[0m23:52:58.444561 [debug] [Thread-4  ]: Writing injected SQL for node "model.elementary.dbt_run_results"
[0m23:52:58.447417 [info ] [Thread-7  ]: 10 of 38 START sql incremental model dbt_parker_elementary.dbt_exposures ....... [RUN]
[0m23:52:58.525086 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.demo_project.nba_teams, now model.elementary.dbt_exposures)
[0m23:52:58.498996 [debug] [Thread-3  ]: Writing injected SQL for node "model.elementary.dbt_models"
[0m23:52:58.519767 [debug] [Thread-4  ]: Began executing node model.elementary.dbt_run_results
[0m23:52:58.472888 [debug] [Thread-6  ]: Writing injected SQL for node "model.elementary.dbt_metrics"
[0m23:52:58.524311 [debug] [Thread-5  ]: Writing injected SQL for node "model.elementary.dbt_invocations"
[0m23:52:58.553272 [debug] [Thread-6  ]: Began executing node model.elementary.dbt_metrics
[0m23:52:58.548275 [debug] [Thread-4  ]: Writing runtime sql for node "model.elementary.dbt_run_results"
[0m23:52:58.549353 [debug] [Thread-3  ]: Began executing node model.elementary.dbt_models
[0m23:52:58.533165 [debug] [Thread-7  ]: Began compiling node model.elementary.dbt_exposures
[0m23:52:58.560893 [debug] [Thread-5  ]: Began executing node model.elementary.dbt_invocations
[0m23:52:58.652518 [debug] [Thread-6  ]: Writing runtime sql for node "model.elementary.dbt_metrics"
[0m23:52:58.662230 [debug] [Thread-4  ]: Using snowflake connection "model.elementary.dbt_run_results"
[0m23:52:58.665654 [debug] [Thread-3  ]: Writing runtime sql for node "model.elementary.dbt_models"
[0m23:52:58.666903 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 2.112 seconds
[0m23:52:58.686125 [debug] [Thread-7  ]: Writing injected SQL for node "model.elementary.dbt_exposures"
[0m23:52:58.694248 [debug] [Thread-5  ]: Writing runtime sql for node "model.elementary.dbt_invocations"
[0m23:52:58.696966 [debug] [Thread-4  ]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
create or replace  table NBA.dbt_parker_elementary.dbt_run_results
         as
        (

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as varchar) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as invocation_id

,
                
        cast('dummy_string' as varchar) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as message

,
                
        cast('dummy_string' as varchar) as status

,
                
        cast('dummy_string' as varchar) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar) as execute_started_at

,
                
        cast('dummy_string' as varchar) as execute_completed_at

,
                
        cast('dummy_string' as varchar) as compile_started_at

,
                
        cast('dummy_string' as varchar) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar) as query_id

,
                
        cast('dummy_string' as varchar) as thread_id

,
                
        cast('dummy_string' as varchar) as materialization

,
                
        cast('dummy_string' as varchar) as adapter_response


        ) as empty_table
        where 1 = 0
        );
[0m23:52:58.718877 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m23:52:58.706330 [debug] [Thread-1  ]: On model.demo_project.nba_games: Close
[0m23:52:58.713234 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:52:58.717345 [debug] [Thread-7  ]: Began executing node model.elementary.dbt_exposures
[0m23:52:58.701137 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_metrics"
[0m23:52:58.743107 [debug] [Thread-6  ]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
create or replace  table NBA.dbt_parker_elementary.dbt_metrics
         as
        (

select * from (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as label

,
                
        cast('dummy_string' as varchar) as model

,
                
        cast('dummy_string' as varchar) as type

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as sql

,
                
        cast('dummy_string' as varchar) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


        ) as empty_table
        where 1 = 0
        );
[0m23:52:58.731149 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
create or replace  table NBA.dbt_parker_elementary.dbt_models
         as
        (

select * from (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as alias

,
                
        cast('dummy_string' as varchar) as checksum

,
                
        cast('dummy_string' as varchar) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as owner

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as patch_path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


        ) as empty_table
        where 1 = 0
        );
[0m23:52:58.748016 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m23:52:58.742144 [debug] [Thread-7  ]: Writing runtime sql for node "model.elementary.dbt_exposures"
[0m23:52:58.745579 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m23:52:58.724203 [debug] [Thread-5  ]: Using snowflake connection "model.elementary.dbt_invocations"
[0m23:52:58.762779 [debug] [Thread-5  ]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
create or replace  table NBA.dbt_parker_elementary.dbt_invocations
         as
        (

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as job_run_id

,
                
        cast('dummy_string' as varchar) as run_started_at

,
                
        cast('dummy_string' as varchar) as run_completed_at

,
                
        cast('dummy_string' as varchar) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar) as command

,
                
        cast('dummy_string' as varchar) as dbt_version

,
                
        cast('dummy_string' as varchar) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as vars

,
                
        cast('dummy_string' as varchar) as target_name

,
                
        cast('dummy_string' as varchar) as target_database

,
                
        cast('dummy_string' as varchar) as target_schema

,
                
        cast('dummy_string' as varchar) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as yaml_selector

,
                
        cast('dummy_string' as varchar) as project_id

,
                
        cast('dummy_string' as varchar) as project_name

,
                
        cast('dummy_string' as varchar) as env

,
                
        cast('dummy_string' as varchar) as env_id

,
                
        cast('dummy_string' as varchar) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as cause

,
                
        cast('dummy_string' as varchar) as pull_request_id

,
                
        cast('dummy_string' as varchar) as git_sha

,
                
        cast('dummy_string' as varchar) as orchestrator

,
                
        cast('dummy_string' as varchar) as dbt_user

,
                
        cast('dummy_string' as varchar) as job_url

,
                
        cast('dummy_string' as varchar) as job_run_url

,
                
        cast('dummy_string' as varchar) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0
        );
[0m23:52:58.765195 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m23:52:58.760976 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_exposures"
[0m23:52:58.771987 [debug] [Thread-7  ]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
create or replace  table NBA.dbt_parker_elementary.dbt_exposures
         as
        (

select * from (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as maturity

,
                
        cast('dummy_string' as varchar) as type

,
                
        cast('dummy_string' as varchar) as owner_email

,
                
        cast('dummy_string' as varchar) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as url

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_columns

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash

,
                
        cast('dummy_string' as varchar) as label

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as raw_queries


        ) as empty_table
        where 1 = 0
        );
[0m23:52:58.774486 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m23:52:58.918864 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839ad9d0>]}
[0m23:52:58.921897 [info ] [Thread-1  ]: 1 of 38 OK created sql table model dbt_parker_staging.nba_games ................ [[32mSUCCESS 1[0m in 2.80s]
[0m23:52:58.924633 [debug] [Thread-1  ]: Finished running node model.demo_project.nba_games
[0m23:52:58.927104 [debug] [Thread-1  ]: Began running node model.elementary.dbt_seeds
[0m23:52:58.929730 [info ] [Thread-1  ]: 15 of 38 START sql incremental model dbt_parker_elementary.dbt_seeds ........... [RUN]
[0m23:52:58.932267 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.demo_project.nba_games, now model.elementary.dbt_seeds)
[0m23:52:58.934797 [debug] [Thread-1  ]: Began compiling node model.elementary.dbt_seeds
[0m23:52:58.966325 [debug] [Thread-1  ]: Writing injected SQL for node "model.elementary.dbt_seeds"
[0m23:52:58.999122 [debug] [Thread-1  ]: Began executing node model.elementary.dbt_seeds
[0m23:52:59.024505 [debug] [Thread-1  ]: Writing runtime sql for node "model.elementary.dbt_seeds"
[0m23:52:59.034054 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.dbt_seeds"
[0m23:52:59.036625 [debug] [Thread-1  ]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
create or replace  table NBA.dbt_parker_elementary.dbt_seeds
         as
        (

select * from (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as alias

,
                
        cast('dummy_string' as varchar) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as owner

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


        ) as empty_table
        where 1 = 0
        );
[0m23:52:59.039008 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m23:52:59.501296 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 1.227 seconds
[0m23:52:59.513357 [debug] [Thread-8  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_columns__dbt_tmp
[0m23:52:59.516640 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:52:59.519101 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
drop view if exists NBA.dbt_parker_elementary.dbt_columns__dbt_tmp cascade
[0m23:52:59.651920 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.130 seconds
[0m23:52:59.705471 [debug] [Thread-8  ]: Elementary: [dbt_columns] Flattening the artifacts.
[0m23:52:59.707499 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 0.960 seconds
[0m23:52:59.730247 [debug] [Thread-3  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_models__dbt_tmp
[0m23:52:59.733504 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:52:59.741083 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
drop view if exists NBA.dbt_parker_elementary.dbt_models__dbt_tmp cascade
[0m23:52:59.732287 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.958 seconds
[0m23:52:59.770638 [debug] [Thread-7  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_exposures__dbt_tmp
[0m23:52:59.778862 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_exposures"
[0m23:52:59.793178 [debug] [Thread-7  ]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
drop view if exists NBA.dbt_parker_elementary.dbt_exposures__dbt_tmp cascade
[0m23:52:59.820620 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 1.075 seconds
[0m23:52:59.836541 [debug] [Thread-6  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_metrics__dbt_tmp
[0m23:52:59.847399 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_metrics"
[0m23:52:59.857303 [debug] [Thread-6  ]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
drop view if exists NBA.dbt_parker_elementary.dbt_metrics__dbt_tmp cascade
[0m23:52:59.845991 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 1.080 seconds
[0m23:52:59.882229 [debug] [Thread-5  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_invocations__dbt_tmp
[0m23:52:59.891167 [debug] [Thread-5  ]: Using snowflake connection "model.elementary.dbt_invocations"
[0m23:52:59.894131 [debug] [Thread-5  ]: On model.elementary.dbt_invocations: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_invocations"} */
drop view if exists NBA.dbt_parker_elementary.dbt_invocations__dbt_tmp cascade
[0m23:52:59.895352 [debug] [Thread-4  ]: SQL status: SUCCESS 1 in 1.176 seconds
[0m23:52:59.913279 [debug] [Thread-4  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_run_results__dbt_tmp
[0m23:52:59.927392 [debug] [Thread-4  ]: Using snowflake connection "model.elementary.dbt_run_results"
[0m23:52:59.931513 [debug] [Thread-4  ]: On model.elementary.dbt_run_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_run_results"} */
drop view if exists NBA.dbt_parker_elementary.dbt_run_results__dbt_tmp cascade
[0m23:52:59.945471 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 0.196 seconds
[0m23:52:59.959618 [debug] [Thread-3  ]: Elementary: [dbt_models] Flattening the artifacts.
[0m23:52:59.961785 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.161 seconds
[0m23:53:00.017279 [debug] [Thread-7  ]: Elementary: [dbt_exposures] Flattening the artifacts.
[0m23:53:00.036704 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 0.998 seconds
[0m23:53:00.058940 [debug] [Thread-1  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_seeds__dbt_tmp
[0m23:53:00.051116 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 0.186 seconds
[0m23:53:00.042992 [debug] [Thread-8  ]: Elementary: [dbt_columns] Flattened 69 artifacts.
[0m23:53:00.062078 [debug] [Thread-4  ]: SQL status: SUCCESS 1 in 0.127 seconds
[0m23:53:00.114252 [debug] [Thread-4  ]: On model.elementary.dbt_run_results: Close
[0m23:53:00.060001 [debug] [Thread-7  ]: Elementary: [dbt_exposures] Flattened 0 artifacts.
[0m23:53:00.064415 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.dbt_seeds"
[0m23:53:00.126129 [debug] [Thread-1  ]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
drop view if exists NBA.dbt_parker_elementary.dbt_seeds__dbt_tmp cascade
[0m23:53:00.092898 [debug] [Thread-6  ]: Elementary: [dbt_metrics] Flattening the artifacts.
[0m23:53:00.110502 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:53:00.135133 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
select metadata_hash 
    from NBA.dbt_parker_elementary.dbt_columns
    order by metadata_hash
[0m23:53:00.123551 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_exposures"
[0m23:53:00.141892 [debug] [Thread-7  ]: On model.elementary.dbt_exposures: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_exposures"} */
select metadata_hash 
    from NBA.dbt_parker_elementary.dbt_exposures
    order by metadata_hash
[0m23:53:00.132561 [debug] [Thread-6  ]: Elementary: [dbt_metrics] Flattened 0 artifacts.
[0m23:53:00.150284 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_metrics"
[0m23:53:00.152794 [debug] [Thread-6  ]: On model.elementary.dbt_metrics: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_metrics"} */
select metadata_hash 
    from NBA.dbt_parker_elementary.dbt_metrics
    order by metadata_hash
[0m23:53:00.063104 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 0.166 seconds
[0m23:53:00.084925 [debug] [Thread-3  ]: Elementary: [dbt_models] Flattened 38 artifacts.
[0m23:53:00.163373 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:53:00.159708 [debug] [Thread-5  ]: On model.elementary.dbt_invocations: Close
[0m23:53:00.165879 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
select metadata_hash 
    from NBA.dbt_parker_elementary.dbt_models
    order by metadata_hash
[0m23:53:00.262610 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 0.134 seconds
[0m23:53:00.271038 [debug] [Thread-1  ]: Elementary: [dbt_seeds] Flattening the artifacts.
[0m23:53:00.276208 [debug] [Thread-1  ]: Elementary: [dbt_seeds] Flattened 0 artifacts.
[0m23:53:00.280021 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.dbt_seeds"
[0m23:53:00.282507 [debug] [Thread-1  ]: On model.elementary.dbt_seeds: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_seeds"} */
select metadata_hash 
    from NBA.dbt_parker_elementary.dbt_seeds
    order by metadata_hash
[0m23:53:00.303740 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839babe0>]}
[0m23:53:00.306706 [info ] [Thread-4  ]: 14 of 38 OK created sql incremental model dbt_parker_elementary.dbt_run_results  [[32mSUCCESS 1[0m in 1.90s]
[0m23:53:00.309428 [debug] [Thread-4  ]: Finished running node model.elementary.dbt_run_results
[0m23:53:00.311850 [debug] [Thread-4  ]: Began running node model.elementary.dbt_snapshots
[0m23:53:00.314476 [info ] [Thread-4  ]: 16 of 38 START sql incremental model dbt_parker_elementary.dbt_snapshots ....... [RUN]
[0m23:53:00.317329 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_run_results, now model.elementary.dbt_snapshots)
[0m23:53:00.319910 [debug] [Thread-4  ]: Began compiling node model.elementary.dbt_snapshots
[0m23:53:00.335699 [debug] [Thread-4  ]: Writing injected SQL for node "model.elementary.dbt_snapshots"
[0m23:53:00.339396 [debug] [Thread-8  ]: SQL status: SUCCESS 0 in 0.202 seconds
[0m23:53:00.337123 [debug] [Thread-7  ]: SQL status: SUCCESS 0 in 0.193 seconds
[0m23:53:00.341504 [debug] [Thread-3  ]: SQL status: SUCCESS 0 in 0.171 seconds
[0m23:53:00.355536 [debug] [Thread-3  ]: Elementary: [dbt_models] Comparing the artifacts state.
[0m23:53:00.344811 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839ba3a0>]}
[0m23:53:00.362116 [info ] [Thread-5  ]: 11 of 38 OK created sql incremental model dbt_parker_elementary.dbt_invocations  [[32mSUCCESS 1[0m in 1.98s]
[0m23:53:00.349369 [debug] [Thread-6  ]: SQL status: SUCCESS 0 in 0.194 seconds
[0m23:53:00.351502 [debug] [Thread-7  ]: Elementary: [dbt_exposures] Comparing the artifacts state.
[0m23:53:00.342312 [debug] [Thread-4  ]: Began executing node model.elementary.dbt_snapshots
[0m23:53:00.358780 [debug] [Thread-3  ]: Elementary: [dbt_models] Artifacts changed.
[0m23:53:00.347505 [debug] [Thread-8  ]: Elementary: [dbt_columns] Comparing the artifacts state.
[0m23:53:00.365568 [debug] [Thread-5  ]: Finished running node model.elementary.dbt_invocations
[0m23:53:00.369928 [debug] [Thread-6  ]: Elementary: [dbt_metrics] Comparing the artifacts state.
[0m23:53:00.405019 [debug] [Thread-6  ]: Elementary: [dbt_metrics] Artifacts did not change.
[0m23:53:00.384315 [debug] [Thread-4  ]: Writing runtime sql for node "model.elementary.dbt_snapshots"
[0m23:53:00.397282 [debug] [Thread-3  ]: Elementary: Deleting from and inserting to: NBA.dbt_parker_elementary.dbt_models
[0m23:53:00.399142 [debug] [Thread-8  ]: Elementary: [dbt_columns] Artifacts changed.
[0m23:53:00.401834 [debug] [Thread-5  ]: Began running node model.elementary.dbt_source_freshness_results
[0m23:53:00.373051 [debug] [Thread-7  ]: Elementary: [dbt_exposures] Artifacts did not change.
[0m23:53:00.408998 [debug] [Thread-6  ]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_metrics]:
[0m23:53:00.422412 [debug] [Thread-4  ]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m23:53:00.424213 [debug] [Thread-8  ]: Elementary: Deleting from and inserting to: NBA.dbt_parker_elementary.dbt_columns
[0m23:53:00.432407 [info ] [Thread-5  ]: 17 of 38 START sql incremental model dbt_parker_elementary.dbt_source_freshness_results  [RUN]
[0m23:53:00.457425 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_invocations, now model.elementary.dbt_source_freshness_results)
[0m23:53:00.459960 [debug] [Thread-5  ]: Began compiling node model.elementary.dbt_source_freshness_results
[0m23:53:00.446873 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_metrics].artifacts_flatten: 0:00:00.000402 (1 runs)
[0m23:53:00.478056 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_metrics]: 0:00:00.315902 (1 runs)
[0m23:53:00.454682 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:53:00.441996 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:53:00.443822 [debug] [Thread-7  ]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_exposures]:
[0m23:53:00.494472 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_exposures].artifacts_flatten: 0:00:00.013400 (1 runs)
[0m23:53:00.497269 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_exposures]: 0:00:00.426507 (1 runs)
[0m23:53:00.486235 [debug] [Thread-6  ]: On model.elementary.dbt_metrics: Close
[0m23:53:00.483422 [debug] [Thread-5  ]: Writing injected SQL for node "model.elementary.dbt_source_freshness_results"
[0m23:53:00.488814 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
create or replace temporary table NBA.dbt_parker_elementary.dbt_columns__tmp_20240920235300453009
         as
        (
        SELECT
        
            *
        
        FROM NBA.dbt_parker_elementary.dbt_columns
        WHERE 1 = 0
    
        );
[0m23:53:00.491341 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
create or replace temporary table NBA.dbt_parker_elementary.dbt_models__tmp_20240920235300428392
         as
        (
        SELECT
        
            *
        
        FROM NBA.dbt_parker_elementary.dbt_models
        WHERE 1 = 0
    
        );
[0m23:53:00.469707 [debug] [Thread-1  ]: SQL status: SUCCESS 0 in 0.184 seconds
[0m23:53:00.520444 [debug] [Thread-1  ]: Elementary: [dbt_seeds] Comparing the artifacts state.
[0m23:53:00.501421 [debug] [Thread-7  ]: On model.elementary.dbt_exposures: Close
[0m23:53:00.516112 [debug] [Thread-5  ]: Began executing node model.elementary.dbt_source_freshness_results
[0m23:53:00.539743 [debug] [Thread-5  ]: Writing runtime sql for node "model.elementary.dbt_source_freshness_results"
[0m23:53:00.523796 [debug] [Thread-1  ]: Elementary: [dbt_seeds] Artifacts did not change.
[0m23:53:00.545418 [debug] [Thread-1  ]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_seeds]:
[0m23:53:00.551031 [debug] [Thread-1  ]: Elementary:     upload_artifacts_to_table[dbt_seeds].artifacts_flatten: 0:00:00.000504 (1 runs)
[0m23:53:00.553963 [debug] [Thread-1  ]: Elementary:     upload_artifacts_to_table[dbt_seeds]: 0:00:00.274268 (1 runs)
[0m23:53:00.449597 [debug] [Thread-4  ]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
create or replace  table NBA.dbt_parker_elementary.dbt_snapshots
         as
        (

select * from (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as alias

,
                
        cast('dummy_string' as varchar) as checksum

,
                
        cast('dummy_string' as varchar) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as owner

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as patch_path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


        ) as empty_table
        where 1 = 0
        );
[0m23:53:00.560606 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m23:53:00.558118 [debug] [Thread-1  ]: On model.elementary.dbt_seeds: Close
[0m23:53:00.549634 [debug] [Thread-5  ]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m23:53:00.573038 [debug] [Thread-5  ]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
create or replace transient table NBA.dbt_parker_elementary.dbt_source_freshness_results
         as
        (


    select * from (
            select
            
                
        cast('dummy_string' as varchar) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as max_loaded_at

,
                
        cast('dummy_string' as varchar) as snapshotted_at

,
                
        cast('dummy_string' as varchar) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar) as status

,
                
        cast('dummy_string' as varchar) as error

,
                
        cast('dummy_string' as varchar) as compile_started_at

,
                
        cast('dummy_string' as varchar) as compile_completed_at

,
                
        cast('dummy_string' as varchar) as execute_started_at

,
                
        cast('dummy_string' as varchar) as execute_completed_at

,
                
        cast('dummy_string' as varchar) as invocation_id

,
                
        cast('dummy_string' as varchar) as warn_after

,
                
        cast('dummy_string' as varchar) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as filter


        ) as empty_table
        where 1 = 0

        );
[0m23:53:00.575681 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m23:53:00.695824 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839ba280>]}
[0m23:53:00.698867 [info ] [Thread-6  ]: 12 of 38 OK created sql incremental model dbt_parker_elementary.dbt_metrics .... [[32mSUCCESS 1[0m in 2.31s]
[0m23:53:00.704468 [debug] [Thread-6  ]: Finished running node model.elementary.dbt_metrics
[0m23:53:00.703474 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83a43df0>]}
[0m23:53:00.706962 [debug] [Thread-6  ]: Began running node model.elementary.dbt_sources
[0m23:53:00.709799 [info ] [Thread-7  ]: 10 of 38 OK created sql incremental model dbt_parker_elementary.dbt_exposures .. [[32mSUCCESS 1[0m in 2.18s]
[0m23:53:00.712694 [info ] [Thread-6  ]: 18 of 38 START sql incremental model dbt_parker_elementary.dbt_sources ......... [RUN]
[0m23:53:00.718253 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_metrics, now model.elementary.dbt_sources)
[0m23:53:00.715343 [debug] [Thread-7  ]: Finished running node model.elementary.dbt_exposures
[0m23:53:00.720785 [debug] [Thread-6  ]: Began compiling node model.elementary.dbt_sources
[0m23:53:00.723862 [debug] [Thread-7  ]: Began running node model.elementary.dbt_tests
[0m23:53:00.851916 [info ] [Thread-7  ]: 19 of 38 START sql incremental model dbt_parker_elementary.dbt_tests ........... [RUN]
[0m23:53:00.869912 [debug] [Thread-6  ]: Writing injected SQL for node "model.elementary.dbt_sources"
[0m23:53:00.870929 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_exposures, now model.elementary.dbt_tests)
[0m23:53:00.875441 [debug] [Thread-7  ]: Began compiling node model.elementary.dbt_tests
[0m23:53:00.876532 [debug] [Thread-6  ]: Began executing node model.elementary.dbt_sources
[0m23:53:00.897644 [debug] [Thread-7  ]: Writing injected SQL for node "model.elementary.dbt_tests"
[0m23:53:00.906537 [debug] [Thread-6  ]: Writing runtime sql for node "model.elementary.dbt_sources"
[0m23:53:00.922118 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839be4c0>]}
[0m23:53:00.923000 [debug] [Thread-7  ]: Began executing node model.elementary.dbt_tests
[0m23:53:00.925120 [info ] [Thread-1  ]: 15 of 38 OK created sql incremental model dbt_parker_elementary.dbt_seeds ...... [[32mSUCCESS 1[0m in 1.99s]
[0m23:53:00.937385 [debug] [Thread-1  ]: Finished running node model.elementary.dbt_seeds
[0m23:53:00.940052 [debug] [Thread-1  ]: Began running node model.elementary.elementary_test_results
[0m23:53:00.927879 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:00.945342 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
create or replace  table NBA.dbt_parker_elementary.dbt_sources
         as
        (

select * from (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('dummy_string' as varchar) as source_name

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as identifier

,
                
        cast('dummy_string' as varchar) as loaded_at_field

,
                
        cast('dummy_string' as varchar) as freshness_warn_after

,
                
        cast('dummy_string' as varchar) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_description

,
                
        cast('dummy_string' as varchar) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('dummy_string' as varchar) as owner

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash


        ) as empty_table
        where 1 = 0
        );
[0m23:53:00.942814 [info ] [Thread-1  ]: 20 of 38 START sql incremental model dbt_parker_elementary.elementary_test_results  [RUN]
[0m23:53:00.952687 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_seeds, now model.elementary.elementary_test_results)
[0m23:53:00.955483 [debug] [Thread-1  ]: Began compiling node model.elementary.elementary_test_results
[0m23:53:00.936338 [debug] [Thread-7  ]: Writing runtime sql for node "model.elementary.dbt_tests"
[0m23:53:00.947946 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m23:53:00.980355 [debug] [Thread-1  ]: Writing injected SQL for node "model.elementary.elementary_test_results"
[0m23:53:00.989555 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:00.992854 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
create or replace  table NBA.dbt_parker_elementary.dbt_tests
         as
        (

select * from (
            select
            
                
        cast('dummy_string' as varchar) as unique_id

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('dummy_string' as varchar) as name

,
                
        cast('dummy_string' as varchar) as short_name

,
                
        cast('dummy_string' as varchar) as alias

,
                
        cast('dummy_string' as varchar) as test_column_name

,
                
        cast('dummy_string' as varchar) as severity

,
                
        cast('dummy_string' as varchar) as warn_if

,
                
        cast('dummy_string' as varchar) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_params

,
                
        cast('dummy_string' as varchar) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes

,
                
        cast('dummy_string' as varchar) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as description

,
                
        cast('dummy_string' as varchar) as package_name

,
                
        cast('dummy_string' as varchar) as type

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as original_path

,
                
        cast('dummy_string' as varchar) as path

,
                
        cast('dummy_string' as varchar) as generated_at

,
                
        cast('dummy_string' as varchar) as metadata_hash

,
                
        cast('dummy_string' as varchar) as quality_dimension


        ) as empty_table
        where 1 = 0
        );
[0m23:53:00.995406 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m23:53:00.994053 [debug] [Thread-1  ]: Began executing node model.elementary.elementary_test_results
[0m23:53:01.009350 [debug] [Thread-1  ]: Writing runtime sql for node "model.elementary.elementary_test_results"
[0m23:53:01.019166 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.elementary_test_results"
[0m23:53:01.021829 [debug] [Thread-1  ]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
create or replace transient table NBA.dbt_parker_elementary.elementary_test_results
         as
        (


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as varchar) as id

,
                
        cast('dummy_string' as varchar) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as model_unique_id

,
                
        cast('dummy_string' as varchar) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar) as database_name

,
                
        cast('dummy_string' as varchar) as schema_name

,
                
        cast('dummy_string' as varchar) as table_name

,
                
        cast('dummy_string' as varchar) as column_name

,
                
        cast('dummy_string' as varchar) as test_type

,
                
        cast('dummy_string' as varchar) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_description

,
                
        cast('dummy_string' as varchar) as owners

,
                
        cast('dummy_string' as varchar) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_query

,
                
        cast('dummy_string' as varchar) as other

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as test_params

,
                
        cast('dummy_string' as varchar) as severity

,
                
        cast('dummy_string' as varchar) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar) as test_short_name

,
                
        cast('dummy_string' as varchar) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0

        );
[0m23:53:01.024552 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m23:53:01.422527 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 0.907 seconds
[0m23:53:01.451218 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.940 seconds
[0m23:53:01.526335 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:53:01.552953 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
describe table NBA.dbt_parker_elementary.dbt_models__tmp_20240920235300428392
[0m23:53:01.531056 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:53:01.561877 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
describe table NBA.dbt_parker_elementary.dbt_columns__tmp_20240920235300453009
[0m23:53:01.699715 [debug] [Thread-3  ]: SQL status: SUCCESS 19 in 0.144 seconds
[0m23:53:01.706857 [debug] [Thread-3  ]: Elementary: Inserting 38 rows to table NBA.dbt_parker_elementary.dbt_models__tmp_20240920235300428392
[0m23:53:01.702400 [debug] [Thread-8  ]: SQL status: SUCCESS 13 in 0.137 seconds
[0m23:53:01.710114 [debug] [Thread-4  ]: SQL status: SUCCESS 1 in 1.149 seconds
[0m23:53:01.724487 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 1.149 seconds
[0m23:53:01.733522 [debug] [Thread-8  ]: Elementary: Inserting 69 rows to table NBA.dbt_parker_elementary.dbt_columns__tmp_20240920235300453009
[0m23:53:01.758430 [debug] [Thread-4  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_snapshots__dbt_tmp
[0m23:53:01.772330 [debug] [Thread-5  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_source_freshness_results__dbt_tmp
[0m23:53:01.820776 [debug] [Thread-5  ]: Using snowflake connection "model.elementary.dbt_source_freshness_results"
[0m23:53:01.828278 [debug] [Thread-5  ]: On model.elementary.dbt_source_freshness_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_source_freshness_results"} */
drop view if exists NBA.dbt_parker_elementary.dbt_source_freshness_results__dbt_tmp cascade
[0m23:53:01.812439 [debug] [Thread-4  ]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m23:53:01.868539 [debug] [Thread-4  ]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
drop view if exists NBA.dbt_parker_elementary.dbt_snapshots__dbt_tmp cascade
[0m23:53:01.990313 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 0.147 seconds
[0m23:53:02.005774 [debug] [Thread-5  ]: On model.elementary.dbt_source_freshness_results: Close
[0m23:53:02.008209 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 1.060 seconds
[0m23:53:02.010162 [debug] [Thread-4  ]: SQL status: SUCCESS 1 in 0.125 seconds
[0m23:53:02.037518 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 1.013 seconds
[0m23:53:02.058846 [debug] [Thread-6  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_sources__dbt_tmp
[0m23:53:02.061139 [debug] [Thread-4  ]: Elementary: [dbt_snapshots] Flattening the artifacts.
[0m23:53:02.074492 [debug] [Thread-1  ]: Applying DROP to: NBA.dbt_parker_elementary.elementary_test_results__dbt_tmp
[0m23:53:02.104179 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 1.109 seconds
[0m23:53:02.121412 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:02.249291 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
drop view if exists NBA.dbt_parker_elementary.dbt_sources__dbt_tmp cascade
[0m23:53:02.192684 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.elementary_test_results"
[0m23:53:02.272473 [debug] [Thread-1  ]: On model.elementary.elementary_test_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.elementary_test_results"} */
drop view if exists NBA.dbt_parker_elementary.elementary_test_results__dbt_tmp cascade
[0m23:53:02.170864 [debug] [Thread-4  ]: Elementary: [dbt_snapshots] Flattened 0 artifacts.
[0m23:53:02.307944 [debug] [Thread-4  ]: Using snowflake connection "model.elementary.dbt_snapshots"
[0m23:53:02.338610 [debug] [Thread-4  ]: On model.elementary.dbt_snapshots: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_snapshots"} */
select metadata_hash 
    from NBA.dbt_parker_elementary.dbt_snapshots
    order by metadata_hash
[0m23:53:02.228141 [debug] [Thread-7  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_tests__dbt_tmp
[0m23:53:02.274220 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff804a9460>]}
[0m23:53:02.382057 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:02.418878 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
drop view if exists NBA.dbt_parker_elementary.dbt_tests__dbt_tmp cascade
[0m23:53:02.409971 [info ] [Thread-5  ]: 17 of 38 OK created sql incremental model dbt_parker_elementary.dbt_source_freshness_results  [[32mSUCCESS 1[0m in 1.82s]
[0m23:53:02.451991 [debug] [Thread-5  ]: Finished running node model.elementary.dbt_source_freshness_results
[0m23:53:02.418110 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 0.150 seconds
[0m23:53:02.464808 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 0.182 seconds
[0m23:53:02.466191 [debug] [Thread-5  ]: Began running node model.elementary.metadata
[0m23:53:02.489149 [debug] [Thread-6  ]: Elementary: [dbt_sources] Flattening the artifacts.
[0m23:53:02.523205 [debug] [Thread-1  ]: On model.elementary.elementary_test_results: Close
[0m23:53:02.566409 [info ] [Thread-5  ]: 21 of 38 START sql table model dbt_parker_elementary.metadata .................. [RUN]
[0m23:53:02.622045 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_source_freshness_results, now model.elementary.metadata)
[0m23:53:02.623823 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.187 seconds
[0m23:53:02.610299 [debug] [Thread-4  ]: SQL status: SUCCESS 0 in 0.264 seconds
[0m23:53:02.718906 [debug] [Thread-4  ]: Elementary: [dbt_snapshots] Comparing the artifacts state.
[0m23:53:02.725679 [debug] [Thread-4  ]: Elementary: [dbt_snapshots] Artifacts did not change.
[0m23:53:02.730592 [debug] [Thread-4  ]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_snapshots]:
[0m23:53:02.745792 [debug] [Thread-4  ]: Elementary:     upload_artifacts_to_table[dbt_snapshots].artifacts_flatten: 0:00:00.000565 (1 runs)
[0m23:53:02.702742 [debug] [Thread-6  ]: Elementary: [dbt_sources] Flattened 7 artifacts.
[0m23:53:02.780009 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:02.716614 [debug] [Thread-2  ]: SQL status: SUCCESS 1 in 6.199 seconds
[0m23:53:02.624848 [debug] [Thread-5  ]: Began compiling node model.elementary.metadata
[0m23:53:02.770499 [debug] [Thread-4  ]: Elementary:     upload_artifacts_to_table[dbt_snapshots]: 0:00:00.669399 (1 runs)
[0m23:53:02.728854 [debug] [Thread-7  ]: Elementary: [dbt_tests] Flattening the artifacts.
[0m23:53:02.787810 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
select metadata_hash 
    from NBA.dbt_parker_elementary.dbt_sources
    order by metadata_hash
[0m23:53:02.822028 [debug] [Thread-2  ]: On model.demo_project.nba_player_game_logs: Close
[0m23:53:02.849407 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff84499250>]}
[0m23:53:02.878863 [debug] [Thread-5  ]: Writing injected SQL for node "model.elementary.metadata"
[0m23:53:02.902390 [debug] [Thread-3  ]: Elementary: [1/1] Running insert query.
[0m23:53:02.912886 [debug] [Thread-4  ]: On model.elementary.dbt_snapshots: Close
[0m23:53:03.064581 [debug] [Thread-8  ]: Elementary: [1/1] Running insert query.
[0m23:53:03.074819 [info ] [Thread-1  ]: 20 of 38 OK created sql incremental model dbt_parker_elementary.elementary_test_results  [[32mSUCCESS 1[0m in 1.90s]
[0m23:53:03.136773 [debug] [Thread-1  ]: Finished running node model.elementary.elementary_test_results
[0m23:53:03.139350 [debug] [Thread-1  ]: Began running node model.elementary.schema_columns_snapshot
[0m23:53:03.142032 [info ] [Thread-1  ]: 22 of 38 START sql incremental model dbt_parker_elementary.schema_columns_snapshot  [RUN]
[0m23:53:03.144699 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.elementary.elementary_test_results, now model.elementary.schema_columns_snapshot)
[0m23:53:03.147239 [debug] [Thread-1  ]: Began compiling node model.elementary.schema_columns_snapshot
[0m23:53:03.116686 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:53:03.162885 [debug] [Thread-1  ]: Writing injected SQL for node "model.elementary.schema_columns_snapshot"
[0m23:53:03.134741 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:53:03.104342 [debug] [Thread-7  ]: Elementary: [dbt_tests] Flattened 1 artifacts.
[0m23:53:03.177472 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:03.180590 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
select metadata_hash 
    from NBA.dbt_parker_elementary.dbt_tests
    order by metadata_hash
[0m23:53:03.171943 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
insert into NBA.dbt_parker_elementary.dbt_columns__tmp_20240920235300453009
         (UNIQUE_ID,PARENT_UNIQUE_ID,NAME,DATA_TYPE,TAGS,META,DATABASE_NAME,SCHEMA_NAME,TABLE_NAME,DESCRIPTION,RESOURCE_TYPE,GENERATED_AT,METADATA_HASH) values
    ('column.model.elementary.dbt_tests.unique_id','model.elementary.dbt_tests','unique_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_tests','The unique id of the test.','model','2024-09-20 23:52:59','740285ecc43d8e3e73cca34d538a2cd3'),('column.model.elementary.dbt_tests.database_name','model.elementary.dbt_tests','database_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_tests','The tested model database name.','model','2024-09-20 23:52:59','559363d997c2f2a3f7bc756f7af56cd7'),('column.model.elementary.dbt_tests.schema_name','model.elementary.dbt_tests','schema_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_tests','The tested model schema name.','model','2024-09-20 23:52:59','3e758c871063af8cfcb6e75176650ff2'),('column.model.elementary.dbt_tests.name','model.elementary.dbt_tests','name','string','[]','{}','NBA','dbt_parker_elementary','dbt_tests','The test name.','model','2024-09-20 23:52:59','286f2425834fb8c827eceaeadb8a264f'),('column.model.elementary.dbt_tests.test_column_name','model.elementary.dbt_tests','test_column_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_tests','The name of the tested column.','model','2024-09-20 23:52:59','aafd66d52f779798735ff4a1051c56a2'),('column.model.elementary.dbt_models.unique_id','model.elementary.dbt_models','unique_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','The unique id of the model.','model','2024-09-20 23:52:59','957272732c930666f862b6941942643d'),('column.model.elementary.dbt_models.checksum','model.elementary.dbt_models','checksum','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Model file checksum.','model','2024-09-20 23:52:59','abc21c79d9e6e421b313366e07b32a8a'),('column.model.elementary.dbt_models.materialization','model.elementary.dbt_models','materialization','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','The model materialization config.','model','2024-09-20 23:52:59','9d90dcfa207273b943efd0f4a2d32063'),('column.model.elementary.dbt_models.tags','model.elementary.dbt_models','tags','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Model tags property.','model','2024-09-20 23:52:59','457e11d2b7e8afe8d234309fc5ef4e6e'),('column.model.elementary.dbt_models.meta','model.elementary.dbt_models','meta','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','The content of \'meta\' property key.','model','2024-09-20 23:52:59','0b5cdf527c8ee6a8a4f0149ff2058896'),('column.model.elementary.dbt_models.owner','model.elementary.dbt_models','owner','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Model owner property (configured under \'meta\' key).','model','2024-09-20 23:52:59','66db0525e2936b7fe5e4850868726174'),('column.model.elementary.dbt_models.database_name','model.elementary.dbt_models','database_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','The model database name.','model','2024-09-20 23:52:59','76bebbaef42788c6cef3ed7d3b357a72'),('column.model.elementary.dbt_models.schema_name','model.elementary.dbt_models','schema_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','The model schema name.','model','2024-09-20 23:52:59','19926ef8ebec0caad8ed2e7a91b68000'),('column.model.elementary.dbt_models.depends_on_macros','model.elementary.dbt_models','depends_on_macros','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','The macros the model directly depends on.','model','2024-09-20 23:52:59','a27e886179dd82951d297f1e4d601855'),('column.model.elementary.dbt_models.depends_on_nodes','model.elementary.dbt_models','depends_on_nodes','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','The nodes the model directly depends on.','model','2024-09-20 23:52:59','20fce7a064d144b098d122582cfc78e9'),('column.model.elementary.dbt_models.description','model.elementary.dbt_models','description','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Model description.','model','2024-09-20 23:52:59','ce8a9b3c7471bcbb0e693f063d485030'),('column.model.elementary.dbt_models.name','model.elementary.dbt_models','name','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Model name.','model','2024-09-20 23:52:59','5abdfc9f338bb24d8481b432d2337f78'),('column.model.elementary.dbt_models.package_name','model.elementary.dbt_models','package_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Package name of the model.','model','2024-09-20 23:52:59','1b3958ae29404bfbbb9ea1cf7e426191'),('column.model.elementary.dbt_models.original_path','model.elementary.dbt_models','original_path','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Full path of the model file.','model','2024-09-20 23:52:59','5ff2b2e08aa50c7c4b0afbd31f2656e3'),('column.model.elementary.dbt_models.path','model.elementary.dbt_models','path','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Short path of the model file.','model','2024-09-20 23:52:59','efe89b78db4189fea0857ac262933be7'),('column.model.elementary.dbt_models.generated_at','model.elementary.dbt_models','generated_at','string','[]','{}','NBA','dbt_parker_elementary','dbt_models','Update time of the table.','model','2024-09-20 23:52:59','750ed0be1ea642389c3289b7ed186ffa'),('column.model.elementary.dbt_run_results.model_execution_id','model.elementary.dbt_run_results','model_execution_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Execution id generated by joining the unique_id of the resource and the invocation_id. This is the unique key of each row in this model.','model','2024-09-20 23:52:59','af0e4fd86465cc24a4790ed2cb301ac8'),('column.model.elementary.dbt_run_results.unique_id','model.elementary.dbt_run_results','unique_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','The unique id of the resource (would be similar for all executions of the same resource).','model','2024-09-20 23:52:59','de7131169a43cf3a414b417459ae6eb6'),('column.model.elementary.dbt_run_results.invocation_id','model.elementary.dbt_run_results','invocation_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','The unique id of the invocation (would be similar for all resources executed on the same invocation). FK to dbt_invocations.','model','2024-09-20 23:52:59','ecff6c47ca8be14a518126f30e528ffb'),('column.model.elementary.dbt_run_results.name','model.elementary.dbt_run_results','name','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Resource name.','model','2024-09-20 23:52:59','93164dbd962e5bb14e445b5645e85f37'),('column.model.elementary.dbt_run_results.message','model.elementary.dbt_run_results','message','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Execution results message returned by dbt.','model','2024-09-20 23:52:59','7ec76c8375bdd13b522e3ce558c58bba'),('column.model.elementary.dbt_run_results.status','model.elementary.dbt_run_results','status','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Execution result status (success, error, pass, fail)','model','2024-09-20 23:52:59','dd50bbd1651a3ab691a45b4be7956142'),('column.model.elementary.dbt_run_results.resource_type','model.elementary.dbt_run_results','resource_type','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Resource type (model, test, snapshot, seed, etc)','model','2024-09-20 23:52:59','c649e85929b450de50e30995f93034db'),('column.model.elementary.dbt_run_results.execution_time','model.elementary.dbt_run_results','execution_time','float','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Resource execution duration in seconds.','model','2024-09-20 23:52:59','0935fdf0e4c7196950a5622183548841'),('column.model.elementary.dbt_run_results.execute_started_at','model.elementary.dbt_run_results','execute_started_at','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Start time of the execution.','model','2024-09-20 23:52:59','f884be843c2d825c6d0a775e0aeaadde'),('column.model.elementary.dbt_run_results.execute_completed_at','model.elementary.dbt_run_results','execute_completed_at','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','End time of the execution.','model','2024-09-20 23:52:59','baaa50f6b52b5b42ccab4fc0ef9b9ca7'),('column.model.elementary.dbt_run_results.compile_started_at','model.elementary.dbt_run_results','compile_started_at','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Start time of resource compile action.','model','2024-09-20 23:52:59','4dde7443756beb7ff1c825a9de978093'),('column.model.elementary.dbt_run_results.compile_completed_at','model.elementary.dbt_run_results','compile_completed_at','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','End time of resource compile action.','model','2024-09-20 23:52:59','b990531a97a2567fef3ac4dc36adb0e4'),('column.model.elementary.dbt_run_results.full_refresh','model.elementary.dbt_run_results','full_refresh','boolean','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Was this a full refresh execution.','model','2024-09-20 23:52:59','b031cce8699f7df76e3b280a10f6dae6'),('column.model.elementary.dbt_run_results.compiled_code','model.elementary.dbt_run_results','compiled_code','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','The compiled code (SQL / Python) executed against the database.','model','2024-09-20 23:52:59','8090b9e0664cb0f70891df76b74a2bd4'),('column.model.elementary.dbt_run_results.failures','model.elementary.dbt_run_results','failures','int','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Number of failures in this run.','model','2024-09-20 23:52:59','ab177417a4366fc2c9a9017eb5babd2c'),('column.model.elementary.dbt_run_results.query_id','model.elementary.dbt_run_results','query_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Query ID in the data warehouse, if returned by the adapter (currently only supported in Snowflake, is null for any other adapter).','model','2024-09-20 23:52:59','c4d042a22de66682b03da6a43e321960'),('column.model.elementary.dbt_run_results.thread_id','model.elementary.dbt_run_results','thread_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Id of the thread of this resource run.','model','2024-09-20 23:52:59','600aa452686e3f3d704c536ff0ed97c4'),('column.model.elementary.dbt_run_results.adapter_response','model.elementary.dbt_run_results','adapter_response','string','[]','{}','NBA','dbt_parker_elementary','dbt_run_results','Response returned by the adapter (Fields will be different for each adapters).','model','2024-09-20 23:52:59','14f27c6c695e3db5b3bfb2a93926d1c1'),('column.model.elementary.dbt_invocations.invocation_id','model.elementary.dbt_invocations','invocation_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Primary key of this table.','model','2024-09-20 23:52:59','e26ad2a909a6e47e6d1a6424fff95916'),('column.model.elementary.dbt_invocations.run_started_at','model.elementary.dbt_invocations','run_started_at','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Timestamp the invocation was started.','model','2024-09-20 23:52:59','103ac18d9e44c232b218f7ba4f36d8f2'),('column.model.elementary.dbt_invocations.run_completed_at','model.elementary.dbt_invocations','run_completed_at','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Timestamp the invocation was completed','model','2024-09-20 23:52:59','9d97d8b54206565c3301cc9ab52c10d3'),('column.model.elementary.dbt_invocations.generated_at','model.elementary.dbt_invocations','generated_at','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The time this invocation was uploaded to the database.','model','2024-09-20 23:52:59','2ab7c00ab1044b05d081325dcd9e9a03'),('column.model.elementary.dbt_invocations.command','model.elementary.dbt_invocations','command','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','dbt command that was used. For example, run.','model','2024-09-20 23:52:59','514a62bc9ca1f07d615fc04eace3d8c2'),('column.model.elementary.dbt_invocations.dbt_version','model.elementary.dbt_invocations','dbt_version','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Version of dbt that was used in this invocation.','model','2024-09-20 23:52:59','59fd569b882b0428f2e41d591e574965'),('column.model.elementary.dbt_invocations.elementary_version','model.elementary.dbt_invocations','elementary_version','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Version of the elementary package that was used in this invocation.','model','2024-09-20 23:52:59','5a5b19d7e41efc45e757c5909881f912'),('column.model.elementary.dbt_invocations.full_refresh','model.elementary.dbt_invocations','full_refresh','boolean','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Whether or not this invocation was executed as a full-refresh.','model','2024-09-20 23:52:59','9cf1bd419510ca6779f286fe748b86b2'),('column.model.elementary.dbt_invocations.invocation_vars','model.elementary.dbt_invocations','invocation_vars','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Dictionary of the variables (and values) that were declared in the invocation.','model','2024-09-20 23:52:59','c2287f55c5116e89f8f05b1db52687cc'),('column.model.elementary.dbt_invocations.vars','model.elementary.dbt_invocations','vars','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Dictionary of all variables (and values) in the dbt project. If none were declared at runtime, these are the variables declared in dbt_project yml','model','2024-09-20 23:52:59','88ac6ae6b61500dcf6bc00052d20ae00'),('column.model.elementary.dbt_invocations.target_name','model.elementary.dbt_invocations','target_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Name of the target used in this invocation.','model','2024-09-20 23:52:59','f33f31ade3a48b71125ba599fdcdf640'),('column.model.elementary.dbt_invocations.target_database','model.elementary.dbt_invocations','target_database','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Name of the target database that was used in this invocation.','model','2024-09-20 23:52:59','b28fd76dfbf84908aef8e585f7948619'),('column.model.elementary.dbt_invocations.target_schema','model.elementary.dbt_invocations','target_schema','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Name of the target schema that was used in this invocation.','model','2024-09-20 23:52:59','158264d1b395ac0821ae94e9f7588d74'),('column.model.elementary.dbt_invocations.target_profile_name','model.elementary.dbt_invocations','target_profile_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Name of the dbt profile that was used in this invocation.','model','2024-09-20 23:52:59','5224b090894ec35a01c9d5a866cff165'),('column.model.elementary.dbt_invocations.threads','model.elementary.dbt_invocations','threads','integer','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','Number of threads that were used to run this dbt invocation. (This number could impact the performance of a dbt invocation).','model','2024-09-20 23:52:59','fefbb75057a0fa75bd264d7f65043e0d'),('column.model.elementary.dbt_invocations.selected','model.elementary.dbt_invocations','selected','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The selected resources in the dbt command. While this is a string in the database, this can easily be converted to an array.','model','2024-09-20 23:52:59','a0781d59f75686af997ca32c2e6a0b5e'),('column.model.elementary.dbt_invocations.yaml_selector','model.elementary.dbt_invocations','yaml_selector','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The yaml selector that was passed in this invocation.','model','2024-09-20 23:52:59','fe6182a42e20f014221c3d23068ed0f4'),('column.model.elementary.dbt_invocations.job_id','model.elementary.dbt_invocations','job_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The ID of a job, defined in the `job_id` var or in the `JOB_ID` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2024-09-20 23:52:59','f96d53f2c0a6cc0c67428f1e67e076fc'),('column.model.elementary.dbt_invocations.job_name','model.elementary.dbt_invocations','job_name','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The name of a job, defined in the `job_name` var or in the `JOB_NAME` env var.','model','2024-09-20 23:52:59','dc1550b26d8c9998944f724af6f884b7'),('column.model.elementary.dbt_invocations.job_run_id','model.elementary.dbt_invocations','job_run_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The run ID of a job, defined in the `job_run_id` var or in the `DBT_JOB_RUN_ID` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2024-09-20 23:52:59','dc43cfb394b5bd38fe848be5eb57af40'),('column.model.elementary.dbt_invocations.env','model.elementary.dbt_invocations','env','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The environment\'s name, defined in the `DBT_ENV` env var.','model','2024-09-20 23:52:59','c6b6e5f2aa5c2d51f41b655cefbe9747'),('column.model.elementary.dbt_invocations.env_id','model.elementary.dbt_invocations','env_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The ID of an environment, defined in the `DBT_ENV_ID` env var.','model','2024-09-20 23:52:59','58be2b2b7ac11b824eda7f6db91183cb'),('column.model.elementary.dbt_invocations.project_id','model.elementary.dbt_invocations','project_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The ID of a project, defined in the `DBT_PROJECT_ID` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2024-09-20 23:52:59','fedae2c9f5dd69140f51d3e8b3e69f16'),('column.model.elementary.dbt_invocations.cause_category','model.elementary.dbt_invocations','cause_category','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The category of the cause of the invocation. For example, if the invocation was triggered by a schedule, the cause category would be schedule.\nDefined in the `DBT_CAUSE_CATEGORY` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).\n','model','2024-09-20 23:52:59','cd4d9f3b5b6d465cd602976614657721'),('column.model.elementary.dbt_invocations.cause','model.elementary.dbt_invocations','cause','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The cause of the invocation. For example, if the invocation was triggered by a manual run, the cause would be _"Kicked off by Joe."_.\nDefined in the `DBT_CAUSE` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).\n','model','2024-09-20 23:52:59','6691a9a47ba875ec3ad20abf06d752de'),('column.model.elementary.dbt_invocations.pull_request_id','model.elementary.dbt_invocations','pull_request_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The ID of a pull request, defined in the `DBT_PULL_REQUEST_ID` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2024-09-20 23:52:59','c36e9490c9a935551617d23f4d0763c8'),('column.model.elementary.dbt_invocations.git_sha','model.elementary.dbt_invocations','git_sha','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The git SHA of the commit that was used in this invocation, defined in the `DBT_GIT_SHA` env var or by the orchestrator (dbt Cloud, GitHub Actions, etc).','model','2024-09-20 23:52:59','55beb87633251d99e70fbdd7349f0f6d'),('column.model.elementary.dbt_invocations.orchestrator','model.elementary.dbt_invocations','orchestrator','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The orchestrator that was used to run this invocation, defined in the `orchestrator` var or in the `ORCHESTRATOR` env var or by the orchestrator env vars. For example, dbt Cloud, GitHub Actions, etc.','model','2024-09-20 23:52:59','d416d6ffd1e716c994b2e0f507c94f4c'),('column.model.elementary.dbt_invocations.job_url','model.elementary.dbt_invocations','job_url','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The name of a job, defined in the `job_url` var or in the `JOB_URL` env var or by the orchestrator. For GitHub Actions orchestrator, the value is calculated.','model','2024-09-20 23:52:59','84a1ab40fb1b4e1dc5bc5ea90c689839'),('column.model.elementary.dbt_invocations.account_id','model.elementary.dbt_invocations','account_id','string','[]','{}','NBA','dbt_parker_elementary','dbt_invocations','The ID of the account, defined in the `account_id` var or in the `ACCOUNT_ID` env var or by the orchestrator.','model','2024-09-20 23:52:59','c9be58716581ab7edfaf76955c368a46')
[0m23:53:03.122401 [debug] [Thread-5  ]: Began executing node model.elementary.metadata
[0m23:53:03.179224 [debug] [Thread-1  ]: Began executing node model.elementary.schema_columns_snapshot
[0m23:53:03.164776 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
insert into NBA.dbt_parker_elementary.dbt_models__tmp_20240920235300428392
         (UNIQUE_ID,ALIAS,CHECKSUM,MATERIALIZATION,TAGS,META,OWNER,DATABASE_NAME,SCHEMA_NAME,DEPENDS_ON_MACROS,DEPENDS_ON_NODES,DESCRIPTION,NAME,PACKAGE_NAME,ORIGINAL_PATH,PATH,PATCH_PATH,GENERATED_AT,METADATA_HASH) values
    ('model.demo_project.intermediate_player_info','intermediate_player_info','3a8a6e5f3f74a8291c22d5598ff796418d704945fa1d3a2c4a91f2d44dc245cc','view','[]','{}','[]','NBA','dbt_parker','[]','["model.demo_project.nba_player_info", "model.demo_project.nba_player_salaries"]','','intermediate_player_info','demo_project','models/Intermediate/intermediate_player_info.sql','Intermediate/intermediate_player_info.sql',NULL,'2024-09-20 23:53:00','0bcd161dff521d15053ea49c796bc3c6'),('model.demo_project.nba_team_stats','nba_team_stats','2880407519547a9f6c539ae2fd74fa446cea6bc0a17ef7010548dd2f95e1bc4b','table','[]','{}','[]','NBA','dbt_parker_staging','[]','["source.demo_project.PUBLIC.TEAM_STATS"]','','nba_team_stats','demo_project','models/sources/nba_team_stats.sql','sources/nba_team_stats.sql',NULL,'2024-09-20 23:53:00','93bc0ef6d5effc956c5f577a97e1ccc0'),('model.demo_project.nba_player_info','nba_player_info','46752862e8c8b9ea9aee0018fa7f142e6b94207677fb1aea2f246ff151b56363','table','[]','{}','[]','NBA','dbt_parker_staging','[]','["source.demo_project.PUBLIC.COMMON_PLAYER_INFO"]','','nba_player_info','demo_project','models/sources/nba_player_info.sql','sources/nba_player_info.sql',NULL,'2024-09-20 23:53:00','b169797ca7972ddb89666aaa9288b4dd'),('model.demo_project.nba_games','nba_games','9b0ca6c8f98b901bb111d22f9a29e031cc33331a0c12c5c7f29d4d4f97a16bdb','table','[]','{}','[]','NBA','dbt_parker_staging','[]','["source.demo_project.PUBLIC.GAMES"]','','nba_games','demo_project','models/sources/nba_games.sql','sources/nba_games.sql',NULL,'2024-09-20 23:53:00','22bbb8d2948689ea114e7552f215573d'),('model.demo_project.nba_player_game_logs','nba_player_game_logs','296987450d8452aef87fcf6aa9b017e935468e22627dc6639385af28627db785','table','[]','{}','[]','NBA','dbt_parker_staging','["macro.demo_project.random_timestamp"]','["source.demo_project.PUBLIC.PLAYER_GAME_LOGS"]','','nba_player_game_logs','demo_project','models/sources/nba_player_game_logs.sql','sources/nba_player_game_logs.sql','demo_project://models/sources/schema.yml','2024-09-20 23:53:00','64f8fdc1dcaf39b0b5d1b38c46a54d4f'),('model.demo_project.nba_team_spend','nba_team_spend','7ce5bb5bce3e09e9aef0ca978ff9bb9a65d7fa7908a87665e0dd2c235d17acc1','table','[]','{}','[]','NBA','dbt_parker_staging','[]','["source.demo_project.PUBLIC.TEAM_SPEND"]','','nba_team_spend','demo_project','models/sources/nba_team_spend.sql','sources/nba_team_spend.sql',NULL,'2024-09-20 23:53:00','a50c02cfa7ba6cacaeb2452c7ff1acc5'),('model.demo_project.nba_teams','nba_teams','f1526c599970ea8fe995fa2623a64cd71b2c3dcf250ed9e19acff126174f1e39','table','[]','{}','[]','NBA','dbt_parker_staging','[]','["source.demo_project.PUBLIC.TEAMS"]','','nba_teams','demo_project','models/sources/nba_teams.sql','sources/nba_teams.sql',NULL,'2024-09-20 23:53:00','1a1825eb51a3d4c56618a080facf34b0'),('model.demo_project.nba_player_salaries','nba_player_salaries','c2a2cd0582e33293349105df65a8a7975b548650dfef70e653a782440c789f8d','table','[]','{}','[]','NBA','dbt_parker_staging','[]','["source.demo_project.PUBLIC.PLAYER_SALARIES"]','','nba_player_salaries','demo_project','models/sources/nba_player_salaries.sql','sources/nba_player_salaries.sql',NULL,'2024-09-20 23:53:00','7baae1941e59be18b88c4634d42f8082'),('model.elementary.dbt_artifacts_hashes','dbt_artifacts_hashes','830e8b8053c5f914ccc03c0fde90786590b17ce0c736a1b91d1d48c57f22a8ed','view','[]','{}','[]','NBA','dbt_parker_elementary','[]','["model.elementary.dbt_columns", "model.elementary.dbt_exposures", "model.elementary.dbt_metrics", "model.elementary.dbt_models", "model.elementary.dbt_seeds", "model.elementary.dbt_snapshots", "model.elementary.dbt_sources", "model.elementary.dbt_tests"]','','dbt_artifacts_hashes','elementary','models/edr/dbt_artifacts/dbt_artifacts_hashes.sql','edr/dbt_artifacts/dbt_artifacts_hashes.sql',NULL,'2024-09-20 23:53:00','0ac6f0495042b2d1d6710e1bd6a26967'),('model.elementary.dbt_columns','dbt_columns','b8a1cdacc7886a9dc3c8595a28fe850e1c39090ca6da04e3431b6549b986dc99','incremental','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_columns_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type", "macro.elementary.upload_dbt_columns"]','[]','','dbt_columns','elementary','models/edr/dbt_artifacts/dbt_columns.sql','edr/dbt_artifacts/dbt_columns.sql',NULL,'2024-09-20 23:53:00','a3eadb7b502235a44d08a0b86be8d9c2'),('model.elementary.dbt_snapshots','dbt_snapshots','84129810bfd9a5181f3d1552ba85143966cd16d64b9fc9169c1b089eab0c6ac2','incremental','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_models_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type", "macro.elementary.upload_dbt_snapshots"]','[]','Metadata about snapshots in the project, including configuration and properties from the dbt graph. Each row contains information about a single snapshot. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_snapshots','elementary','models/edr/dbt_artifacts/dbt_snapshots.sql','edr/dbt_artifacts/dbt_snapshots.sql','elementary://models/dbt_artifacts.yml','2024-09-20 23:53:00','cef3e1468229638626807c30b89ef084'),('model.elementary.dbt_exposures','dbt_exposures','11693171043651333132be14894b4b7acad2ce7f09dea0ae0f722cf7d2417bb0','incremental','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_exposures_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type", "macro.elementary.upload_dbt_exposures"]','[]','Metadata about exposures in the project, including configuration and properties from the dbt graph. Each row contains information about a single exposure. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_exposures','elementary','models/edr/dbt_artifacts/dbt_exposures.sql','edr/dbt_artifacts/dbt_exposures.sql','elementary://models/dbt_artifacts.yml','2024-09-20 23:53:00','1c43c2e1dd80ec6ed44064eb72570065'),('model.elementary.dbt_tests','dbt_tests','e3e387b5d7f7df8bdfdc358f4458dd69b8311803d989c7a0a571314bb1f1dfc2','incremental','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_tests_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type", "macro.elementary.upload_dbt_tests"]','[]','Metadata about tests in the project, including configuration and properties from the dbt graph. Each row contains information about a single test. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_tests','elementary','models/edr/dbt_artifacts/dbt_tests.sql','edr/dbt_artifacts/dbt_tests.sql','elementary://models/dbt_artifacts.yml','2024-09-20 23:53:00','0b5bc811239f64c4b276817081263c9b'),('model.elementary.dbt_models','dbt_models','3b137ff6fc5007c98c2cce8c57010d5a8386ed4f9d217b08506e9106ab9168fd','incremental','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_models_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type", "macro.elementary.upload_dbt_models"]','[]','Metadata about models in the project, including configuration and properties from the dbt graph. Each row contains information about a single model. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_models','elementary','models/edr/dbt_artifacts/dbt_models.sql','edr/dbt_artifacts/dbt_models.sql','elementary://models/dbt_artifacts.yml','2024-09-20 23:53:00','01d9115f186eb987aba6ebae8bfdb965'),('model.elementary.dbt_sources','dbt_sources','1abd5241398ed596cf8fcf85b84a45835ae0a3e67069f00d7b519757b009cbb3','incremental','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_sources_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type", "macro.elementary.upload_dbt_sources"]','[]','Metadata about sources in the project, including configuration and properties from the dbt graph. Each row contains information about a single source. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_sources','elementary','models/edr/dbt_artifacts/dbt_sources.sql','edr/dbt_artifacts/dbt_sources.sql','elementary://models/dbt_artifacts.yml','2024-09-20 23:53:00','2b4c12b907fffec6e7a2abcd523f8227'),('model.elementary.dbt_run_results','dbt_run_results','9b2317042e53c953bc3839ef18c3e197d2c347ece4d5968731093dd324b349c5','incremental','[]','{"deprecated_columns": [{"name": "compiled_sql", "data_type": "string", "description": "The compiled SQL executed against the database."}], "dedup_by_column": "model_execution_id", "timestamp_column": "created_at", "prev_timestamp_column": "generated_at"}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_run_results_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type"]','[]','Run results of dbt invocations, inserted at the end of each invocation. Each row is the invocation result of a single resource (model, test, snapshot, etc). New data is loaded to this model on an on-run-end hook named \'elementary.upload_run_results\' from each invocation that produces a result object. This is an incremental model.\n','dbt_run_results','elementary','models/edr/dbt_artifacts/dbt_run_results.sql','edr/dbt_artifacts/dbt_run_results.sql','elementary://models/run_results.yml','2024-09-20 23:53:00','7089181e6446d254677a7958b38bb5ce'),('model.elementary.dbt_metrics','dbt_metrics','86136f6682874137b3f9277098edf419c918548c440e1cd03c29f930d13d6dca','incremental','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_metrics_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type", "macro.elementary.upload_dbt_metrics"]','[]','Metadata about metrics in the project, including configuration and properties from the dbt graph. Each row contains information about a single metric. Data is loaded every time this model is executed. It is recommended to execute the model every time a change is merged to the project.\n','dbt_metrics','elementary','models/edr/dbt_artifacts/dbt_metrics.sql','edr/dbt_artifacts/dbt_metrics.sql','elementary://models/dbt_artifacts.yml','2024-09-20 23:53:00','d6b3133301948eead1be2ef843b39cfb'),('model.elementary.enriched_columns','enriched_columns','de13843dd09be742938fe58c752b0b44350377ea6202d8ecec71096ceb0b9a8b','view','[]','{}','[]','NBA','dbt_parker_elementary','[]','["model.elementary.dbt_columns", "model.elementary.information_schema_columns"]','','enriched_columns','elementary','models/edr/dbt_artifacts/enriched_columns.sql','edr/dbt_artifacts/enriched_columns.sql',NULL,'2024-09-20 23:53:00','07d792759667f88cd9dd5eb54f08118b'),('model.elementary.information_schema_columns','information_schema_columns','6490e0d9234e48632239108ba3211607d83aa25720bdd3124699b360fe6745b6','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_information_schema_columns_materialized", "macro.elementary.get_information_schema_columns_query"]','["model.elementary.dbt_models", "model.elementary.dbt_seeds", "model.elementary.dbt_snapshots", "model.elementary.dbt_sources"]','','information_schema_columns','elementary','models/edr/dbt_artifacts/information_schema_columns.sql','edr/dbt_artifacts/information_schema_columns.sql',NULL,'2024-09-20 23:53:00','ff05d6afd8d919a088cf0e5482c55490'),('model.elementary.dbt_invocations','dbt_invocations','6ec0cb09a0a3991db91ebd8a52625cc508faa4aac958138022aeaa3abb960755','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "generated_at"}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_invocations_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type"]','[]','Attributes associated with each dbt invocation. Inserted at the end of each invocation.\n','dbt_invocations','elementary','models/edr/dbt_artifacts/dbt_invocations.sql','edr/dbt_artifacts/dbt_invocations.sql','elementary://models/run_results.yml','2024-09-20 23:53:00','7d06b9c394de970396248e186f0b15f9'),('model.elementary.dbt_seeds','dbt_seeds','e768cbfb8ca753297d627bc51d661b4d4278e48650f9479d6a64431cb291a551','incremental','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var", "macro.elementary.get_dbt_seeds_empty_table_query", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type", "macro.elementary.upload_dbt_seeds"]','[]','','dbt_seeds','elementary','models/edr/dbt_artifacts/dbt_seeds.sql','edr/dbt_artifacts/dbt_seeds.sql',NULL,'2024-09-20 23:53:00','5362abc0d933491c6406f709d7b5eaf0'),('model.elementary.model_run_results','model_run_results','99fba47e42516fbdc31e2546f687e3f780f21eaa5ac303e1ed22d23262ac5ec9','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.edr_time_trunc"]','["model.elementary.dbt_models", "model.elementary.dbt_run_results"]','Run results of dbt models, enriched with models metadata. Each row is the result of a single model. This is a view that joins data from `dbt_run_results` and `dbt_models`.\n','model_run_results','elementary','models/edr/run_results/model_run_results.sql','edr/run_results/model_run_results.sql','elementary://models/run_results.yml','2024-09-20 23:53:00','3575069529bb6fee45abced39848d4d5'),('model.elementary.job_run_results','job_run_results','70fa0f75184f074237575d1146a8caf3048d0d0300a5da5013b7a88f137bc810','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.edr_cast_as_timestamp", "macro.elementary.timediff"]','["model.elementary.dbt_invocations"]','Run results of dbt invocations, enriched with jobs metadata. Each row is the result of a single job. This is a view on `dbt_invocations`.','job_run_results','elementary','models/edr/run_results/job_run_results.sql','edr/run_results/job_run_results.sql','elementary://models/run_results.yml','2024-09-20 23:53:00','29a9ac5b0c51b330639b87bd70eb111e'),('model.elementary.snapshot_run_results','snapshot_run_results','1b4464b5d2043628e6ca2f1b435220ef0d577a48eecfc07b5ea5657e69c55b02','view','[]','{}','[]','NBA','dbt_parker_elementary','[]','["model.elementary.dbt_run_results", "model.elementary.dbt_snapshots"]','Run results of dbt snapshots, enriched with snapshots metadata. Each row is the result of a single snapshot. This is a view that joins data from `dbt_run_results` and `dbt_snapshots`.\n','snapshot_run_results','elementary','models/edr/run_results/snapshot_run_results.sql','edr/run_results/snapshot_run_results.sql','elementary://models/run_results.yml','2024-09-20 23:53:00','a8a7e09124fae7d94d03b45bc659fc52'),('model.elementary.dbt_source_freshness_results','dbt_source_freshness_results','fb063c8eb524356395464854c25d33038742ce2e0c3d4b3936ce8919a0ee27d6','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "generated_at"}','[]','NBA','dbt_parker_elementary','["macro.elementary.empty_dbt_source_freshness_results", "macro.elementary.get_config_var", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type"]','[]','','dbt_source_freshness_results','elementary','models/edr/run_results/dbt_source_freshness_results.sql','edr/run_results/dbt_source_freshness_results.sql',NULL,'2024-09-20 23:53:00','9893e852b7f8916dcf2e065bfb43bb2c'),('model.elementary.elementary_test_results','elementary_test_results','df74ce864e711c45b8f20af4d3246257f95ef0735e17d83dce220bdd80bde93a','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "detected_at"}','[]','NBA','dbt_parker_elementary','["macro.elementary.empty_elementary_test_results", "macro.elementary.get_config_var", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type"]','[]','Run results of all dbt tests, with fields and metadata needed to produce the Elementary report UI. Each row is the result of a single test, including native dbt tests, packages tests and elementary tests. New data is loaded to this model on an on-run-end hook named `elementary.handle_tests_results`.\n','elementary_test_results','elementary','models/edr/run_results/elementary_test_results.sql','edr/run_results/elementary_test_results.sql','elementary://models/run_results.yml','2024-09-20 23:53:00','d2b8c01b13834ea44b87e2b1527f5b5c'),('model.elementary.test_result_rows','test_result_rows','8b74dffd03f0b0f0a2f850747d1930937d5060753f8ae06bb695633bbf8ecb24','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "detected_at"}','[]','NBA','dbt_parker_elementary','["macro.elementary.empty_table", "macro.elementary.get_config_var", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type"]','["model.elementary.elementary_test_results"]','','test_result_rows','elementary','models/edr/run_results/test_result_rows.sql','edr/run_results/test_result_rows.sql',NULL,'2024-09-20 23:53:00','1df1783d83ccd1d1a19527f6eebdce94'),('model.elementary.alerts_schema_changes','alerts_schema_changes','bad7007c54d8885efe0496bd6289998cfed84a250ada4899fb8e53765236db0b','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var"]','["model.elementary.elementary_test_results"]','A view that is used by the Elementary CLI to generate alerts on schema changes detected using elementary tests. The view filters alerts according to configuration.','alerts_schema_changes','elementary','models/edr/alerts/alerts_schema_changes.sql','edr/alerts/alerts_schema_changes.sql','elementary://models/alerts_views.yml','2024-09-20 23:53:00','8b10b2cdb756bda46c7aba0162547c81'),('model.elementary.alerts_dbt_tests','alerts_dbt_tests','d15f2b4a7ade165ad09b2b9f6d143d9d47ab0f080b2de5dce1c6fae9e30375ba','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var"]','["model.elementary.elementary_test_results"]','A view that is used by the Elementary CLI to generate dbt tests alerts, including all the fields the alert will include such as owner, tags, error message, etc. This view includes data about all dbt tests except elementary tests. It filters alerts according to configuration.\n','alerts_dbt_tests','elementary','models/edr/alerts/alerts_dbt_tests.sql','edr/alerts/alerts_dbt_tests.sql','elementary://models/alerts_views.yml','2024-09-20 23:53:00','4cd79206afdc00d756d98934ef800fa5'),('model.elementary.alerts_dbt_source_freshness','alerts_dbt_source_freshness','59b6900cf93ce1ac9e61f07c3358a21aecda80b7980e55e4387c80ea3463f012','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.edr_cast_as_timestamp", "macro.elementary.get_config_var"]','["model.elementary.dbt_source_freshness_results", "model.elementary.dbt_sources"]','','alerts_dbt_source_freshness','elementary','models/edr/alerts/alerts_dbt_source_freshness.sql','edr/alerts/alerts_dbt_source_freshness.sql',NULL,'2024-09-20 23:53:00','cdbcb95476b99d8308b6609be271b192'),('model.elementary.alerts_dbt_models','alerts_dbt_models','6b76b9a7b5f40ef4f9ff316fe90b4d48451442cafac243dc5abf0ac10b4c67eb','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.edr_cast_as_timestamp", "macro.elementary.get_config_var"]','["model.elementary.model_run_results", "model.elementary.snapshot_run_results"]','A view that is used by the Elementary CLI to generate models alerts, including all the fields the alert will include such as owner, tags, error message, etc. It joins data about models and snapshots run results, and filters alerts according to configuration.\n','alerts_dbt_models','elementary','models/edr/alerts/alerts_dbt_models.sql','edr/alerts/alerts_dbt_models.sql','elementary://models/alerts_views.yml','2024-09-20 23:53:00','26cc2e2634618d4bdb2b4a4bde2beecb'),('model.elementary.alerts_anomaly_detection','alerts_anomaly_detection','0d2bb9c33ded81e6501643abeeacde1b21695f406b861f748923e4bd9ce0c4c8','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_config_var"]','["model.elementary.elementary_test_results"]','A view that is used by the Elementary CLI to generate alerts on data anomalies detected using the elementary anomaly detection tests. The view filters alerts according to configuration.\n','alerts_anomaly_detection','elementary','models/edr/alerts/alerts_anomaly_detection.sql','edr/alerts/alerts_anomaly_detection.sql','elementary://models/alerts_views.yml','2024-09-20 23:53:00','1fad9d7216cad0cd57b8479d5fe580dc'),('model.elementary.monitors_runs','monitors_runs','3720e206635d4f2f95c193835727b0d533ec1a5fa56e5dec79331418d07e934f','view','[]','{}','[]','NBA','dbt_parker_elementary','[]','["model.elementary.data_monitoring_metrics"]','This is a view on `data_monitoring_metrics` that is used to determine when a specific anomaly detection test was last executed. Each anomaly detection test queries this view to decide on a start time for collecting metrics.\n','monitors_runs','elementary','models/edr/system/monitors_runs.sql','edr/system/monitors_runs.sql','elementary://models/elementary_tests.yml','2024-09-20 23:53:00','c9049c93b66c7dce6a28c27f4bd7230f'),('model.elementary.metadata','metadata','7d06c726499b330d51c340d2dc2774ac95f958fd6824c09711b3881b39b76a84','table','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.get_elementary_package_version"]','[]','','metadata','elementary','models/edr/system/metadata.sql','edr/system/metadata.sql',NULL,'2024-09-20 23:53:00','44e6c5351062be5fff5e73c6e6808330'),('model.elementary.data_monitoring_metrics','data_monitoring_metrics','0c19743330c3a4220c42f142eaf58cb571aef26ab24ea27070f3eeb9e3cc925c','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "updated_at"}','[]','NBA','dbt_parker_elementary','["macro.elementary.empty_data_monitoring_metrics", "macro.elementary.get_config_var", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type"]','[]','Elementary anomaly detection tests monitor metrics such as volume, freshness and data quality metrics. This incremental table is used to store the metrics over time. On each anomaly detection test, the test queries this table for historical metrics, and compares to the latest values. The table is updated with new metrics on the on-run-end named handle_test_results that is executed at the end of dbt test invocations.\n','data_monitoring_metrics','elementary','models/edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql','edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql','elementary://models/elementary_tests.yml','2024-09-20 23:53:00','ff153c0149128170c8ae28ff43bef757'),('model.elementary.anomaly_threshold_sensitivity','anomaly_threshold_sensitivity','b0e4310abc62902b98a6ad6fd465713d5aeb5e884b52594e8a1b2ff6429b1b2d','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.elementary.edr_quote_column"]','["model.elementary.metrics_anomaly_score"]','This is a view on `metrics_anomaly_score` that calculates if values of metrics from latest runs would have been considered anomalies in different anomaly scores. This can help you decide if there is a need to adjust the `anomaly_score_threshold`.\n','anomaly_threshold_sensitivity','elementary','models/edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql','edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql','elementary://models/elementary_tests.yml','2024-09-20 23:53:00','9d4e94e48cd06d8bf9a505b462d6d77f'),('model.elementary.metrics_anomaly_score','metrics_anomaly_score','3c24ecb37454bb7fc0cd30ea889676be6759d558716df6e99b8306eee4feab4f','view','[]','{}','[]','NBA','dbt_parker_elementary','["macro.dbt_utils.group_by", "macro.elementary.edr_current_timestamp", "macro.elementary.edr_date_trunc", "macro.elementary.edr_timeadd", "macro.elementary.get_config_var"]','["model.elementary.data_monitoring_metrics"]','This is a view on `data_monitoring_metrics` that runs the same query the anomaly detection tests run to calculate anomaly scores. The purpose of this view is to provide visibility to the results of anomaly detection tests.\n','metrics_anomaly_score','elementary','models/edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql','edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql','elementary://models/elementary_tests.yml','2024-09-20 23:53:00','aa774135d5a92b244b05ddb10c3ab5ba'),('model.elementary.schema_columns_snapshot','schema_columns_snapshot','91a98d3190bef02e47f763520b5443197e120ceb132a86b1d90608ca30c33374','incremental','[]','{"timestamp_column": "created_at", "prev_timestamp_column": "detected_at"}','[]','NBA','dbt_parker_elementary','["macro.elementary.empty_schema_columns_snapshot", "macro.elementary.get_config_var", "macro.elementary.get_default_incremental_strategy", "macro.elementary.get_default_table_type"]','[]','Stores the schema details for tables that are monitored with elementary schema changes test. In order to compare current schema to previous state, we must store the previous state. The data is from a view that queries the data warehouse information schema. This is an incremental table.','schema_columns_snapshot','elementary','models/edr/data_monitoring/schema_changes/schema_columns_snapshot.sql','edr/data_monitoring/schema_changes/schema_columns_snapshot.sql','elementary://models/elementary_tests.yml','2024-09-20 23:53:00','52cae47743cf6e0c15d67d96d56167ac')
[0m23:53:03.205458 [debug] [Thread-5  ]: Writing runtime sql for node "model.elementary.metadata"
[0m23:53:03.314491 [debug] [Thread-1  ]: Writing runtime sql for node "model.elementary.schema_columns_snapshot"
[0m23:53:03.317382 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff80209430>]}
[0m23:53:03.323268 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83a388e0>]}
[0m23:53:03.333607 [debug] [Thread-5  ]: Using snowflake connection "model.elementary.metadata"
[0m23:53:03.340435 [debug] [Thread-5  ]: On model.elementary.metadata: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.metadata"} */
create or replace transient table NBA.dbt_parker_elementary.metadata
         as
        (

SELECT
    '0.15.0' as dbt_pkg_version
        );
[0m23:53:03.342972 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m23:53:03.339670 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m23:53:03.332445 [info ] [Thread-4  ]: 16 of 38 OK created sql incremental model dbt_parker_elementary.dbt_snapshots .. [[32mSUCCESS 1[0m in 3.00s]
[0m23:53:03.335446 [info ] [Thread-2  ]: 2 of 38 OK created sql table model dbt_parker_staging.nba_player_game_logs ..... [[32mSUCCESS 1[0m in 7.24s]
[0m23:53:03.350811 [debug] [Thread-1  ]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
create or replace transient table NBA.dbt_parker_elementary.schema_columns_snapshot
         as
        (


    select * from (
            select
            
                
        cast('dummy_string' as varchar) as column_state_id

,
                
        cast('dummy_string' as varchar) as full_column_name

,
                
        cast('dummy_string' as varchar) as full_table_name

,
                
        cast('dummy_string' as varchar) as column_name

,
                
        cast('dummy_string' as varchar) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0

        );
[0m23:53:03.354066 [debug] [Thread-4  ]: Finished running node model.elementary.dbt_snapshots
[0m23:53:03.356568 [debug] [Thread-2  ]: Finished running node model.demo_project.nba_player_game_logs
[0m23:53:03.363975 [debug] [Thread-2  ]: Began running node model.elementary.monitors_runs
[0m23:53:03.361408 [debug] [Thread-4  ]: Began running node model.elementary.metrics_anomaly_score
[0m23:53:03.358852 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m23:53:03.370007 [info ] [Thread-2  ]: 24 of 38 START sql view model dbt_parker_elementary.monitors_runs .............. [RUN]
[0m23:53:03.374775 [info ] [Thread-4  ]: 23 of 38 START sql view model dbt_parker_elementary.metrics_anomaly_score ...... [RUN]
[0m23:53:03.383858 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_snapshots, now model.elementary.metrics_anomaly_score)
[0m23:53:03.386367 [debug] [Thread-4  ]: Began compiling node model.elementary.metrics_anomaly_score
[0m23:53:03.381338 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.demo_project.nba_player_game_logs, now model.elementary.monitors_runs)
[0m23:53:03.406114 [debug] [Thread-2  ]: Began compiling node model.elementary.monitors_runs
[0m23:53:03.405283 [debug] [Thread-7  ]: SQL status: SUCCESS 0 in 0.222 seconds
[0m23:53:03.440539 [debug] [Thread-7  ]: Elementary: [dbt_tests] Comparing the artifacts state.
[0m23:53:03.448981 [debug] [Thread-7  ]: Elementary: [dbt_tests] Artifacts changed.
[0m23:53:03.457675 [debug] [Thread-7  ]: Elementary: Deleting from and inserting to: NBA.dbt_parker_elementary.dbt_tests
[0m23:53:03.462581 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:03.423622 [debug] [Thread-2  ]: Writing injected SQL for node "model.elementary.monitors_runs"
[0m23:53:03.453123 [debug] [Thread-4  ]: Writing injected SQL for node "model.elementary.metrics_anomaly_score"
[0m23:53:03.465064 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
create or replace temporary table NBA.dbt_parker_elementary.dbt_tests__tmp_20240920235303460565
         as
        (
        SELECT
        
            *
        
        FROM NBA.dbt_parker_elementary.dbt_tests
        WHERE 1 = 0
    
        );
[0m23:53:03.472992 [debug] [Thread-2  ]: Began executing node model.elementary.monitors_runs
[0m23:53:03.485345 [debug] [Thread-4  ]: Began executing node model.elementary.metrics_anomaly_score
[0m23:53:03.518305 [debug] [Thread-4  ]: Writing runtime sql for node "model.elementary.metrics_anomaly_score"
[0m23:53:03.519645 [debug] [Thread-2  ]: Writing runtime sql for node "model.elementary.monitors_runs"
[0m23:53:03.539211 [debug] [Thread-2  ]: Using snowflake connection "model.elementary.monitors_runs"
[0m23:53:03.544063 [debug] [Thread-4  ]: Using snowflake connection "model.elementary.metrics_anomaly_score"
[0m23:53:03.547485 [debug] [Thread-4  ]: On model.elementary.metrics_anomaly_score: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.metrics_anomaly_score"} */
create or replace   view NBA.dbt_parker_elementary.metrics_anomaly_score
  
   as (
    

with data_monitoring_metrics as (

    select * from NBA.dbt_parker_elementary.data_monitoring_metrics

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    dateadd(day, cast(-7 as integer), cast(date_trunc('day', 
  current_timestamp::timestamp
) as timestamp))

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final
  );
[0m23:53:03.550181 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m23:53:03.544885 [debug] [Thread-2  ]: On model.elementary.monitors_runs: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.monitors_runs"} */
create or replace   view NBA.dbt_parker_elementary.monitors_runs
  
   as (
    

with data_monitoring_metrics as (

    select * from NBA.dbt_parker_elementary.data_monitoring_metrics

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end
  );
[0m23:53:03.557913 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m23:53:03.568916 [debug] [Thread-6  ]: SQL status: SUCCESS 0 in 0.575 seconds
[0m23:53:03.573048 [debug] [Thread-6  ]: Elementary: [dbt_sources] Comparing the artifacts state.
[0m23:53:03.576642 [debug] [Thread-6  ]: Elementary: [dbt_sources] Artifacts changed.
[0m23:53:03.583271 [debug] [Thread-6  ]: Elementary: Deleting from and inserting to: NBA.dbt_parker_elementary.dbt_sources
[0m23:53:03.593791 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:03.598777 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
create or replace temporary table NBA.dbt_parker_elementary.dbt_sources__tmp_20240920235303592068
         as
        (
        SELECT
        
            *
        
        FROM NBA.dbt_parker_elementary.dbt_sources
        WHERE 1 = 0
    
        );
[0m23:53:03.640149 [debug] [Thread-8  ]: SQL status: SUCCESS 69 in 0.455 seconds
[0m23:53:03.651758 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:53:03.654925 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
begin transaction;
[0m23:53:03.827384 [debug] [Thread-3  ]: SQL status: SUCCESS 38 in 0.507 seconds
[0m23:53:03.833259 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:53:03.835827 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
begin transaction;
[0m23:53:03.854620 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.196 seconds
[0m23:53:03.857333 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:53:03.859934 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
insert into NBA.dbt_parker_elementary.dbt_columns select * from NBA.dbt_parker_elementary.dbt_columns__tmp_20240920235300453009;
[0m23:53:04.080192 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 0.242 seconds
[0m23:53:04.082987 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:53:04.085497 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
insert into NBA.dbt_parker_elementary.dbt_models select * from NBA.dbt_parker_elementary.dbt_models__tmp_20240920235300428392;
[0m23:53:04.129001 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.655 seconds
[0m23:53:04.139036 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:04.141745 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
describe table NBA.dbt_parker_elementary.dbt_tests__tmp_20240920235303460565
[0m23:53:04.341134 [debug] [Thread-7  ]: SQL status: SUCCESS 27 in 0.197 seconds
[0m23:53:04.348973 [debug] [Thread-7  ]: Elementary: Inserting 1 rows to table NBA.dbt_parker_elementary.dbt_tests__tmp_20240920235303460565
[0m23:53:04.366146 [debug] [Thread-7  ]: Elementary: [1/1] Running insert query.
[0m23:53:04.370528 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:04.376465 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
insert into NBA.dbt_parker_elementary.dbt_tests__tmp_20240920235303460565
         (UNIQUE_ID,DATABASE_NAME,SCHEMA_NAME,NAME,SHORT_NAME,ALIAS,TEST_COLUMN_NAME,SEVERITY,WARN_IF,ERROR_IF,TEST_PARAMS,TEST_NAMESPACE,TAGS,MODEL_TAGS,MODEL_OWNERS,META,DEPENDS_ON_MACROS,DEPENDS_ON_NODES,PARENT_MODEL_UNIQUE_ID,DESCRIPTION,PACKAGE_NAME,TYPE,ORIGINAL_PATH,PATH,GENERATED_AT,METADATA_HASH,QUALITY_DIMENSION) values
    ('test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2','NBA','dbt_parker_staging','elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60','freshness_anomalies','elementary_freshness_anomalies_ad3a3454f0d4af73b00d93d3fa5f7cd9',NULL,'warn','!= 0','!= 0','{"timestamp_column": "loaded_at_dttm", "time_bucket": {"period": "day", "count": 1}, "detection_period": {"period": "day", "count": 14}, "training_period": {"period": "day", "count": 60}, "anomaly_sensitivity": 3, "detection_delay": {"period": "day", "count": 1}, "model": "{{ get_where_subquery(ref(\'nba_player_game_logs\')) }}"}','elementary','["elementary-tests"]','[]','[]','{"description": "Monitors the freshness of your table over time, as the expected time between data updates."}','["macro.dbt.get_where_subquery", "macro.elementary.test_freshness_anomalies"]','["model.demo_project.nba_player_game_logs"]','model.demo_project.nba_player_game_logs','Monitors the freshness of your table over time, as the expected time between data updates.','demo_project','generic','models/sources/schema.yml','elementary_freshness_anomalies_ad3a3454f0d4af73b00d93d3fa5f7cd9.sql','2024-09-20 23:53:03','cbfb0dc258597351e95974f14cbf1f2b',NULL)
[0m23:53:04.455240 [debug] [Thread-8  ]: SQL status: SUCCESS 69 in 0.593 seconds
[0m23:53:04.459440 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:53:04.462426 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
COMMIT
[0m23:53:04.457620 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 0.855 seconds
[0m23:53:04.465454 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 1.107 seconds
[0m23:53:04.485791 [debug] [Thread-1  ]: Applying DROP to: NBA.dbt_parker_elementary.schema_columns_snapshot__dbt_tmp
[0m23:53:04.477758 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:04.492899 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
describe table NBA.dbt_parker_elementary.dbt_sources__tmp_20240920235303592068
[0m23:53:04.489083 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.schema_columns_snapshot"
[0m23:53:04.499872 [debug] [Thread-1  ]: On model.elementary.schema_columns_snapshot: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.schema_columns_snapshot"} */
drop view if exists NBA.dbt_parker_elementary.schema_columns_snapshot__dbt_tmp cascade
[0m23:53:04.532550 [debug] [Thread-2  ]: SQL status: SUCCESS 1 in 0.975 seconds
[0m23:53:04.537294 [debug] [Thread-2  ]: On model.elementary.monitors_runs: Close
[0m23:53:04.622119 [debug] [Thread-6  ]: SQL status: SUCCESS 22 in 0.127 seconds
[0m23:53:04.628676 [debug] [Thread-6  ]: Elementary: Inserting 7 rows to table NBA.dbt_parker_elementary.dbt_sources__tmp_20240920235303592068
[0m23:53:04.630512 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 1.287 seconds
[0m23:53:04.632214 [debug] [Thread-3  ]: SQL status: SUCCESS 38 in 0.544 seconds
[0m23:53:04.649768 [debug] [Thread-5  ]: On model.elementary.metadata: Close
[0m23:53:04.665123 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 0.162 seconds
[0m23:53:04.665967 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:53:04.687008 [debug] [Thread-1  ]: On model.elementary.schema_columns_snapshot: Close
[0m23:53:04.706189 [debug] [Thread-4  ]: SQL status: SUCCESS 1 in 1.156 seconds
[0m23:53:04.727114 [debug] [Thread-4  ]: On model.elementary.metrics_anomaly_score: Close
[0m23:53:04.706949 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
COMMIT
[0m23:53:04.731980 [debug] [Thread-6  ]: Elementary: [1/1] Running insert query.
[0m23:53:04.734663 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff803e2a30>]}
[0m23:53:04.747709 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:04.756358 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
insert into NBA.dbt_parker_elementary.dbt_sources__tmp_20240920235303592068
         (UNIQUE_ID,DATABASE_NAME,SCHEMA_NAME,SOURCE_NAME,NAME,IDENTIFIER,LOADED_AT_FIELD,FRESHNESS_WARN_AFTER,FRESHNESS_ERROR_AFTER,FRESHNESS_FILTER,FRESHNESS_DESCRIPTION,RELATION_NAME,TAGS,META,OWNER,PACKAGE_NAME,ORIGINAL_PATH,PATH,SOURCE_DESCRIPTION,DESCRIPTION,GENERATED_AT,METADATA_HASH) values
    ('source.demo_project.PUBLIC.COMMON_PLAYER_INFO','NBA','PUBLIC','PUBLIC','COMMON_PLAYER_INFO','COMMON_PLAYER_INFO',NULL,'{"count": null, "period": null}','{"count": null, "period": null}',NULL,'Source freshness validates if the time elapsed between the test execution to the latest record is above an acceptable SLA threshold.','NBA.PUBLIC.COMMON_PLAYER_INFO','[]','{}','[]','demo_project','models/sources/sources_PUBLIC.yml','models/sources/sources_PUBLIC.yml','','','2024-09-20 23:53:02','44fadb0362f694d4dc5b27c473ac3b15'),('source.demo_project.PUBLIC.PLAYER_SALARIES','NBA','PUBLIC','PUBLIC','PLAYER_SALARIES','PLAYER_SALARIES',NULL,'{"count": null, "period": null}','{"count": null, "period": null}',NULL,'Source freshness validates if the time elapsed between the test execution to the latest record is above an acceptable SLA threshold.','NBA.PUBLIC.PLAYER_SALARIES','[]','{}','[]','demo_project','models/sources/sources_PUBLIC.yml','models/sources/sources_PUBLIC.yml','','','2024-09-20 23:53:02','5e79b5f367a65aa893bd51b96ee283fe'),('source.demo_project.PUBLIC.PLAYER_GAME_LOGS','NBA','PUBLIC','PUBLIC','PLAYER_GAME_LOGS','PLAYER_GAME_LOGS',NULL,'{"count": null, "period": null}','{"count": null, "period": null}',NULL,'Source freshness validates if the time elapsed between the test execution to the latest record is above an acceptable SLA threshold.','NBA.PUBLIC.PLAYER_GAME_LOGS','[]','{}','[]','demo_project','models/sources/sources_PUBLIC.yml','models/sources/sources_PUBLIC.yml','','','2024-09-20 23:53:02','b860ba049b0101bfc6ee03a87ef56f26'),('source.demo_project.PUBLIC.GAMES','NBA','PUBLIC','PUBLIC','GAMES','GAMES',NULL,'{"count": null, "period": null}','{"count": null, "period": null}',NULL,'Source freshness validates if the time elapsed between the test execution to the latest record is above an acceptable SLA threshold.','NBA.PUBLIC.GAMES','[]','{}','[]','demo_project','models/sources/sources_PUBLIC.yml','models/sources/sources_PUBLIC.yml','','','2024-09-20 23:53:02','cd9ebe2e3450bf6aac79f9780b7d5adb'),('source.demo_project.PUBLIC.TEAMS','NBA','PUBLIC','PUBLIC','TEAMS','TEAMS',NULL,'{"count": null, "period": null}','{"count": null, "period": null}',NULL,'Source freshness validates if the time elapsed between the test execution to the latest record is above an acceptable SLA threshold.','NBA.PUBLIC.TEAMS','[]','{}','[]','demo_project','models/sources/sources_PUBLIC.yml','models/sources/sources_PUBLIC.yml','','','2024-09-20 23:53:02','980f7526a30ecccf864de2952b1b8097'),('source.demo_project.PUBLIC.TEAM_STATS','NBA','PUBLIC','PUBLIC','TEAM_STATS','TEAM_STATS',NULL,'{"count": null, "period": null}','{"count": null, "period": null}',NULL,'Source freshness validates if the time elapsed between the test execution to the latest record is above an acceptable SLA threshold.','NBA.PUBLIC.TEAM_STATS','[]','{}','[]','demo_project','models/sources/sources_PUBLIC.yml','models/sources/sources_PUBLIC.yml','','','2024-09-20 23:53:02','013f867849b9a9bf54e0a50a29ee99f9'),('source.demo_project.PUBLIC.TEAM_SPEND','NBA','PUBLIC','PUBLIC','TEAM_SPEND','TEAM_SPEND',NULL,'{"count": null, "period": null}','{"count": null, "period": null}',NULL,'Source freshness validates if the time elapsed between the test execution to the latest record is above an acceptable SLA threshold.','NBA.PUBLIC.TEAM_SPEND','[]','{}','[]','demo_project','models/sources/sources_PUBLIC.yml','models/sources/sources_PUBLIC.yml','','','2024-09-20 23:53:02','745990457946f77dff4908c59d223160')
[0m23:53:04.753233 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.373 seconds
[0m23:53:04.767171 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:04.750751 [info ] [Thread-2  ]: 24 of 38 OK created sql view model dbt_parker_elementary.monitors_runs ......... [[32mSUCCESS 1[0m in 1.35s]
[0m23:53:04.769589 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
begin transaction;
[0m23:53:04.772168 [debug] [Thread-2  ]: Finished running node model.elementary.monitors_runs
[0m23:53:04.778907 [debug] [Thread-2  ]: Began running node model.demo_project.intermediate_player_info
[0m23:53:04.781447 [info ] [Thread-2  ]: 25 of 38 START sql view model dbt_parker.intermediate_player_info .............. [RUN]
[0m23:53:04.784032 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.elementary.monitors_runs, now model.demo_project.intermediate_player_info)
[0m23:53:04.786457 [debug] [Thread-2  ]: Began compiling node model.demo_project.intermediate_player_info
[0m23:53:04.814281 [debug] [Thread-2  ]: Writing injected SQL for node "model.demo_project.intermediate_player_info"
[0m23:53:04.827031 [debug] [Thread-2  ]: Began executing node model.demo_project.intermediate_player_info
[0m23:53:04.836961 [debug] [Thread-2  ]: Writing runtime sql for node "model.demo_project.intermediate_player_info"
[0m23:53:04.847074 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff843782e0>]}
[0m23:53:04.856277 [info ] [Thread-5  ]: 21 of 38 OK created sql table model dbt_parker_elementary.metadata ............. [[32mSUCCESS 1[0m in 2.23s]
[0m23:53:04.859643 [debug] [Thread-5  ]: Finished running node model.elementary.metadata
[0m23:53:04.862042 [debug] [Thread-2  ]: Using snowflake connection "model.demo_project.intermediate_player_info"
[0m23:53:04.863487 [debug] [Thread-5  ]: Began running node model.elementary.job_run_results
[0m23:53:04.866562 [debug] [Thread-2  ]: On model.demo_project.intermediate_player_info: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.demo_project.intermediate_player_info"} */
create or replace   view NBA.dbt_parker.intermediate_player_info
  
   as (
    with player_info as (
    select *
    from
        NBA.dbt_parker_staging.nba_player_info
),

player_salaries as (
    select
        player_id,
        salary,
        season
    from
        NBA.dbt_parker_staging.nba_player_salaries
),

joined as (

    select
        pi.*,
        ps.salary,
        ps.season
    from
        player_info as pi
    left join
        player_salaries as ps
        on pi.player_id = ps.player_id
)

select * from joined
  );
[0m23:53:04.870287 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.404 seconds
[0m23:53:04.873846 [info ] [Thread-5  ]: 26 of 38 START sql view model dbt_parker_elementary.job_run_results ............ [RUN]
[0m23:53:04.876842 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m23:53:04.887180 [debug] [Thread-8  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_columns__tmp_20240920235300453009
[0m23:53:04.889271 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.elementary.metadata, now model.elementary.job_run_results)
[0m23:53:04.904876 [debug] [Thread-5  ]: Began compiling node model.elementary.job_run_results
[0m23:53:04.904032 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83c16cd0>]}
[0m23:53:04.928987 [info ] [Thread-1  ]: 22 of 38 OK created sql incremental model dbt_parker_elementary.schema_columns_snapshot  [[32mSUCCESS 1[0m in 1.76s]
[0m23:53:04.927571 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff803e2f70>]}
[0m23:53:04.902026 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.dbt_columns"
[0m23:53:04.935865 [debug] [Thread-5  ]: Writing injected SQL for node "model.elementary.job_run_results"
[0m23:53:04.936954 [debug] [Thread-1  ]: Finished running node model.elementary.schema_columns_snapshot
[0m23:53:04.947026 [debug] [Thread-1  ]: Began running node model.elementary.alerts_anomaly_detection
[0m23:53:04.942565 [debug] [Thread-8  ]: On model.elementary.dbt_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_columns"} */
drop table if exists NBA.dbt_parker_elementary.dbt_columns__tmp_20240920235300453009 cascade
[0m23:53:04.939904 [info ] [Thread-4  ]: 23 of 38 OK created sql view model dbt_parker_elementary.metrics_anomaly_score . [[32mSUCCESS 1[0m in 1.54s]
[0m23:53:04.956915 [debug] [Thread-4  ]: Finished running node model.elementary.metrics_anomaly_score
[0m23:53:04.949750 [info ] [Thread-1  ]: 27 of 38 START sql view model dbt_parker_elementary.alerts_anomaly_detection ... [RUN]
[0m23:53:04.948056 [debug] [Thread-5  ]: Began executing node model.elementary.job_run_results
[0m23:53:04.959421 [debug] [Thread-4  ]: Began running node model.elementary.alerts_dbt_tests
[0m23:53:04.962436 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.elementary.schema_columns_snapshot, now model.elementary.alerts_anomaly_detection)
[0m23:53:04.974081 [debug] [Thread-5  ]: Writing runtime sql for node "model.elementary.job_run_results"
[0m23:53:04.976633 [info ] [Thread-4  ]: 28 of 38 START sql view model dbt_parker_elementary.alerts_dbt_tests ........... [RUN]
[0m23:53:04.988635 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.elementary.metrics_anomaly_score, now model.elementary.alerts_dbt_tests)
[0m23:53:04.982918 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.208 seconds
[0m23:53:04.994346 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:04.990938 [debug] [Thread-5  ]: Using snowflake connection "model.elementary.job_run_results"
[0m23:53:04.999550 [debug] [Thread-5  ]: On model.elementary.job_run_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.job_run_results"} */
create or replace   view NBA.dbt_parker_elementary.job_run_results
  
   as (
    





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    datediff(
        second,
        
min(cast(run_started_at as timestamp))
,
        
max(cast(run_completed_at as timestamp))

        )
 as job_run_execution_time
  from NBA.dbt_parker_elementary.dbt_invocations
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs
  );
[0m23:53:04.978844 [debug] [Thread-1  ]: Began compiling node model.elementary.alerts_anomaly_detection
[0m23:53:04.997002 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
insert into NBA.dbt_parker_elementary.dbt_tests select * from NBA.dbt_parker_elementary.dbt_tests__tmp_20240920235303460565;
[0m23:53:04.991705 [debug] [Thread-4  ]: Began compiling node model.elementary.alerts_dbt_tests
[0m23:53:05.002077 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m23:53:05.014386 [debug] [Thread-1  ]: Writing injected SQL for node "model.elementary.alerts_anomaly_detection"
[0m23:53:05.042631 [debug] [Thread-4  ]: Writing injected SQL for node "model.elementary.alerts_dbt_tests"
[0m23:53:05.051736 [debug] [Thread-1  ]: Began executing node model.elementary.alerts_anomaly_detection
[0m23:53:05.060145 [debug] [Thread-4  ]: Began executing node model.elementary.alerts_dbt_tests
[0m23:53:05.079129 [debug] [Thread-1  ]: Writing runtime sql for node "model.elementary.alerts_anomaly_detection"
[0m23:53:05.088612 [debug] [Thread-4  ]: Writing runtime sql for node "model.elementary.alerts_dbt_tests"
[0m23:53:05.099446 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.alerts_anomaly_detection"
[0m23:53:05.102483 [debug] [Thread-1  ]: On model.elementary.alerts_anomaly_detection: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.alerts_anomaly_detection"} */
create or replace   view NBA.dbt_parker_elementary.alerts_anomaly_detection
  
   as (
    

with elementary_test_results as (
    select * from NBA.dbt_parker_elementary.elementary_test_results
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection
  );
[0m23:53:05.104939 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m23:53:05.101622 [debug] [Thread-4  ]: Using snowflake connection "model.elementary.alerts_dbt_tests"
[0m23:53:05.110757 [debug] [Thread-4  ]: On model.elementary.alerts_dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.alerts_dbt_tests"} */
create or replace   view NBA.dbt_parker_elementary.alerts_dbt_tests
  
   as (
    

with elementary_test_results as (
    select * from NBA.dbt_parker_elementary.elementary_test_results
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests
  );
[0m23:53:05.128776 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m23:53:05.188452 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.236 seconds
[0m23:53:05.193178 [debug] [Thread-8  ]: Elementary: Finished deleting from and inserting to: NBA.dbt_parker_elementary.dbt_columns
[0m23:53:05.197431 [debug] [Thread-8  ]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_columns]:
[0m23:53:05.202109 [debug] [Thread-8  ]: Elementary:     upload_artifacts_to_table[dbt_columns].artifacts_flatten: 0:00:00.328428 (1 runs)
[0m23:53:05.200664 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 0.460 seconds
[0m23:53:05.205804 [debug] [Thread-8  ]: Elementary:     upload_artifacts_to_table[dbt_columns].insert_rows.get_columns_in_relation: 0:00:00.232908 (1 runs)
[0m23:53:05.228523 [debug] [Thread-8  ]: Elementary:     upload_artifacts_to_table[dbt_columns].insert_rows.get_insert_rows_queries.base_query_calc: 0:00:00.000608 (1 runs)
[0m23:53:05.231354 [debug] [Thread-8  ]: Elementary:     upload_artifacts_to_table[dbt_columns].insert_rows.get_insert_rows_queries.render_row_to_sql: 0:00:01.168936 (69 runs)
[0m23:53:05.220777 [debug] [Thread-3  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_models__tmp_20240920235300428392
[0m23:53:05.237214 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.dbt_models"
[0m23:53:05.234258 [debug] [Thread-8  ]: Elementary:     upload_artifacts_to_table[dbt_columns].insert_rows.get_insert_rows_queries: 0:00:01.268023 (1 runs)
[0m23:53:05.226698 [debug] [Thread-6  ]: SQL status: SUCCESS 7 in 0.468 seconds
[0m23:53:05.239603 [debug] [Thread-3  ]: On model.elementary.dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_models"} */
drop table if exists NBA.dbt_parker_elementary.dbt_models__tmp_20240920235300428392 cascade
[0m23:53:05.243051 [debug] [Thread-8  ]: Elementary:     upload_artifacts_to_table[dbt_columns].insert_rows.run_insert_rows_query: 0:00:00.520496 (1 runs)
[0m23:53:05.248994 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:05.297886 [debug] [Thread-8  ]: Elementary:     upload_artifacts_to_table[dbt_columns].insert_rows: 0:00:02.145167 (1 runs)
[0m23:53:05.304991 [debug] [Thread-8  ]: Elementary:     upload_artifacts_to_table[dbt_columns]: 0:00:05.496199 (1 runs)
[0m23:53:05.309521 [debug] [Thread-8  ]: On model.elementary.dbt_columns: Close
[0m23:53:05.300897 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
begin transaction;
[0m23:53:05.461446 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 0.199 seconds
[0m23:53:05.467538 [debug] [Thread-3  ]: Elementary: Finished deleting from and inserting to: NBA.dbt_parker_elementary.dbt_models
[0m23:53:05.473334 [debug] [Thread-3  ]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_models]:
[0m23:53:05.476638 [debug] [Thread-3  ]: Elementary:     upload_artifacts_to_table[dbt_models].artifacts_flatten: 0:00:00.121594 (1 runs)
[0m23:53:05.480768 [debug] [Thread-3  ]: Elementary:     upload_artifacts_to_table[dbt_models].insert_rows.get_columns_in_relation: 0:00:00.211014 (1 runs)
[0m23:53:05.484161 [debug] [Thread-3  ]: Elementary:     upload_artifacts_to_table[dbt_models].insert_rows.get_insert_rows_queries.base_query_calc: 0:00:00.000808 (1 runs)
[0m23:53:05.487629 [debug] [Thread-3  ]: Elementary:     upload_artifacts_to_table[dbt_models].insert_rows.get_insert_rows_queries.render_row_to_sql: 0:00:01.099388 (38 runs)
[0m23:53:05.490736 [debug] [Thread-3  ]: Elementary:     upload_artifacts_to_table[dbt_models].insert_rows.get_insert_rows_queries: 0:00:01.171731 (1 runs)
[0m23:53:05.493867 [debug] [Thread-3  ]: Elementary:     upload_artifacts_to_table[dbt_models].insert_rows.run_insert_rows_query: 0:00:00.724310 (1 runs)
[0m23:53:05.496823 [debug] [Thread-3  ]: Elementary:     upload_artifacts_to_table[dbt_models].insert_rows: 0:00:02.336806 (1 runs)
[0m23:53:05.499867 [debug] [Thread-3  ]: Elementary:     upload_artifacts_to_table[dbt_models]: 0:00:05.513450 (1 runs)
[0m23:53:05.511454 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 0.195 seconds
[0m23:53:05.520000 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:05.517130 [debug] [Thread-3  ]: On model.elementary.dbt_models: Close
[0m23:53:05.514043 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff84577f40>]}
[0m23:53:05.522590 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
insert into NBA.dbt_parker_elementary.dbt_sources select * from NBA.dbt_parker_elementary.dbt_sources__tmp_20240920235303592068;
[0m23:53:05.535771 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.521 seconds
[0m23:53:05.541200 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:05.545588 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
COMMIT
[0m23:53:05.569241 [info ] [Thread-8  ]: 9 of 38 OK created sql incremental model dbt_parker_elementary.dbt_columns ..... [[32mSUCCESS 1[0m in 7.30s]
[0m23:53:05.572197 [debug] [Thread-8  ]: Finished running node model.elementary.dbt_columns
[0m23:53:05.574717 [debug] [Thread-8  ]: Began running node model.elementary.alerts_schema_changes
[0m23:53:05.577554 [info ] [Thread-8  ]: 29 of 38 START sql view model dbt_parker_elementary.alerts_schema_changes ...... [RUN]
[0m23:53:05.580445 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_columns, now model.elementary.alerts_schema_changes)
[0m23:53:05.582849 [debug] [Thread-8  ]: Began compiling node model.elementary.alerts_schema_changes
[0m23:53:05.595304 [debug] [Thread-8  ]: Writing injected SQL for node "model.elementary.alerts_schema_changes"
[0m23:53:05.602836 [debug] [Thread-8  ]: Began executing node model.elementary.alerts_schema_changes
[0m23:53:05.616546 [debug] [Thread-8  ]: Writing runtime sql for node "model.elementary.alerts_schema_changes"
[0m23:53:05.626062 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.alerts_schema_changes"
[0m23:53:05.629265 [debug] [Thread-8  ]: On model.elementary.alerts_schema_changes: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.alerts_schema_changes"} */
create or replace   view NBA.dbt_parker_elementary.alerts_schema_changes
  
   as (
    


with elementary_test_results as (
    select * from NBA.dbt_parker_elementary.elementary_test_results
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes
  );
[0m23:53:05.632337 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m23:53:05.719058 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff8075e190>]}
[0m23:53:05.723815 [info ] [Thread-3  ]: 13 of 38 OK created sql incremental model dbt_parker_elementary.dbt_models ..... [[32mSUCCESS 1[0m in 7.29s]
[0m23:53:05.727702 [debug] [Thread-3  ]: Finished running node model.elementary.dbt_models
[0m23:53:05.730906 [debug] [Thread-3  ]: Began running node model.elementary.test_result_rows
[0m23:53:05.734533 [info ] [Thread-3  ]: 30 of 38 START sql incremental model dbt_parker_elementary.test_result_rows .... [RUN]
[0m23:53:05.738572 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_models, now model.elementary.test_result_rows)
[0m23:53:05.740967 [debug] [Thread-3  ]: Began compiling node model.elementary.test_result_rows
[0m23:53:05.762187 [debug] [Thread-3  ]: Writing injected SQL for node "model.elementary.test_result_rows"
[0m23:53:05.770484 [debug] [Thread-3  ]: Began executing node model.elementary.test_result_rows
[0m23:53:05.787788 [debug] [Thread-3  ]: Writing runtime sql for node "model.elementary.test_result_rows"
[0m23:53:05.812670 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.test_result_rows"
[0m23:53:05.815276 [debug] [Thread-3  ]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
create or replace transient table NBA.dbt_parker_elementary.test_result_rows
         as
        (-- indexes are not supported in all warehouses, relevant to postgres only


-- depends_on: NBA.dbt_parker_elementary.elementary_test_results
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as varchar) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as varchar) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
        );
[0m23:53:05.817769 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m23:53:05.900310 [debug] [Thread-2  ]: SQL status: SUCCESS 1 in 1.024 seconds
[0m23:53:05.905886 [debug] [Thread-2  ]: On model.demo_project.intermediate_player_info: Close
[0m23:53:05.934879 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 0.933 seconds
[0m23:53:05.939557 [debug] [Thread-5  ]: On model.elementary.job_run_results: Close
[0m23:53:05.964674 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.417 seconds
[0m23:53:05.976348 [debug] [Thread-7  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_tests__tmp_20240920235303460565
[0m23:53:05.979735 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_tests"
[0m23:53:05.982410 [debug] [Thread-7  ]: On model.elementary.dbt_tests: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_tests"} */
drop table if exists NBA.dbt_parker_elementary.dbt_tests__tmp_20240920235303460565 cascade
[0m23:53:06.087195 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff80418310>]}
[0m23:53:06.090192 [info ] [Thread-2  ]: 25 of 38 OK created sql view model dbt_parker.intermediate_player_info ......... [[32mSUCCESS 1[0m in 1.30s]
[0m23:53:06.093218 [debug] [Thread-2  ]: Finished running node model.demo_project.intermediate_player_info
[0m23:53:06.095713 [debug] [Thread-2  ]: Began running node model.elementary.snapshot_run_results
[0m23:53:06.098300 [info ] [Thread-2  ]: 31 of 38 START sql view model dbt_parker_elementary.snapshot_run_results ....... [RUN]
[0m23:53:06.100873 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.demo_project.intermediate_player_info, now model.elementary.snapshot_run_results)
[0m23:53:06.103394 [debug] [Thread-2  ]: Began compiling node model.elementary.snapshot_run_results
[0m23:53:06.228351 [debug] [Thread-6  ]: SQL status: SUCCESS 7 in 0.691 seconds
[0m23:53:06.242608 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:06.250455 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
COMMIT
[0m23:53:06.243813 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.259 seconds
[0m23:53:06.256832 [debug] [Thread-7  ]: Elementary: Finished deleting from and inserting to: NBA.dbt_parker_elementary.dbt_tests
[0m23:53:06.260759 [debug] [Thread-7  ]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_tests]:
[0m23:53:06.230841 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff843782e0>]}
[0m23:53:06.266916 [info ] [Thread-5  ]: 26 of 38 OK created sql view model dbt_parker_elementary.job_run_results ....... [[32mSUCCESS 1[0m in 1.34s]
[0m23:53:06.264027 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_tests].artifacts_flatten: 0:00:00.182911 (1 runs)
[0m23:53:06.251137 [debug] [Thread-2  ]: Writing injected SQL for node "model.elementary.snapshot_run_results"
[0m23:53:06.269901 [debug] [Thread-5  ]: Finished running node model.elementary.job_run_results
[0m23:53:06.273497 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_tests].insert_rows.get_columns_in_relation: 0:00:00.214781 (1 runs)
[0m23:53:06.280460 [debug] [Thread-5  ]: Began running node model.elementary.anomaly_threshold_sensitivity
[0m23:53:06.283266 [debug] [Thread-2  ]: Began executing node model.elementary.snapshot_run_results
[0m23:53:06.297134 [debug] [Thread-2  ]: Writing runtime sql for node "model.elementary.snapshot_run_results"
[0m23:53:06.286660 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 1.182 seconds
[0m23:53:06.289312 [debug] [Thread-4  ]: SQL status: SUCCESS 1 in 1.161 seconds
[0m23:53:06.287609 [info ] [Thread-5  ]: 32 of 38 START sql view model dbt_parker_elementary.anomaly_threshold_sensitivity  [RUN]
[0m23:53:06.284716 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_tests].insert_rows.get_insert_rows_queries.base_query_calc: 0:00:00.000567 (1 runs)
[0m23:53:06.315466 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_tests].insert_rows.get_insert_rows_queries.render_row_to_sql: 0:00:00.011555 (1 runs)
[0m23:53:06.318753 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_tests].insert_rows.get_insert_rows_queries: 0:00:00.013196 (1 runs)
[0m23:53:06.321855 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_tests].insert_rows.run_insert_rows_query: 0:00:00.396424 (1 runs)
[0m23:53:06.311683 [debug] [Thread-2  ]: Using snowflake connection "model.elementary.snapshot_run_results"
[0m23:53:06.327572 [debug] [Thread-2  ]: On model.elementary.snapshot_run_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.snapshot_run_results"} */
create or replace   view NBA.dbt_parker_elementary.snapshot_run_results
  
   as (
    

with dbt_run_results as (
    select * from NBA.dbt_parker_elementary.dbt_run_results
),

dbt_snapshots as (
    select * from NBA.dbt_parker_elementary.dbt_snapshots
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id
  );
[0m23:53:06.309101 [debug] [Thread-4  ]: On model.elementary.alerts_dbt_tests: Close
[0m23:53:06.312486 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.elementary.job_run_results, now model.elementary.anomaly_threshold_sensitivity)
[0m23:53:06.338101 [debug] [Thread-5  ]: Began compiling node model.elementary.anomaly_threshold_sensitivity
[0m23:53:06.304060 [debug] [Thread-1  ]: On model.elementary.alerts_anomaly_detection: Close
[0m23:53:06.330327 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m23:53:06.324955 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_tests].insert_rows: 0:00:00.632409 (1 runs)
[0m23:53:06.374730 [debug] [Thread-7  ]: Elementary:     upload_artifacts_to_table[dbt_tests]: 0:00:03.531634 (1 runs)
[0m23:53:06.379029 [debug] [Thread-7  ]: On model.elementary.dbt_tests: Close
[0m23:53:06.368620 [debug] [Thread-5  ]: Writing injected SQL for node "model.elementary.anomaly_threshold_sensitivity"
[0m23:53:06.390118 [debug] [Thread-5  ]: Began executing node model.elementary.anomaly_threshold_sensitivity
[0m23:53:06.404376 [debug] [Thread-5  ]: Writing runtime sql for node "model.elementary.anomaly_threshold_sensitivity"
[0m23:53:06.412842 [debug] [Thread-5  ]: Using snowflake connection "model.elementary.anomaly_threshold_sensitivity"
[0m23:53:06.422342 [debug] [Thread-5  ]: On model.elementary.anomaly_threshold_sensitivity: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.anomaly_threshold_sensitivity"} */
create or replace   view NBA.dbt_parker_elementary.anomaly_threshold_sensitivity
  
   as (
    

with metrics_anomaly_score as (

    select * from NBA.dbt_parker_elementary.metrics_anomaly_score

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as "is_anomaly_1_5",
        case when abs(anomaly_score) >= 2 then true else false end as "is_anomaly_2",
        case when abs(anomaly_score) >= 2.5 then true else false end as "is_anomaly_2_5",
        case when abs(anomaly_score) >= 3 then true else false end as "is_anomaly_3",
        case when abs(anomaly_score) >= 3.5 then true else false end as "is_anomaly_3_5",
        case when abs(anomaly_score) >= 4 then true else false end as "is_anomaly_4",
        case when abs(anomaly_score) >= 4.5 then true else false end as "is_anomaly_4_5"
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity
  );
[0m23:53:06.425633 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m23:53:06.533418 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff84472910>]}
[0m23:53:06.536496 [info ] [Thread-4  ]: 28 of 38 OK created sql view model dbt_parker_elementary.alerts_dbt_tests ...... [[32mSUCCESS 1[0m in 1.54s]
[0m23:53:06.539794 [debug] [Thread-4  ]: Finished running node model.elementary.alerts_dbt_tests
[0m23:53:06.542699 [debug] [Thread-4  ]: Began running node model.elementary.model_run_results
[0m23:53:06.544237 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83c16cd0>]}
[0m23:53:06.548164 [info ] [Thread-1  ]: 27 of 38 OK created sql view model dbt_parker_elementary.alerts_anomaly_detection  [[32mSUCCESS 1[0m in 1.58s]
[0m23:53:06.545466 [info ] [Thread-4  ]: 33 of 38 START sql view model dbt_parker_elementary.model_run_results .......... [RUN]
[0m23:53:06.554044 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.elementary.alerts_dbt_tests, now model.elementary.model_run_results)
[0m23:53:06.556671 [debug] [Thread-4  ]: Began compiling node model.elementary.model_run_results
[0m23:53:06.551020 [debug] [Thread-1  ]: Finished running node model.elementary.alerts_anomaly_detection
[0m23:53:06.590365 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83abf3d0>]}
[0m23:53:06.593427 [info ] [Thread-7  ]: 19 of 38 OK created sql incremental model dbt_parker_elementary.dbt_tests ...... [[32mSUCCESS 1[0m in 5.72s]
[0m23:53:06.596475 [debug] [Thread-7  ]: Finished running node model.elementary.dbt_tests
[0m23:53:06.594683 [debug] [Thread-4  ]: Writing injected SQL for node "model.elementary.model_run_results"
[0m23:53:06.604575 [debug] [Thread-4  ]: Began executing node model.elementary.model_run_results
[0m23:53:06.614762 [debug] [Thread-4  ]: Writing runtime sql for node "model.elementary.model_run_results"
[0m23:53:06.623985 [debug] [Thread-4  ]: Using snowflake connection "model.elementary.model_run_results"
[0m23:53:06.626658 [debug] [Thread-4  ]: On model.elementary.model_run_results: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.model_run_results"} */
create or replace   view NBA.dbt_parker_elementary.model_run_results
  
   as (
    

with dbt_run_results as (
    select * from NBA.dbt_parker_elementary.dbt_run_results
),

dbt_models as (
    select * from NBA.dbt_parker_elementary.dbt_models
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id
  );
[0m23:53:06.629956 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 0.377 seconds
[0m23:53:06.630682 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m23:53:06.643063 [debug] [Thread-6  ]: Applying DROP to: NBA.dbt_parker_elementary.dbt_sources__tmp_20240920235303592068
[0m23:53:06.651570 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.dbt_sources"
[0m23:53:06.657121 [debug] [Thread-6  ]: On model.elementary.dbt_sources: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_sources"} */
drop table if exists NBA.dbt_parker_elementary.dbt_sources__tmp_20240920235303592068 cascade
[0m23:53:06.702297 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 0.884 seconds
[0m23:53:06.712152 [debug] [Thread-3  ]: Applying DROP to: NBA.dbt_parker_elementary.test_result_rows__dbt_tmp
[0m23:53:06.715602 [debug] [Thread-3  ]: Using snowflake connection "model.elementary.test_result_rows"
[0m23:53:06.717931 [debug] [Thread-3  ]: On model.elementary.test_result_rows: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.test_result_rows"} */
drop view if exists NBA.dbt_parker_elementary.test_result_rows__dbt_tmp cascade
[0m23:53:06.769381 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 1.137 seconds
[0m23:53:06.780524 [debug] [Thread-8  ]: On model.elementary.alerts_schema_changes: Close
[0m23:53:06.809632 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 0.143 seconds
[0m23:53:06.826412 [debug] [Thread-6  ]: Elementary: Finished deleting from and inserting to: NBA.dbt_parker_elementary.dbt_sources
[0m23:53:06.830742 [debug] [Thread-6  ]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_sources]:
[0m23:53:06.834743 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_sources].artifacts_flatten: 0:00:00.126420 (1 runs)
[0m23:53:06.837483 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_sources].insert_rows.get_columns_in_relation: 0:00:00.156557 (1 runs)
[0m23:53:06.840717 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_sources].insert_rows.get_insert_rows_queries.base_query_calc: 0:00:00.000658 (1 runs)
[0m23:53:06.841964 [debug] [Thread-3  ]: SQL status: SUCCESS 1 in 0.119 seconds
[0m23:53:06.849051 [debug] [Thread-3  ]: On model.elementary.test_result_rows: Close
[0m23:53:06.843759 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_sources].insert_rows.get_insert_rows_queries.render_row_to_sql: 0:00:00.094215 (7 runs)
[0m23:53:06.864928 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_sources].insert_rows.get_insert_rows_queries: 0:00:00.098029 (1 runs)
[0m23:53:06.868107 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_sources].insert_rows.run_insert_rows_query: 0:00:00.501838 (1 runs)
[0m23:53:06.871142 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_sources].insert_rows: 0:00:00.776303 (1 runs)
[0m23:53:06.874268 [debug] [Thread-6  ]: Elementary:     upload_artifacts_to_table[dbt_sources]: 0:00:04.341280 (1 runs)
[0m23:53:06.880865 [debug] [Thread-6  ]: On model.elementary.dbt_sources: Close
[0m23:53:06.981562 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff803aadc0>]}
[0m23:53:06.984668 [info ] [Thread-8  ]: 29 of 38 OK created sql view model dbt_parker_elementary.alerts_schema_changes . [[32mSUCCESS 1[0m in 1.40s]
[0m23:53:06.987885 [debug] [Thread-8  ]: Finished running node model.elementary.alerts_schema_changes
[0m23:53:07.030173 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff80729a00>]}
[0m23:53:07.033188 [info ] [Thread-3  ]: 30 of 38 OK created sql incremental model dbt_parker_elementary.test_result_rows  [[32mSUCCESS 1[0m in 1.29s]
[0m23:53:07.036279 [debug] [Thread-3  ]: Finished running node model.elementary.test_result_rows
[0m23:53:07.087432 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff8447e3d0>]}
[0m23:53:07.090508 [info ] [Thread-6  ]: 18 of 38 OK created sql incremental model dbt_parker_elementary.dbt_sources .... [[32mSUCCESS 1[0m in 6.37s]
[0m23:53:07.093596 [debug] [Thread-6  ]: Finished running node model.elementary.dbt_sources
[0m23:53:07.096834 [debug] [Thread-1  ]: Began running node model.elementary.alerts_dbt_source_freshness
[0m23:53:07.097621 [debug] [Thread-7  ]: Began running node model.elementary.dbt_artifacts_hashes
[0m23:53:07.098234 [debug] [Thread-8  ]: Began running node model.elementary.information_schema_columns
[0m23:53:07.099896 [info ] [Thread-1  ]: 34 of 38 START sql view model dbt_parker_elementary.alerts_dbt_source_freshness  [RUN]
[0m23:53:07.107684 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.elementary.alerts_anomaly_detection, now model.elementary.alerts_dbt_source_freshness)
[0m23:53:07.110079 [debug] [Thread-1  ]: Began compiling node model.elementary.alerts_dbt_source_freshness
[0m23:53:07.102759 [info ] [Thread-7  ]: 35 of 38 START sql view model dbt_parker_elementary.dbt_artifacts_hashes ....... [RUN]
[0m23:53:07.105101 [info ] [Thread-8  ]: 36 of 38 START sql view model dbt_parker_elementary.information_schema_columns . [RUN]
[0m23:53:07.131505 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.elementary.alerts_schema_changes, now model.elementary.information_schema_columns)
[0m23:53:07.128943 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_tests, now model.elementary.dbt_artifacts_hashes)
[0m23:53:07.136294 [debug] [Thread-7  ]: Began compiling node model.elementary.dbt_artifacts_hashes
[0m23:53:07.133941 [debug] [Thread-8  ]: Began compiling node model.elementary.information_schema_columns
[0m23:53:07.124604 [debug] [Thread-1  ]: Writing injected SQL for node "model.elementary.alerts_dbt_source_freshness"
[0m23:53:07.147656 [debug] [Thread-7  ]: Writing injected SQL for node "model.elementary.dbt_artifacts_hashes"
[0m23:53:07.176195 [debug] [Thread-1  ]: Began executing node model.elementary.alerts_dbt_source_freshness
[0m23:53:07.190239 [debug] [Thread-1  ]: Writing runtime sql for node "model.elementary.alerts_dbt_source_freshness"
[0m23:53:07.182744 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.information_schema_columns"
[0m23:53:07.193121 [debug] [Thread-7  ]: Began executing node model.elementary.dbt_artifacts_hashes
[0m23:53:07.196072 [debug] [Thread-8  ]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
show databases like 'NBA'
[0m23:53:07.208406 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m23:53:07.199078 [debug] [Thread-1  ]: Using snowflake connection "model.elementary.alerts_dbt_source_freshness"
[0m23:53:07.215421 [debug] [Thread-1  ]: On model.elementary.alerts_dbt_source_freshness: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.alerts_dbt_source_freshness"} */
create or replace   view NBA.dbt_parker_elementary.alerts_dbt_source_freshness
  
   as (
    

with results as (
  select * from NBA.dbt_parker_elementary.dbt_source_freshness_results
),

sources as (
  select * from NBA.dbt_parker_elementary.dbt_sources
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'
  );
[0m23:53:07.218098 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m23:53:07.207654 [debug] [Thread-7  ]: Writing runtime sql for node "model.elementary.dbt_artifacts_hashes"
[0m23:53:07.229522 [debug] [Thread-7  ]: Using snowflake connection "model.elementary.dbt_artifacts_hashes"
[0m23:53:07.232185 [debug] [Thread-7  ]: On model.elementary.dbt_artifacts_hashes: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.dbt_artifacts_hashes"} */
create or replace   view NBA.dbt_parker_elementary.dbt_artifacts_hashes
  
   as (
    




select
  'dbt_models' as artifacts_model,
   metadata_hash
from NBA.dbt_parker_elementary.dbt_models
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from NBA.dbt_parker_elementary.dbt_tests
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from NBA.dbt_parker_elementary.dbt_sources
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from NBA.dbt_parker_elementary.dbt_snapshots
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from NBA.dbt_parker_elementary.dbt_metrics
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from NBA.dbt_parker_elementary.dbt_exposures
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from NBA.dbt_parker_elementary.dbt_seeds
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from NBA.dbt_parker_elementary.dbt_columns


order by metadata_hash
  );
[0m23:53:07.234740 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m23:53:07.383990 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 0.958 seconds
[0m23:53:07.391828 [debug] [Thread-5  ]: On model.elementary.anomaly_threshold_sensitivity: Close
[0m23:53:07.581065 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff80313880>]}
[0m23:53:07.584285 [info ] [Thread-5  ]: 32 of 38 OK created sql view model dbt_parker_elementary.anomaly_threshold_sensitivity  [[32mSUCCESS 1[0m in 1.27s]
[0m23:53:07.587241 [debug] [Thread-5  ]: Finished running node model.elementary.anomaly_threshold_sensitivity
[0m23:53:07.713898 [debug] [Thread-2  ]: SQL status: SUCCESS 1 in 1.384 seconds
[0m23:53:07.719037 [debug] [Thread-2  ]: On model.elementary.snapshot_run_results: Close
[0m23:53:07.787599 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.579 seconds
[0m23:53:07.816787 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.information_schema_columns"
[0m23:53:07.819542 [debug] [Thread-8  ]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
select count(*)
        from NBA.INFORMATION_SCHEMA.schemata
        where upper(schema_name) = upper('PUBLIC')
            and upper(catalog_name) = upper('NBA')
[0m23:53:07.925627 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff839ac370>]}
[0m23:53:07.928654 [info ] [Thread-2  ]: 31 of 38 OK created sql view model dbt_parker_elementary.snapshot_run_results .. [[32mSUCCESS 1[0m in 1.82s]
[0m23:53:07.931781 [debug] [Thread-2  ]: Finished running node model.elementary.snapshot_run_results
[0m23:53:07.974812 [debug] [Thread-4  ]: SQL status: SUCCESS 1 in 1.344 seconds
[0m23:53:07.979307 [debug] [Thread-4  ]: On model.elementary.model_run_results: Close
[0m23:53:08.049908 [debug] [Thread-7  ]: SQL status: SUCCESS 1 in 0.815 seconds
[0m23:53:08.054455 [debug] [Thread-7  ]: On model.elementary.dbt_artifacts_hashes: Close
[0m23:53:08.174190 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff806c72e0>]}
[0m23:53:08.177173 [info ] [Thread-4  ]: 33 of 38 OK created sql view model dbt_parker_elementary.model_run_results ..... [[32mSUCCESS 1[0m in 1.62s]
[0m23:53:08.180079 [debug] [Thread-4  ]: Finished running node model.elementary.model_run_results
[0m23:53:08.182752 [debug] [Thread-6  ]: Began running node model.elementary.alerts_dbt_models
[0m23:53:08.185335 [info ] [Thread-6  ]: 37 of 38 START sql view model dbt_parker_elementary.alerts_dbt_models .......... [RUN]
[0m23:53:08.188892 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.elementary.dbt_sources, now model.elementary.alerts_dbt_models)
[0m23:53:08.191974 [debug] [Thread-6  ]: Began compiling node model.elementary.alerts_dbt_models
[0m23:53:08.188043 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.366 seconds
[0m23:53:08.215993 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.information_schema_columns"
[0m23:53:08.218839 [debug] [Thread-8  ]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
show databases like 'NBA'
[0m23:53:08.206423 [debug] [Thread-6  ]: Writing injected SQL for node "model.elementary.alerts_dbt_models"
[0m23:53:08.229092 [debug] [Thread-6  ]: Began executing node model.elementary.alerts_dbt_models
[0m23:53:08.240081 [debug] [Thread-6  ]: Writing runtime sql for node "model.elementary.alerts_dbt_models"
[0m23:53:08.243086 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83e34220>]}
[0m23:53:08.249194 [info ] [Thread-7  ]: 35 of 38 OK created sql view model dbt_parker_elementary.dbt_artifacts_hashes .. [[32mSUCCESS 1[0m in 1.11s]
[0m23:53:08.262304 [debug] [Thread-7  ]: Finished running node model.elementary.dbt_artifacts_hashes
[0m23:53:08.253478 [debug] [Thread-6  ]: Using snowflake connection "model.elementary.alerts_dbt_models"
[0m23:53:08.266917 [debug] [Thread-6  ]: On model.elementary.alerts_dbt_models: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.alerts_dbt_models"} */
create or replace   view NBA.dbt_parker_elementary.alerts_dbt_models
  
   as (
    

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from NBA.dbt_parker_elementary.model_run_results
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from NBA.dbt_parker_elementary.snapshot_run_results
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'
  );
[0m23:53:08.269514 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m23:53:08.377744 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.156 seconds
[0m23:53:08.390156 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.information_schema_columns"
[0m23:53:08.393891 [debug] [Thread-8  ]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
select count(*)
        from NBA.INFORMATION_SCHEMA.schemata
        where upper(schema_name) = upper('dbt_parker')
            and upper(catalog_name) = upper('NBA')
[0m23:53:08.416623 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 1.198 seconds
[0m23:53:08.421442 [debug] [Thread-1  ]: On model.elementary.alerts_dbt_source_freshness: Close
[0m23:53:08.600628 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83a0b2b0>]}
[0m23:53:08.603674 [info ] [Thread-1  ]: 34 of 38 OK created sql view model dbt_parker_elementary.alerts_dbt_source_freshness  [[32mSUCCESS 1[0m in 1.49s]
[0m23:53:08.606705 [debug] [Thread-1  ]: Finished running node model.elementary.alerts_dbt_source_freshness
[0m23:53:08.806128 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.404 seconds
[0m23:53:08.810759 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.information_schema_columns"
[0m23:53:08.813391 [debug] [Thread-8  ]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
show databases like 'NBA'
[0m23:53:08.999526 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.184 seconds
[0m23:53:09.010598 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.information_schema_columns"
[0m23:53:09.013246 [debug] [Thread-8  ]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
select count(*)
        from NBA.INFORMATION_SCHEMA.schemata
        where upper(schema_name) = upper('dbt_parker_staging')
            and upper(catalog_name) = upper('NBA')
[0m23:53:09.483450 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.467 seconds
[0m23:53:09.499086 [debug] [Thread-6  ]: SQL status: SUCCESS 1 in 1.230 seconds
[0m23:53:09.504478 [debug] [Thread-6  ]: On model.elementary.alerts_dbt_models: Close
[0m23:53:09.501676 [debug] [Thread-8  ]: Writing injected SQL for node "model.elementary.information_schema_columns"
[0m23:53:09.518485 [debug] [Thread-8  ]: Began executing node model.elementary.information_schema_columns
[0m23:53:09.534377 [debug] [Thread-8  ]: Writing runtime sql for node "model.elementary.information_schema_columns"
[0m23:53:09.552155 [debug] [Thread-8  ]: Using snowflake connection "model.elementary.information_schema_columns"
[0m23:53:09.555476 [debug] [Thread-8  ]: On model.elementary.information_schema_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.information_schema_columns"} */
create or replace   view NBA.dbt_parker_elementary.information_schema_columns
  
   as (
    

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from NBA.dbt_parker_elementary.dbt_models
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from NBA.dbt_parker_elementary.dbt_snapshots
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from NBA.dbt_parker_elementary.dbt_sources
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from NBA.dbt_parker_elementary.dbt_seeds
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    
    
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from NBA.INFORMATION_SCHEMA.COLUMNS
    where upper(table_schema) = upper('PUBLIC')
    
)
        
            union all
        
    
        (
    
    
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from NBA.INFORMATION_SCHEMA.COLUMNS
    where upper(table_schema) = upper('dbt_parker')
    
)
        
            union all
        
    
        (
    
    
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from NBA.INFORMATION_SCHEMA.COLUMNS
    where upper(table_schema) = upper('dbt_parker_staging')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns


  );
[0m23:53:09.715680 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff80527910>]}
[0m23:53:09.719185 [info ] [Thread-6  ]: 37 of 38 OK created sql view model dbt_parker_elementary.alerts_dbt_models ..... [[32mSUCCESS 1[0m in 1.53s]
[0m23:53:09.722058 [debug] [Thread-6  ]: Finished running node model.elementary.alerts_dbt_models
[0m23:53:10.517568 [debug] [Thread-8  ]: SQL status: SUCCESS 1 in 0.959 seconds
[0m23:53:10.522394 [debug] [Thread-8  ]: On model.elementary.information_schema_columns: Close
[0m23:53:10.724395 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff83e34280>]}
[0m23:53:10.727619 [info ] [Thread-8  ]: 36 of 38 OK created sql view model dbt_parker_elementary.information_schema_columns  [[32mSUCCESS 1[0m in 3.59s]
[0m23:53:10.730705 [debug] [Thread-8  ]: Finished running node model.elementary.information_schema_columns
[0m23:53:10.738039 [debug] [Thread-5  ]: Began running node model.elementary.enriched_columns
[0m23:53:10.740981 [info ] [Thread-5  ]: 38 of 38 START sql view model dbt_parker_elementary.enriched_columns ........... [RUN]
[0m23:53:10.744697 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.elementary.anomaly_threshold_sensitivity, now model.elementary.enriched_columns)
[0m23:53:10.747557 [debug] [Thread-5  ]: Began compiling node model.elementary.enriched_columns
[0m23:53:10.758157 [debug] [Thread-5  ]: Writing injected SQL for node "model.elementary.enriched_columns"
[0m23:53:10.766971 [debug] [Thread-5  ]: Began executing node model.elementary.enriched_columns
[0m23:53:10.776904 [debug] [Thread-5  ]: Writing runtime sql for node "model.elementary.enriched_columns"
[0m23:53:10.785429 [debug] [Thread-5  ]: Using snowflake connection "model.elementary.enriched_columns"
[0m23:53:10.787984 [debug] [Thread-5  ]: On model.elementary.enriched_columns: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "model.elementary.enriched_columns"} */
create or replace   view NBA.dbt_parker_elementary.enriched_columns
  
   as (
    


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from NBA.dbt_parker_elementary.information_schema_columns
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from NBA.dbt_parker_elementary.dbt_columns
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)
  );
[0m23:53:10.790525 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m23:53:12.485564 [debug] [Thread-5  ]: SQL status: SUCCESS 1 in 1.695 seconds
[0m23:53:12.490255 [debug] [Thread-5  ]: On model.elementary.enriched_columns: Close
[0m23:53:12.695633 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1e51ddeb-2f81-460f-872c-7f45e659bcce', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff8049cf70>]}
[0m23:53:12.698627 [info ] [Thread-5  ]: 38 of 38 OK created sql view model dbt_parker_elementary.enriched_columns ...... [[32mSUCCESS 1[0m in 1.95s]
[0m23:53:12.701384 [debug] [Thread-5  ]: Finished running node model.elementary.enriched_columns
[0m23:53:12.705412 [info ] [MainThread]: 
[0m23:53:12.707849 [info ] [MainThread]: Running 1 on-run-end hook
[0m23:53:12.732589 [debug] [MainThread]: Elementary: Inserting 0 metrics into NBA.dbt_parker_elementary.data_monitoring_metrics.
[0m23:53:12.751917 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:12.754545 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
select artifacts_model, metadata_hash from NBA.dbt_parker_elementary.dbt_artifacts_hashes
    order by metadata_hash
[0m23:53:12.756949 [debug] [MainThread]: Opening a new connection, currently in state init
[0m23:53:13.804693 [debug] [MainThread]: SQL status: SUCCESS 115 in 1.048 seconds
[0m23:53:13.810156 [debug] [MainThread]: Elementary: Uploading dbt artifacts.
[0m23:53:13.817148 [debug] [MainThread]: Elementary: [dbt_models] Artifacts already ran.
[0m23:53:13.820099 [debug] [MainThread]: Elementary: [dbt_tests] Artifacts already ran.
[0m23:53:13.822878 [debug] [MainThread]: Elementary: [dbt_sources] Artifacts already ran.
[0m23:53:13.825507 [debug] [MainThread]: Elementary: [dbt_snapshots] Artifacts already ran.
[0m23:53:13.828302 [debug] [MainThread]: Elementary: [dbt_metrics] Artifacts already ran.
[0m23:53:13.831022 [debug] [MainThread]: Elementary: [dbt_exposures] Artifacts already ran.
[0m23:53:13.833668 [debug] [MainThread]: Elementary: [dbt_seeds] Artifacts already ran.
[0m23:53:13.836280 [debug] [MainThread]: Elementary: [dbt_columns] Artifacts already ran.
[0m23:53:13.839680 [debug] [MainThread]: Elementary: Uploaded dbt artifacts.
[0m23:53:13.846518 [debug] [MainThread]: Elementary: Uploading run results.
[0m23:53:13.849396 [debug] [MainThread]: Elementary: [dbt_run_results] Flattening the artifacts.
[0m23:53:13.897206 [debug] [MainThread]: Elementary: [dbt_run_results] Flattened 38 artifacts.
[0m23:53:13.905661 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:13.908201 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
describe table NBA.dbt_parker_elementary.dbt_run_results
[0m23:53:14.041303 [debug] [MainThread]: SQL status: SUCCESS 22 in 0.131 seconds
[0m23:53:14.047506 [debug] [MainThread]: Elementary: Inserting 38 rows to table NBA.dbt_parker_elementary.dbt_run_results
[0m23:53:14.370204 [debug] [MainThread]: Elementary: [1/1] Running insert query.
[0m23:53:14.393532 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:14.399032 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
insert into NBA.dbt_parker_elementary.dbt_run_results
         (MODEL_EXECUTION_ID,UNIQUE_ID,INVOCATION_ID,GENERATED_AT,CREATED_AT,NAME,MESSAGE,STATUS,RESOURCE_TYPE,EXECUTION_TIME,EXECUTE_STARTED_AT,EXECUTE_COMPLETED_AT,COMPILE_STARTED_AT,COMPILE_COMPLETED_AT,ROWS_AFFECTED,FULL_REFRESH,COMPILED_CODE,FAILURES,QUERY_ID,THREAD_ID,MATERIALIZATION,ADAPTER_RESPONSE) values
    ('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.data_monitoring_metrics','model.elementary.data_monitoring_metrics','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'data_monitoring_metrics','SUCCESS 1','success','model',2.0881173610687256,'2024-09-20T23:52:56.449800Z','2024-09-20T23:52:58.019454Z','2024-09-20T23:52:56.194911Z','2024-09-20T23:52:56.411589Z',1,False,'\n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as full_table_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metric_name\n\n,\n                \n        cast(123456789.99 as float) as metric_value\n\n,\n                \n        cast(\'dummy_string\' as varchar) as source_value\n\n,\n                cast(\'2091-02-17\' as timestamp) as bucket_start\n\n,\n                cast(\'2091-02-17\' as timestamp) as bucket_end\n\n,\n                \n        cast(123456789 as integer) as bucket_duration_hours\n\n,\n                cast(\'2091-02-17\' as timestamp) as updated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as dimension\n\n,\n                \n        cast(\'dummy_string\' as varchar) as dimension_value\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metric_properties\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n',NULL,'01b72ad8-0002-f51f-0001-03e3000279be','Thread-8','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f51f-0001-03e3000279be"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.demo_project.nba_teams','model.demo_project.nba_teams','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'nba_teams','SUCCESS 1','success','model',2.011406660079956,'2024-09-20T23:52:56.532497Z','2024-09-20T23:52:58.124536Z','2024-09-20T23:52:56.431708Z','2024-09-20T23:52:56.513624Z',1,False,'WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.TEAMS\n),\n\nrenamed AS (\n    SELECT\n        id as team_id,\n        full_name,\n        abbreviation as team_name_abbreviation,\n        nickname,\n        city,\n        state,\n        year_founded\n    FROM\n        source\n)\n\nSELECT \n    *\nFROM\n    renamed',NULL,'01b72ad8-0002-f523-0001-03e300029276','Thread-7','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f523-0001-03e300029276"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.demo_project.nba_team_spend','model.demo_project.nba_team_spend','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'nba_team_spend','SUCCESS 1','success','model',2.2612555027008057,'2024-09-20T23:52:56.174999Z','2024-09-20T23:52:58.138957Z','2024-09-20T23:52:56.094841Z','2024-09-20T23:52:56.134819Z',1,False,'WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.TEAM_SPEND\n),\n\nrenamed as (\n    SELECT \n        team_id,\n        team_city,\n        team_name,\n        full_name,\n        year as season,\n        total_spend as team_payroll,\n        active_payroll,\n        dead_payroll,\n        luxury_tax_payroll,\n        luxury_tax_space,\n        luxury_tax_bill\n    FROM \n        source\n)\n\nSELECT\n    *\nFROM\n    renamed',NULL,'01b72ad8-0003-043e-0001-03e300024d62','Thread-5','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0003-043e-0001-03e300024d62"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.demo_project.nba_team_stats','model.demo_project.nba_team_stats','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'nba_team_stats','SUCCESS 1','success','model',2.2335126399993896,'2024-09-20T23:52:56.416517Z','2024-09-20T23:52:58.151855Z','2024-09-20T23:52:56.151001Z','2024-09-20T23:52:56.386045Z',1,False,'WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.TEAM_STATS\n),\nrenamed AS (\n    SELECT \n        team_id,\n        team_city,\n        team_name,\n        year AS season,\n        gp AS games_played,\n        wins,\n        losses,\n        conf_rank AS conference_rank,\n        div_rank AS division_rank,\n        po_wins AS playoff_wins,\n        po_losses AS playoff_losses,\n        nba_finals_appearance,\n        fgm AS field_goals_made,\n        fga AS field_goals_attempted,\n        fg3m AS three_pointers_made,\n        fg3a AS three_pointers_attempted,\n        ftm AS free_throws_made,\n        fta AS free_throws_attempted,\n        oreb AS offensive_rebounds,\n        dreb AS defensive_rebounds,\n        reb AS total_rebounds,\n        ast AS assists,\n        pf AS personal_fouls,\n        stl AS steals,\n        tov AS turnovers,\n        blk AS blocks,\n        pts AS points\n    FROM\n        source\n)\n\nSELECT \n    *\nFROM\n    renamed',NULL,'01b72ad8-0003-043e-0001-03e300024d66','Thread-6','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0003-043e-0001-03e300024d66"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.demo_project.nba_player_info','model.demo_project.nba_player_info','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'nba_player_info','SUCCESS 1','success','model',2.186053514480591,'2024-09-20T23:52:56.399456Z','2024-09-20T23:52:58.159787Z','2024-09-20T23:52:56.164011Z','2024-09-20T23:52:56.338042Z',1,False,'WITH source AS (\n    SELECT \n        person_id AS player_id,\n        first_name,\n        last_name,\n        team_name,\n        position,\n        height,\n        weight\n    FROM \n        NBA.PUBLIC.COMMON_PLAYER_INFO\n)\n\nSELECT \n    *\nFROM\n    source',NULL,'01b72ad8-0002-f525-0001-03e30002b276','Thread-3','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f525-0001-03e30002b276"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.demo_project.nba_player_salaries','model.demo_project.nba_player_salaries','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'nba_player_salaries','SUCCESS 1','success','model',2.2521562576293945,'2024-09-20T23:52:56.406485Z','2024-09-20T23:52:58.190097Z','2024-09-20T23:52:56.136498Z','2024-09-20T23:52:56.345764Z',1,False,'WITH source AS (\n    SELECT \n        player_id,\n        player_name,\n        salary,\n        season\n    FROM \n        NBA.PUBLIC.PLAYER_SALARIES\n)\n\nSELECT \n    *\nFROM\n    source',NULL,'01b72ad8-0002-f51f-0001-03e3000279c2','Thread-4','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f51f-0001-03e3000279c2"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.demo_project.nba_games','model.demo_project.nba_games','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'nba_games','SUCCESS 1','success','model',2.7957468032836914,'2024-09-20T23:52:56.423507Z','2024-09-20T23:52:58.706179Z','2024-09-20T23:52:56.187878Z','2024-09-20T23:52:56.388672Z',1,False,'WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.GAMES\n),\n\n\nrenamed AS (\n    SELECT \n        season_id,\n        team_id,\n        team_abbreviation,\n        team_name,\n        game_id,\n        game_date,\n        matchup,\n        wl,\n        min AS game_duration_mins,\n        pts AS points,\n        fgm AS field_goals_made,\n        fga AS field_goals_attempted,\n        fg_pct AS field_goal_pct,\n        fg3m AS three_point_made,\n        fg3a AS three_point_attempted,\n        fg3_pct AS three_point_pct,\n        ftm AS free_throws_made,\n        fta AS free_throws_attempted,\n        ft_pct AS free_throw_pct,\n        oreb AS offensive_rebounds,\n        dreb AS defensive_rebounds,\n        reb AS total_rebounds,\n        ast AS assists,\n        stl AS steals,\n        blk AS blocks,\n        tov AS turnovers,\n        pf AS personal_fouls,\n        plus_minus,\n        season,\n        game_type\n    FROM \n        source\n)\n\nSELECT \n    *\nFROM\n    renamed',NULL,'01b72ad8-0002-f530-0001-03e30002a28a','Thread-1','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f530-0001-03e30002a28a"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_run_results','model.elementary.dbt_run_results','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_run_results','SUCCESS 1','success','model',1.8966748714447021,'2024-09-20T23:52:58.539439Z','2024-09-20T23:53:00.114063Z','2024-09-20T23:52:58.411523Z','2024-09-20T23:52:58.519506Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as model_execution_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as invocation_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as message\n\n,\n                \n        cast(\'dummy_string\' as varchar) as status\n\n,\n                \n        cast(\'dummy_string\' as varchar) as resource_type\n\n,\n                \n        cast(123456789.99 as float) as execution_time\n\n,\n                \n        cast(\'dummy_string\' as varchar) as execute_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as execute_completed_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as compile_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast(\'dummy_string\' as varchar) as query_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as thread_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as materialization\n\n,\n                \n        cast(\'dummy_string\' as varchar) as adapter_response\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad8-0002-f521-0001-03e300025cda','Thread-4','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f521-0001-03e300025cda"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_invocations','model.elementary.dbt_invocations','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_invocations','SUCCESS 1','success','model',1.9759879112243652,'2024-09-20T23:52:58.686806Z','2024-09-20T23:53:00.159531Z','2024-09-20T23:52:58.481330Z','2024-09-20T23:52:58.560629Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as invocation_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as job_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as job_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as job_run_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as run_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as run_completed_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as command\n\n,\n                \n        cast(\'dummy_string\' as varchar) as dbt_version\n\n,\n                \n        cast(\'dummy_string\' as varchar) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as invocation_vars\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as vars\n\n,\n                \n        cast(\'dummy_string\' as varchar) as target_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as target_database\n\n,\n                \n        cast(\'dummy_string\' as varchar) as target_schema\n\n,\n                \n        cast(\'dummy_string\' as varchar) as target_profile_name\n\n,\n                \n        cast(123456789 as integer) as threads\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as selected\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as yaml_selector\n\n,\n                \n        cast(\'dummy_string\' as varchar) as project_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as project_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as env\n\n,\n                \n        cast(\'dummy_string\' as varchar) as env_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as cause_category\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as cause\n\n,\n                \n        cast(\'dummy_string\' as varchar) as pull_request_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as git_sha\n\n,\n                \n        cast(\'dummy_string\' as varchar) as orchestrator\n\n,\n                \n        cast(\'dummy_string\' as varchar) as dbt_user\n\n,\n                \n        cast(\'dummy_string\' as varchar) as job_url\n\n,\n                \n        cast(\'dummy_string\' as varchar) as job_run_url\n\n,\n                \n        cast(\'dummy_string\' as varchar) as account_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad8-0002-f525-0001-03e30002b27a','Thread-5','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f525-0001-03e30002b27a"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_metrics','model.elementary.dbt_metrics','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_metrics','SUCCESS 1','success','model',2.3131308555603027,'2024-09-20T23:52:58.555520Z','2024-09-20T23:53:00.486077Z','2024-09-20T23:52:58.449779Z','2024-09-20T23:52:58.553069Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as label\n\n,\n                \n        cast(\'dummy_string\' as varchar) as model\n\n,\n                \n        cast(\'dummy_string\' as varchar) as type\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as sql\n\n,\n                \n        cast(\'dummy_string\' as varchar) as timestamp\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as filters\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as time_grains\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as dimensions\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad8-0002-f613-0001-03e30002d0d6','Thread-6','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f613-0001-03e30002d0d6"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_exposures','model.elementary.dbt_exposures','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_exposures','SUCCESS 1','success','model',2.1782093048095703,'2024-09-20T23:52:58.733642Z','2024-09-20T23:53:00.501237Z','2024-09-20T23:52:58.668139Z','2024-09-20T23:52:58.717133Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as maturity\n\n,\n                \n        cast(\'dummy_string\' as varchar) as type\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner_email\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as url\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_columns\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n,\n                \n        cast(\'dummy_string\' as varchar) as label\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad8-0003-043e-0001-03e300024d6a','Thread-7','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0003-043e-0001-03e300024d6a"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_seeds','model.elementary.dbt_seeds','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_seeds','SUCCESS 1','success','model',1.9892847537994385,'2024-09-20T23:52:59.016575Z','2024-09-20T23:53:00.557969Z','2024-09-20T23:52:58.937049Z','2024-09-20T23:52:58.998883Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as alias\n\n,\n                \n        cast(\'dummy_string\' as varchar) as checksum\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad8-0002-f525-0001-03e30002b27e','Thread-1','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f525-0001-03e30002b27e"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_source_freshness_results','model.elementary.dbt_source_freshness_results','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_source_freshness_results','SUCCESS 1','success','model',1.8166170120239258,'2024-09-20T23:53:00.532329Z','2024-09-20T23:53:02.005594Z','2024-09-20T23:53:00.462412Z','2024-09-20T23:53:00.515863Z',1,False,'\n\n\n    select * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as source_freshness_execution_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as max_loaded_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as snapshotted_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n,\n                \n        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast(\'dummy_string\' as varchar) as status\n\n,\n                \n        cast(\'dummy_string\' as varchar) as error\n\n,\n                \n        cast(\'dummy_string\' as varchar) as compile_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as compile_completed_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as execute_started_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as execute_completed_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as invocation_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as warn_after\n\n,\n                \n        cast(\'dummy_string\' as varchar) as error_after\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n',NULL,'01b72ad9-0002-f613-0001-03e30002d0de','Thread-5','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f613-0001-03e30002d0de"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.elementary_test_results','model.elementary.elementary_test_results','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'elementary_test_results','SUCCESS 1','success','model',1.8966219425201416,'2024-09-20T23:53:01.002096Z','2024-09-20T23:53:02.523036Z','2024-09-20T23:53:00.957817Z','2024-09-20T23:53:00.993853Z',1,False,'\n\n\n    select * from (\n            select\n            \n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as data_issue_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_execution_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_unique_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as model_unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as invocation_id\n\n,\n                cast(\'2091-02-17\' as timestamp) as detected_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as table_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_type\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_sub_type\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_results_description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owners\n\n,\n                \n        cast(\'dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_results_query\n\n,\n                \n        cast(\'dummy_string\' as varchar) as other\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_params\n\n,\n                \n        cast(\'dummy_string\' as varchar) as severity\n\n,\n                \n        cast(\'dummy_string\' as varchar) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_short_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_alias\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n',NULL,'01b72ad9-0003-043e-0001-03e300024d72','Thread-1','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0003-043e-0001-03e300024d72"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_snapshots','model.elementary.dbt_snapshots','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_snapshots','SUCCESS 1','success','model',2.999882459640503,'2024-09-20T23:53:00.375478Z','2024-09-20T23:53:02.912718Z','2024-09-20T23:53:00.322127Z','2024-09-20T23:53:00.342072Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as alias\n\n,\n                \n        cast(\'dummy_string\' as varchar) as checksum\n\n,\n                \n        cast(\'dummy_string\' as varchar) as materialization\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as patch_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad9-0003-043e-0001-03e300024d6e','Thread-4','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0003-043e-0001-03e300024d6e"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.demo_project.nba_player_game_logs','model.demo_project.nba_player_game_logs','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'nba_player_game_logs','SUCCESS 1','success','model',7.240642786026001,'2024-09-20T23:52:56.391738Z','2024-09-20T23:53:02.821853Z','2024-09-20T23:52:56.109617Z','2024-09-20T23:52:56.332052Z',1,False,'WITH source AS (\n    SELECT \n        *,\n        \n    DATEADD(\n        \'second\', \n        UNIFORM(0, 86400, RANDOM()), \n        CURRENT_DATE\n    )\n AS timestamp_column -- use the macro here to generate random timestamps\n    FROM \n        NBA.PUBLIC.PLAYER_GAME_LOGS\n),\n\nrenamed AS (\n    SELECT\n        player_id,\n        player_name,\n        nickname,\n        team_id,\n        team_abbreviation,\n        team_name,\n        game_id,\n        game_date,\n        matchup,\n        wl as win_loss,\n        min AS mins_played,\n        fgm AS field_goals_made,\n        fga AS field_goals_attempted,\n        fg_pct AS field_goal_pct,\n        fg3m AS three_point_made,\n        fg3a AS three_point_attempted,\n        fg3_pct AS three_point_pct,\n        ftm AS free_throws_made,\n        fta AS free_throws_attempted,\n        ft_pct AS free_throw_pct,\n        oreb AS offensive_rebounds,\n        dreb AS defensive_rebounds,\n        reb AS total_rebounds,\n        ast AS assists,\n        tov AS turnovers,\n        stl AS steals,\n        blk AS blocks,\n        pf AS personal_fouls,\n        pts AS points,\n        plus_minus AS plus_minus,\n        season,\n        game_type,\n        timestamp_column -- keep the generated timestamp\n    FROM \n        source\n)\n\nSELECT\n    *\nFROM\n    renamed',NULL,'01b72ad8-0002-f51e-0001-03e30002c216','Thread-2','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f51e-0001-03e30002c216"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.monitors_runs','model.elementary.monitors_runs','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'monitors_runs','SUCCESS 1','success','model',1.3532581329345703,'2024-09-20T23:53:03.478868Z','2024-09-20T23:53:04.537139Z','2024-09-20T23:53:03.415126Z','2024-09-20T23:53:03.472774Z',1,False,'\n\nwith data_monitoring_metrics as (\n\n    select * from NBA.dbt_parker_elementary.data_monitoring_metrics\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end',NULL,'01b72ad9-0002-f530-0001-03e30002a2a6','Thread-2','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f530-0001-03e30002a2a6"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.metadata','model.elementary.metadata','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'metadata','SUCCESS 1','success','model',2.225025177001953,'2024-09-20T23:53:03.189148Z','2024-09-20T23:53:04.649614Z','2024-09-20T23:53:02.850187Z','2024-09-20T23:53:03.122182Z',1,False,'\n\nSELECT\n    \'0.15.0\' as dbt_pkg_version',NULL,'01b72ad9-0002-f5f7-0001-03e30002885e','Thread-5','table','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f5f7-0001-03e30002885e"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.schema_columns_snapshot','model.elementary.schema_columns_snapshot','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'schema_columns_snapshot','SUCCESS 1','success','model',1.7591626644134521,'2024-09-20T23:53:03.206481Z','2024-09-20T23:53:04.686835Z','2024-09-20T23:53:03.149586Z','2024-09-20T23:53:03.179009Z',1,False,'\n\n\n    select * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as column_state_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as full_column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as full_table_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast(\'2091-02-17\' as timestamp) as detected_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n',NULL,'01b72ad9-0003-043e-0001-03e300024d82','Thread-1','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0003-043e-0001-03e300024d82"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.metrics_anomaly_score','model.elementary.metrics_anomaly_score','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'metrics_anomaly_score','SUCCESS 1','success','model',1.5435388088226318,'2024-09-20T23:53:03.493648Z','2024-09-20T23:53:04.726952Z','2024-09-20T23:53:03.388524Z','2024-09-20T23:53:03.485113Z',1,False,'\n\nwith data_monitoring_metrics as (\n\n    select * from NBA.dbt_parker_elementary.data_monitoring_metrics\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n    dateadd(day, cast(-7 as integer), cast(date_trunc(\'day\', \n  current_timestamp::timestamp\n) as timestamp))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final',NULL,'01b72ad9-0002-f525-0001-03e30002b28a','Thread-4','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f525-0001-03e30002b28a"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_columns','model.elementary.dbt_columns','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_columns','SUCCESS 1','success','model',7.304834365844727,'2024-09-20T23:52:58.243909Z','2024-09-20T23:53:05.309351Z','2024-09-20T23:52:58.213653Z','2024-09-20T23:52:58.241320Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as parent_unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as data_type\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as table_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as resource_type\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad8-0002-f5f7-0001-03e300028852','Thread-8','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f5f7-0001-03e300028852"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_models','model.elementary.dbt_models','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_models','SUCCESS 1','success','model',7.2901177406311035,'2024-09-20T23:52:58.654893Z','2024-09-20T23:53:05.516980Z','2024-09-20T23:52:58.467579Z','2024-09-20T23:52:58.549179Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as alias\n\n,\n                \n        cast(\'dummy_string\' as varchar) as checksum\n\n,\n                \n        cast(\'dummy_string\' as varchar) as materialization\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as patch_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad8-0002-f5f7-0001-03e300028856','Thread-3','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad8-0002-f5f7-0001-03e300028856"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.demo_project.intermediate_player_info','model.demo_project.intermediate_player_info','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'intermediate_player_info','SUCCESS 1','success','model',1.3030040264129639,'2024-09-20T23:53:04.829440Z','2024-09-20T23:53:05.905718Z','2024-09-20T23:53:04.788699Z','2024-09-20T23:53:04.826781Z',1,False,'with player_info as (\n    select *\n    from\n        NBA.dbt_parker_staging.nba_player_info\n),\n\nplayer_salaries as (\n    select\n        player_id,\n        salary,\n        season\n    from\n        NBA.dbt_parker_staging.nba_player_salaries\n),\n\njoined as (\n\n    select\n        pi.*,\n        ps.salary,\n        ps.season\n    from\n        player_info as pi\n    left join\n        player_salaries as ps\n        on pi.player_id = ps.player_id\n)\n\nselect * from joined',NULL,'01b72ad9-0002-f51f-0001-03e3000279ce','Thread-2','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f51f-0001-03e3000279ce"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.job_run_results','model.elementary.job_run_results','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'job_run_results','SUCCESS 1','success','model',1.3418807983398438,'2024-09-20T23:53:04.964739Z','2024-09-20T23:53:05.939397Z','2024-09-20T23:53:04.907240Z','2024-09-20T23:53:04.947880Z',1,False,'\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as timestamp))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as timestamp))\n as job_run_completed_at,\n    \n    datediff(\n        second,\n        \nmin(cast(run_started_at as timestamp))\n,\n        \nmax(cast(run_completed_at as timestamp))\n\n        )\n as job_run_execution_time\n  from NBA.dbt_parker_elementary.dbt_invocations\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs',NULL,'01b72ad9-0002-f5f7-0001-03e30002886e','Thread-5','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f5f7-0001-03e30002886e"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.alerts_dbt_tests','model.elementary.alerts_dbt_tests','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'alerts_dbt_tests','SUCCESS 1','success','model',1.5448331832885742,'2024-09-20T23:53:05.080553Z','2024-09-20T23:53:06.308955Z','2024-09-20T23:53:05.019709Z','2024-09-20T23:53:05.059907Z',1,False,'\n\nwith elementary_test_results as (\n    select * from NBA.dbt_parker_elementary.elementary_test_results\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != \'pass\'   and lower(status) != \'skipped\'  and test_type = \'dbt_test\'\n)\n\nselect * from alerts_dbt_tests',NULL,'01b72ad9-0002-f523-0001-03e300029286','Thread-4','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f523-0001-03e300029286"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.alerts_anomaly_detection','model.elementary.alerts_anomaly_detection','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'alerts_anomaly_detection','SUCCESS 1','success','model',1.5817275047302246,'2024-09-20T23:53:05.071460Z','2024-09-20T23:53:06.303903Z','2024-09-20T23:53:05.004409Z','2024-09-20T23:53:05.051466Z',1,False,'\n\nwith elementary_test_results as (\n    select * from NBA.dbt_parker_elementary.elementary_test_results\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != \'pass\'and lower(status) != \'skipped\'and test_type = \'anomaly_detection\'\n)\n\nselect * from alerts_anomaly_detection',NULL,'01b72ad9-0002-f530-0001-03e30002a2ae','Thread-1','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f530-0001-03e30002a2ae"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_tests','model.elementary.dbt_tests','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_tests','SUCCESS 1','success','model',5.719275951385498,'2024-09-20T23:53:00.928546Z','2024-09-20T23:53:06.378875Z','2024-09-20T23:53:00.877725Z','2024-09-20T23:53:00.922811Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as short_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as alias\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_column_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as severity\n\n,\n                \n        cast(\'dummy_string\' as varchar) as warn_if\n\n,\n                \n        cast(\'dummy_string\' as varchar) as error_if\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as test_params\n\n,\n                \n        cast(\'dummy_string\' as varchar) as test_namespace\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as model_tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as model_owners\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_macros\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as depends_on_nodes\n\n,\n                \n        cast(\'dummy_string\' as varchar) as parent_model_unique_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as type\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n,\n                \n        cast(\'dummy_string\' as varchar) as quality_dimension\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad9-0002-f523-0001-03e300029282','Thread-7','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f523-0001-03e300029282"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.alerts_schema_changes','model.elementary.alerts_schema_changes','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'alerts_schema_changes','SUCCESS 1','success','model',1.4010658264160156,'2024-09-20T23:53:05.605075Z','2024-09-20T23:53:06.780364Z','2024-09-20T23:53:05.585025Z','2024-09-20T23:53:05.602599Z',1,False,'\n\n\nwith elementary_test_results as (\n    select * from NBA.dbt_parker_elementary.elementary_test_results\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != \'pass\'and lower(status) != \'skipped\'and test_type = \'schema_change\'\n)\n\nselect * from alerts_schema_changes',NULL,'01b72ad9-0003-0487-0001-03e30002681a','Thread-8','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0003-0487-0001-03e30002681a"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.test_result_rows','model.elementary.test_result_rows','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'test_result_rows','SUCCESS 1','success','model',1.2914698123931885,'2024-09-20T23:53:05.772839Z','2024-09-20T23:53:06.848890Z','2024-09-20T23:53:05.743197Z','2024-09-20T23:53:05.770227Z',1,False,'-- indexes are not supported in all warehouses, relevant to postgres only\n\n\n-- depends_on: NBA.dbt_parker_elementary.elementary_test_results\nselect * from (\n            select\n            \n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as elementary_test_results_id\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as result_row\n\n,\n                cast(\'2091-02-17\' as timestamp) as detected_at\n\n,\n                cast(\'2091-02-17\' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad9-0002-f523-0001-03e30002928e','Thread-3','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f523-0001-03e30002928e"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_sources','model.elementary.dbt_sources','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_sources','SUCCESS 1','success','model',6.369048118591309,'2024-09-20T23:53:00.898899Z','2024-09-20T23:53:06.880703Z','2024-09-20T23:53:00.726887Z','2024-09-20T23:53:00.876373Z',1,False,'\n\nselect * from (\n            select\n            \n                \n        cast(\'dummy_string\' as varchar) as unique_id\n\n,\n                \n        cast(\'dummy_string\' as varchar) as database_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as schema_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as source_name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as name\n\n,\n                \n        cast(\'dummy_string\' as varchar) as identifier\n\n,\n                \n        cast(\'dummy_string\' as varchar) as loaded_at_field\n\n,\n                \n        cast(\'dummy_string\' as varchar) as freshness_warn_after\n\n,\n                \n        cast(\'dummy_string\' as varchar) as freshness_error_after\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as freshness_filter\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as freshness_description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as relation_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as tags\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as meta\n\n,\n                \n        cast(\'dummy_string\' as varchar) as owner\n\n,\n                \n        cast(\'dummy_string\' as varchar) as package_name\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as original_path\n\n,\n                \n        cast(\'dummy_string\' as varchar) as path\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as source_description\n\n,\n                \n        cast(\'this_is_just_a_long_dummy_string\' as varchar) as description\n\n,\n                \n        cast(\'dummy_string\' as varchar) as generated_at\n\n,\n                \n        cast(\'dummy_string\' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0',NULL,'01b72ad9-0003-0487-0001-03e300026812','Thread-6','incremental','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0003-0487-0001-03e300026812"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.anomaly_threshold_sensitivity','model.elementary.anomaly_threshold_sensitivity','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'anomaly_threshold_sensitivity','SUCCESS 1','success','model',1.2683427333831787,'2024-09-20T23:53:06.392440Z','2024-09-20T23:53:07.391646Z','2024-09-20T23:53:06.340447Z','2024-09-20T23:53:06.389880Z',1,False,'\n\nwith metrics_anomaly_score as (\n\n    select * from NBA.dbt_parker_elementary.metrics_anomaly_score\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as "is_anomaly_1_5",\n        case when abs(anomaly_score) >= 2 then true else false end as "is_anomaly_2",\n        case when abs(anomaly_score) >= 2.5 then true else false end as "is_anomaly_2_5",\n        case when abs(anomaly_score) >= 3 then true else false end as "is_anomaly_3",\n        case when abs(anomaly_score) >= 3.5 then true else false end as "is_anomaly_3_5",\n        case when abs(anomaly_score) >= 4 then true else false end as "is_anomaly_4",\n        case when abs(anomaly_score) >= 4.5 then true else false end as "is_anomaly_4_5"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity',NULL,'01b72ad9-0002-f51e-0001-03e30002c236','Thread-5','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f51e-0001-03e30002c236"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.snapshot_run_results','model.elementary.snapshot_run_results','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'snapshot_run_results','SUCCESS 1','success','model',1.8246560096740723,'2024-09-20T23:53:06.290137Z','2024-09-20T23:53:07.718843Z','2024-09-20T23:53:06.105664Z','2024-09-20T23:53:06.283072Z',1,False,'\n\nwith dbt_run_results as (\n    select * from NBA.dbt_parker_elementary.dbt_run_results\n),\n\ndbt_snapshots as (\n    select * from NBA.dbt_parker_elementary.dbt_snapshots\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id',NULL,'01b72ad9-0003-043e-0001-03e300024d86','Thread-2','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0003-043e-0001-03e300024d86"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.model_run_results','model.elementary.model_run_results','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'model_run_results','SUCCESS 1','success','model',1.6199913024902344,'2024-09-20T23:53:06.607051Z','2024-09-20T23:53:07.979154Z','2024-09-20T23:53:06.559112Z','2024-09-20T23:53:06.604311Z',1,False,'\n\nwith dbt_run_results as (\n    select * from NBA.dbt_parker_elementary.dbt_run_results\n),\n\ndbt_models as (\n    select * from NBA.dbt_parker_elementary.dbt_models\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc(\'day\', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc(\'day\', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id',NULL,'01b72ad9-0002-f613-0001-03e30002d0f2','Thread-4','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f613-0001-03e30002d0f2"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.dbt_artifacts_hashes','model.elementary.dbt_artifacts_hashes','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'dbt_artifacts_hashes','SUCCESS 1','success','model',1.113978385925293,'2024-09-20T23:53:07.199646Z','2024-09-20T23:53:08.054302Z','2024-09-20T23:53:07.138531Z','2024-09-20T23:53:07.192948Z',1,False,'\n\n\n\n\nselect\n  \'dbt_models\' as artifacts_model,\n   metadata_hash\nfrom NBA.dbt_parker_elementary.dbt_models\n union all \n\nselect\n  \'dbt_tests\' as artifacts_model,\n   metadata_hash\nfrom NBA.dbt_parker_elementary.dbt_tests\n union all \n\nselect\n  \'dbt_sources\' as artifacts_model,\n   metadata_hash\nfrom NBA.dbt_parker_elementary.dbt_sources\n union all \n\nselect\n  \'dbt_snapshots\' as artifacts_model,\n   metadata_hash\nfrom NBA.dbt_parker_elementary.dbt_snapshots\n union all \n\nselect\n  \'dbt_metrics\' as artifacts_model,\n   metadata_hash\nfrom NBA.dbt_parker_elementary.dbt_metrics\n union all \n\nselect\n  \'dbt_exposures\' as artifacts_model,\n   metadata_hash\nfrom NBA.dbt_parker_elementary.dbt_exposures\n union all \n\nselect\n  \'dbt_seeds\' as artifacts_model,\n   metadata_hash\nfrom NBA.dbt_parker_elementary.dbt_seeds\n union all \n\nselect\n  \'dbt_columns\' as artifacts_model,\n   metadata_hash\nfrom NBA.dbt_parker_elementary.dbt_columns\n\n\norder by metadata_hash',NULL,'01b72ad9-0002-f525-0001-03e30002b29a','Thread-7','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f525-0001-03e30002b29a"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.alerts_dbt_source_freshness','model.elementary.alerts_dbt_source_freshness','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'alerts_dbt_source_freshness','SUCCESS 1','success','model',1.4927637577056885,'2024-09-20T23:53:07.183377Z','2024-09-20T23:53:08.421242Z','2024-09-20T23:53:07.112314Z','2024-09-20T23:53:07.175974Z',1,False,'\n\nwith results as (\n  select * from NBA.dbt_parker_elementary.dbt_source_freshness_results\n),\n\nsources as (\n  select * from NBA.dbt_parker_elementary.dbt_sources\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  cast(results.generated_at as timestamp) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn\'t respect `on_schema_change = \'append_new_columns\'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != \'pass\'',NULL,'01b72ad9-0002-f51e-0001-03e30002c23a','Thread-1','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f51e-0001-03e30002c23a"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.alerts_dbt_models','model.elementary.alerts_dbt_models','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'alerts_dbt_models','SUCCESS 1','success','model',1.5265984535217285,'2024-09-20T23:53:08.231571Z','2024-09-20T23:53:09.504320Z','2024-09-20T23:53:08.194885Z','2024-09-20T23:53:08.228862Z',1,False,'\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from NBA.dbt_parker_elementary.model_run_results\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from NBA.dbt_parker_elementary.snapshot_run_results\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       cast(generated_at as timestamp) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != \'success\'and lower(status) != \'skipped\'',NULL,'01b72ad9-0002-f521-0001-03e300025cfa','Thread-6','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f521-0001-03e300025cfa"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.information_schema_columns','model.elementary.information_schema_columns','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'information_schema_columns','SUCCESS 1','success','model',3.5926640033721924,'2024-09-20T23:53:09.520991Z','2024-09-20T23:53:10.522235Z','2024-09-20T23:53:07.148583Z','2024-09-20T23:53:09.518208Z',1,False,'\n\n    \n  \n    \n  \n\n  with dbt_models_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from NBA.dbt_parker_elementary.dbt_models\n  ),\n\n  dbt_snapshots_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from NBA.dbt_parker_elementary.dbt_snapshots\n  ),\n\n  dbt_sources_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from NBA.dbt_parker_elementary.dbt_sources\n  ),\n\n  dbt_seeds_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from NBA.dbt_parker_elementary.dbt_seeds\n  ),\n\n  tables_information as (\n      select * from dbt_models_data\n      union all\n      select * from dbt_sources_data\n      union all\n      select * from dbt_snapshots_data\n      union all\n      select * from dbt_seeds_data\n  ),\n\n  columns_information as (\n      \n    \n    \n    \n        (\n    \n    \n    select\n        upper(table_catalog || \'.\' || table_schema || \'.\' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from NBA.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper(\'PUBLIC\')\n    \n)\n        \n            union all\n        \n    \n        (\n    \n    \n    select\n        upper(table_catalog || \'.\' || table_schema || \'.\' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from NBA.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper(\'dbt_parker\')\n    \n)\n        \n            union all\n        \n    \n        (\n    \n    \n    select\n        upper(table_catalog || \'.\' || table_schema || \'.\' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from NBA.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper(\'dbt_parker_staging\')\n    \n)\n        \n    \n\n\n\n  ),\n\n  information_schema_columns as (\n      select col_info.*\n      from tables_information tbl_info\n      join columns_information col_info\n          on (lower(tbl_info.database_name) = lower(col_info.database_name) and\n              lower(tbl_info.schema_name) = lower(col_info.schema_name) and\n              lower(tbl_info.table_name) = lower(col_info.table_name)\n          )\n  )\n\n  select *\n  from information_schema_columns\n\n',NULL,'01b72ad9-0002-f523-0001-03e300029296','Thread-8','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0002-f523-0001-03e300029296"}'),('1e51ddeb-2f81-460f-872c-7f45e659bcce.model.elementary.enriched_columns','model.elementary.enriched_columns','1e51ddeb-2f81-460f-872c-7f45e659bcce','2024-09-20 23:53:13',
  current_timestamp::timestamp
,'enriched_columns','SUCCESS 1','success','model',1.950793743133545,'2024-09-20T23:53:10.769351Z','2024-09-20T23:53:12.490099Z','2024-09-20T23:53:10.749834Z','2024-09-20T23:53:10.766739Z',1,False,'\n\n\nwith information_schema_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(column_name) as name,\n        data_type\n    from NBA.dbt_parker_elementary.information_schema_columns\n),\n\ndbt_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(name) as name,\n        description\n    from NBA.dbt_parker_elementary.dbt_columns\n)\n\nselect\n    database_name,\n    schema_name,\n    table_name,\n    name,\n    data_type,\n    description\nfrom information_schema_columns\nleft join dbt_columns using (database_name, schema_name, table_name, name)',NULL,'01b72ad9-0003-043e-0001-03e300024d8a','Thread-5','view','{"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b72ad9-0003-043e-0001-03e300024d8a"}')
[0m23:53:14.878926 [debug] [MainThread]: SQL status: SUCCESS 38 in 0.474 seconds
[0m23:53:14.886343 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[dbt_run_results]:
[0m23:53:14.889234 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results].artifacts_flatten: 0:00:00.044584 (1 runs)
[0m23:53:14.891885 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results].insert_rows.get_columns_in_relation: 0:00:00.146659 (1 runs)
[0m23:53:14.894408 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results].insert_rows.get_insert_rows_queries.base_query_calc: 0:00:00.000584 (1 runs)
[0m23:53:14.897026 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results].insert_rows.get_insert_rows_queries.render_row_to_sql: 0:00:00.306983 (38 runs)
[0m23:53:14.899800 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results].insert_rows.get_insert_rows_queries: 0:00:00.318923 (1 runs)
[0m23:53:14.902402 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results].insert_rows.run_insert_rows_query: 0:00:00.510738 (1 runs)
[0m23:53:14.904976 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results].insert_rows.commit: 0:00:00.000400 (1 runs)
[0m23:53:14.907601 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results].insert_rows: 0:00:00.984668 (1 runs)
[0m23:53:14.910308 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[dbt_run_results]: 0:00:01.036593 (1 runs)
[0m23:53:14.912957 [debug] [MainThread]: Elementary: Uploaded run results successfully.
[0m23:53:14.930930 [debug] [MainThread]: Elementary: Uploading dbt invocation.
[0m23:53:15.096851 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:15.099478 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
describe table NBA.dbt_parker_elementary.dbt_invocations
[0m23:53:15.229508 [debug] [MainThread]: SQL status: SUCCESS 35 in 0.128 seconds
[0m23:53:15.236411 [debug] [MainThread]: Elementary: Inserting 1 rows to table NBA.dbt_parker_elementary.dbt_invocations
[0m23:53:15.253886 [debug] [MainThread]: Elementary: [1/1] Running insert query.
[0m23:53:15.257986 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:15.260240 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
insert into NBA.dbt_parker_elementary.dbt_invocations
         (INVOCATION_ID,JOB_ID,JOB_NAME,JOB_RUN_ID,RUN_STARTED_AT,RUN_COMPLETED_AT,GENERATED_AT,CREATED_AT,COMMAND,DBT_VERSION,ELEMENTARY_VERSION,FULL_REFRESH,INVOCATION_VARS,VARS,TARGET_NAME,TARGET_DATABASE,TARGET_SCHEMA,TARGET_PROFILE_NAME,THREADS,SELECTED,YAML_SELECTOR,PROJECT_ID,PROJECT_NAME,ENV,ENV_ID,CAUSE_CATEGORY,CAUSE,PULL_REQUEST_ID,GIT_SHA,ORCHESTRATOR,DBT_USER,JOB_URL,JOB_RUN_URL,ACCOUNT_ID,TARGET_ADAPTER_SPECIFIC_FIELDS) values
    ('1e51ddeb-2f81-460f-872c-7f45e659bcce',NULL,NULL,NULL,'2024-09-20 23:52:50','2024-09-20 23:53:14','2024-09-20 23:53:14',
  current_timestamp::timestamp
,'run','1.8.5','0.15.0',False,'{}','{}','dev','NBA','dbt_parker','demo_project',8,'[]',NULL,NULL,'demo_project',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'{"warehouse": "COMPUTE_WH", "user": "JPOOSKEY", "role": "ACCOUNTADMIN"}')
[0m23:53:15.738067 [debug] [MainThread]: SQL status: SUCCESS 1 in 0.476 seconds
[0m23:53:15.743973 [debug] [MainThread]: Elementary: Uploaded dbt invocation successfully.
[0m23:53:15.753050 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-end-0"
[0m23:53:15.758829 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-end.0 ..................................... [RUN]
[0m23:53:15.761349 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-end.0 ........................................ [[32mOK[0m in 0.00s]
[0m23:53:15.763723 [info ] [MainThread]: 
[0m23:53:15.766203 [debug] [MainThread]: On master: Close
[0m23:53:15.962307 [debug] [MainThread]: Connection 'master' was properly closed.
[0m23:53:15.964914 [debug] [MainThread]: Connection 'model.elementary.alerts_dbt_source_freshness' was properly closed.
[0m23:53:15.967231 [debug] [MainThread]: Connection 'model.elementary.test_result_rows' was properly closed.
[0m23:53:15.969548 [debug] [MainThread]: Connection 'model.elementary.snapshot_run_results' was properly closed.
[0m23:53:15.971868 [debug] [MainThread]: Connection 'model.elementary.enriched_columns' was properly closed.
[0m23:53:15.974102 [debug] [MainThread]: Connection 'model.elementary.information_schema_columns' was properly closed.
[0m23:53:15.976680 [debug] [MainThread]: Connection 'model.elementary.alerts_dbt_models' was properly closed.
[0m23:53:15.978922 [debug] [MainThread]: Connection 'model.elementary.model_run_results' was properly closed.
[0m23:53:15.981287 [debug] [MainThread]: Connection 'model.elementary.dbt_artifacts_hashes' was properly closed.
[0m23:53:15.984093 [info ] [MainThread]: 
[0m23:53:15.986555 [info ] [MainThread]: Finished running 15 incremental models, 8 table models, 15 view models, 2 project hooks in 0 hours 0 minutes and 22.87 seconds (22.87s).
[0m23:53:15.994107 [debug] [MainThread]: Command end result
[0m23:53:16.117497 [info ] [MainThread]: 
[0m23:53:16.120024 [info ] [MainThread]: [32mCompleted successfully[0m
[0m23:53:16.122342 [info ] [MainThread]: 
[0m23:53:16.124587 [info ] [MainThread]: Done. PASS=38 WARN=0 ERROR=0 SKIP=0 TOTAL=38
[0m23:53:16.127513 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 25.449053, "process_user_time": 10.061004, "process_kernel_time": 0.671401, "process_mem_max_rss": "240940", "process_out_blocks": "17536", "process_in_blocks": "0"}
[0m23:53:16.129959 [debug] [MainThread]: Command `dbt run` succeeded at 23:53:16.129835 after 25.45 seconds
[0m23:53:16.132219 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9dc04f40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff804234f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff80423f10>]}
[0m23:53:16.134501 [debug] [MainThread]: Flushing usage events
[0m23:53:23.692748 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffab2d2e50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffa99fc2e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffa99fc280>]}


============================== 23:53:23.696987 | be03fe54-adc1-4dd3-bf00-f4a62660d4cb ==============================
[0m23:53:23.696987 [info ] [MainThread]: Running with dbt=1.8.5
[0m23:53:23.699800 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/workspaces/fxtn7c3oiwkalwzz', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/workspaces/fxtn7c3oiwkalwzz/repository/logs', 'version_check': 'True', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt test --select nba_player_game_logs', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m23:53:24.727213 [info ] [MainThread]: Initializing dbt-loom=0.5.6
[0m23:53:24.730069 [info ] [MainThread]: dbt-loom: Patching ref protection methods to support dbt-loom dependencies.
[0m23:53:24.732680 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'be03fe54-adc1-4dd3-bf00-f4a62660d4cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff91c443a0>]}
[0m23:53:24.799508 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'be03fe54-adc1-4dd3-bf00-f4a62660d4cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffa9c17310>]}
[0m23:53:24.802802 [info ] [MainThread]: Registered adapter: snowflake=1.8.3
[0m23:53:24.871587 [debug] [MainThread]: checksum: 643640a45b16e0d012867be4ac17daaa0c3ce97300faec3ce9a6de300b5e1c09, vars: {}, profile: , target: , version: 1.8.5
[0m23:53:25.956425 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m23:53:25.959117 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m23:53:25.961734 [info ] [MainThread]: dbt-loom: Injecting nodes
[0m23:53:25.964233 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'plugin_get_nodes', 'label': 'be03fe54-adc1-4dd3-bf00-f4a62660d4cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff91660550>]}
[0m23:53:25.975046 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.demo_project.intermediate
[0m23:53:26.051391 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'be03fe54-adc1-4dd3-bf00-f4a62660d4cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff91b69fa0>]}
[0m23:53:26.390643 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'be03fe54-adc1-4dd3-bf00-f4a62660d4cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff91608af0>]}
[0m23:53:26.393437 [info ] [MainThread]: Found 38 models, 2 operations, 1 test, 7 sources, 1539 macros
[0m23:53:26.395923 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'be03fe54-adc1-4dd3-bf00-f4a62660d4cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff918b2940>]}
[0m23:53:26.399728 [info ] [MainThread]: 
[0m23:53:26.402234 [debug] [MainThread]: Acquiring new snowflake connection 'master'
[0m23:53:26.412172 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_NBA_dbt_parker_elementary'
[0m23:53:26.413054 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_NBA_dbt_parker'
[0m23:53:26.414012 [debug] [ThreadPool]: Acquiring new snowflake connection 'list_NBA_dbt_parker_staging'
[0m23:53:26.438745 [debug] [ThreadPool]: Using snowflake connection "list_NBA_dbt_parker_elementary"
[0m23:53:26.444533 [debug] [ThreadPool]: Using snowflake connection "list_NBA_dbt_parker"
[0m23:53:26.451534 [debug] [ThreadPool]: Using snowflake connection "list_NBA_dbt_parker_staging"
[0m23:53:26.453199 [debug] [ThreadPool]: On list_NBA_dbt_parker_elementary: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA_dbt_parker_elementary"} */
show objects in NBA.dbt_parker_elementary limit 10000
[0m23:53:26.455540 [debug] [ThreadPool]: On list_NBA_dbt_parker: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA_dbt_parker"} */
show objects in NBA.dbt_parker limit 10000
[0m23:53:26.457782 [debug] [ThreadPool]: On list_NBA_dbt_parker_staging: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "list_NBA_dbt_parker_staging"} */
show objects in NBA.dbt_parker_staging limit 10000
[0m23:53:26.459968 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:53:26.462206 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:53:26.464437 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:53:27.127565 [debug] [ThreadPool]: SQL status: SUCCESS 7 in 0.663 seconds
[0m23:53:27.144930 [debug] [ThreadPool]: On list_NBA_dbt_parker_staging: Close
[0m23:53:27.202327 [debug] [ThreadPool]: SQL status: SUCCESS 1 in 0.740 seconds
[0m23:53:27.206777 [debug] [ThreadPool]: On list_NBA_dbt_parker: Close
[0m23:53:27.249652 [debug] [ThreadPool]: SQL status: SUCCESS 30 in 0.790 seconds
[0m23:53:27.255300 [debug] [ThreadPool]: On list_NBA_dbt_parker_elementary: Close
[0m23:53:27.453038 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'be03fe54-adc1-4dd3-bf00-f4a62660d4cb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff9163ae20>]}
[0m23:53:27.455586 [info ] [MainThread]: 
[0m23:53:27.457863 [info ] [MainThread]: Running 1 on-run-start hook
[0m23:53:27.533249 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:27.535892 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
select count(*)
        from NBA.INFORMATION_SCHEMA.schemata
        where upper(schema_name) = upper('dbt_parker_elementary__tests')
            and upper(catalog_name) = upper('NBA')
[0m23:53:27.538236 [debug] [MainThread]: Opening a new connection, currently in state init
[0m23:53:28.454753 [debug] [MainThread]: SQL status: SUCCESS 1 in 0.916 seconds
[0m23:53:28.461020 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-start-0"
[0m23:53:28.470586 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-start.0 ................................... [RUN]
[0m23:53:28.473389 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-start.0 ...................................... [[32mOK[0m in 0.00s]
[0m23:53:28.475778 [info ] [MainThread]: 
[0m23:53:28.478168 [debug] [MainThread]: On master: Close
[0m23:53:28.705352 [info ] [MainThread]: Concurrency: 8 threads (target='dev')
[0m23:53:28.708067 [info ] [MainThread]: 
[0m23:53:28.713233 [debug] [Thread-1  ]: Began running node test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2
[0m23:53:28.715749 [info ] [Thread-1  ]: 1 of 1 START test elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60  [RUN]
[0m23:53:28.718670 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly list_NBA_dbt_parker_staging, now test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2)
[0m23:53:28.721110 [debug] [Thread-1  ]: Began compiling node test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2
[0m23:53:28.997478 [debug] [Thread-1  ]: Using snowflake connection "test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2"
[0m23:53:29.000179 [debug] [Thread-1  ]: On test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2"} */
with bucket_times as (
            select
            date_trunc('day', cast('2024-07-21 00:00:00' as timestamp)) as days_back_start
           , cast('2024-09-19 23:53:23.683262+00:00' as timestamp) as detection_end
        ),
        full_buckets_calc as (
            select *,
                floor(datediff(
        day,
        days_back_start,
        detection_end
        ) / 1) * 1 as periods_until_max
            from bucket_times
        )
        select
             days_back_start as min_bucket_start,
             
    dateadd(day, cast(periods_until_max as integer), cast(days_back_start as timestamp))
 
        as max_bucket_end
        from full_buckets_calc
[0m23:53:29.002574 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m23:53:29.556630 [debug] [Thread-1  ]: SQL status: SUCCESS 1 in 0.554 seconds
[0m23:53:29.571603 [info ] [Thread-1  ]: Elementary: Started running data monitors on: NBA.DBT_PARKER_STAGING.NBA_PLAYER_GAME_LOGS
[0m23:53:29.689526 [debug] [Thread-1  ]: Using snowflake connection "test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2"
[0m23:53:29.692465 [debug] [Thread-1  ]: On test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "node_id": "test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2"} */
create or replace transient table NBA.dbt_parker_elementary."test_4f1339d7b2_elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60__metrics__tmp_20240920235329653004"
         as
        (

    
        
    with partially_time_filtered_monitored_table as (
        select
            cast(loaded_at_dttm as timestamp) as monitored_table_timestamp_column
        from NBA.dbt_parker_staging.nba_player_game_logs
        -- Freshness metric calculated differences between consecutive buckets, thus the first diff
        -- is always null. Therefore we let few old buckets inside the query and filter them later, just for
        -- the first relevant diff not to be null
        where cast(loaded_at_dttm as timestamp) >= 
    dateadd(day, cast(-7 as integer), cast(cast('2024-07-21T00:00:00' as timestamp) as timestamp))

        
    ),
    monitored_table as (
        select
            *
        from partially_time_filtered_monitored_table
        where monitored_table_timestamp_column >= cast('2024-07-21T00:00:00' as timestamp)
    ),
    buckets as (
        select edr_bucket_start, edr_bucket_end
        from (
    
        with timestamps as (
          select cast('2024-07-21T00:00:00' as timestamp) as edr_bucket_start
          union all
          select 
    dateadd(day, cast(1 as integer), cast(edr_bucket_start as timestamp))
 as next_bucket
          from timestamps
          where next_bucket < cast('2024-09-19T00:00:00' as timestamp)
        )
        select
          edr_bucket_start,
          
    dateadd(day, cast(1 as integer), cast(edr_bucket_start as timestamp))
 as edr_bucket_end
        from timestamps
        where 
    dateadd(day, cast(1 as integer), cast(edr_bucket_start as timestamp))
 <= cast('2024-09-19T00:00:00' as timestamp)
) results
        where edr_bucket_start >= cast('2024-07-21T00:00:00' as timestamp)
          and edr_bucket_end <= cast('2024-09-19T00:00:00' as timestamp)
    ),

    time_filtered_monitored_table as (
        select *,
               cast(
    dateadd(day, cast(cast(
      floor(datediff(
        day,
        '2024-07-21T00:00:00',
        cast(monitored_table_timestamp_column as timestamp)
        ) / 1) * 1
     as integer) as integer), cast('2024-07-21T00:00:00' as timestamp))
 as timestamp) as start_bucket_in_data
        from monitored_table
        where
            monitored_table_timestamp_column >= (select min(edr_bucket_start) from buckets)
            and monitored_table_timestamp_column < (select max(edr_bucket_end) from buckets)
            
            and monitored_table_timestamp_column >= (select min(monitored_table_timestamp_column) from monitored_table)
    ),

    metrics as (
        
            

    

    with
        freshness as (
            

    
    -- get ordered consecutive update timestamps in the source data
    with unique_timestamps as (
        select distinct monitored_table_timestamp_column as timestamp_val
        from partially_time_filtered_monitored_table
        order by 1
    ),

    -- compute freshness for every update as the time difference from the previous update
    consecutive_updates_freshness as (
        select
            timestamp_val as update_timestamp,
            
    datediff(
        second,
        lag(timestamp_val) over (order by timestamp_val),
        timestamp_val
        )
 as freshness
        from unique_timestamps
    ),
    time_filtered_consecutive_updates_freshness as (
        select
            *
        from consecutive_updates_freshness
        where update_timestamp >= (select min(edr_bucket_start) from buckets)
    ),
    -- divide the freshness metrics above to buckets
    bucketed_consecutive_updates_freshness as (
        select
            edr_bucket_start, edr_bucket_end, update_timestamp, freshness
        from buckets cross join time_filtered_consecutive_updates_freshness
        where update_timestamp >= edr_bucket_start AND update_timestamp < edr_bucket_end
    ),

    -- we also want to record the freshness at the end of each bucket as an additional point. By this we mean
    -- the time that passed since the last update in the bucket and the end of the bucket.
    bucket_end_freshness as (
        select
            edr_bucket_start,
            edr_bucket_end,
            max(timestamp_val) as update_timestamp,
            
    datediff(
        second,
        cast(max(timestamp_val) as timestamp),
        least(edr_bucket_end, 
    cast (
  convert_timezone('UTC', 
  current_timestamp::timestamp
)::timestamp
 as timestamp)
)
        )
 as freshness
        from buckets cross join unique_timestamps
        where timestamp_val < edr_bucket_end
        group by 1,2
    ),

    -- create a single table with all the freshness values
    bucket_all_freshness_metrics as (
        select * from bucketed_consecutive_updates_freshness
        union all
        select * from bucket_end_freshness
    ),

    -- get all the freshness values, ranked by size (we use partition by and not group by, because we also want to have
    -- the associated timestamp as source value)
    bucket_freshness_ranked as (
        select
            *,
            row_number () over (partition by edr_bucket_end order by freshness is null, freshness desc) as row_number
        from bucket_all_freshness_metrics
    )

    select
        edr_bucket_start,
        edr_bucket_end,
        cast('freshness' as varchar) as metric_name,
        cast(update_timestamp as varchar) as source_value,
        freshness as metric_value
    from bucket_freshness_ranked
    where row_number = 1


        )
    select * from freshness
    

    ),

    metrics_final as (
        select
            cast('NBA.DBT_PARKER_STAGING.NBA_PLAYER_GAME_LOGS' as varchar) as full_table_name,
            
    cast(null as varchar)
 as column_name,
            metric_name,
            cast(metric_value as float) as metric_value,
            source_value,
            edr_bucket_start as bucket_start,
            edr_bucket_end as bucket_end,
            
    datediff(
        hour,
        edr_bucket_start,
        edr_bucket_end
        )
 as bucket_duration_hours,
            
    cast(null as varchar)
 as dimension,
            
    cast(null as varchar)
 as dimension_value,
            cast('{"dimensions": null, "event_timestamp_column": null, "freshness_column": null, "time_bucket": {"count": 1, "period": "day"}, "timestamp_column": "loaded_at_dttm", "where_expression": null}' as varchar) as metric_properties
        from
            metrics
        where (metric_value is not null and cast(metric_value as integer) < 2147483647) or
            metric_value is null
    )




    select
       
  

  md5(cast(coalesce(cast(full_table_name as varchar), '') || '-' || coalesce(cast(column_name as varchar), '') || '-' || coalesce(cast(metric_name as varchar), '') || '-' || coalesce(cast(bucket_end as varchar), '') || '-' || coalesce(cast(metric_properties as varchar), '') as TEXT))
  as id,
        full_table_name,
        column_name,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        
  convert_timezone('UTC', 
  current_timestamp::timestamp
)::timestamp
 as updated_at,
        dimension,
        dimension_value,
        metric_properties
    from metrics_final


        );
[0m23:53:29.967369 [debug] [Thread-1  ]: Snowflake adapter: Snowflake query id: 01b72ad9-0002-f613-0001-03e30002d0fa
[0m23:53:29.970135 [debug] [Thread-1  ]: Snowflake adapter: Snowflake error: 000904 (42000): SQL compilation error: error line 9 at position 17
invalid identifier 'LOADED_AT_DTTM'
[0m23:53:29.975246 [debug] [Thread-1  ]: On test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2: Close
[0m23:53:30.197520 [debug] [Thread-1  ]: Database Error in test elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60 (models/sources/schema.yml)
  000904 (42000): SQL compilation error: error line 9 at position 17
  invalid identifier 'LOADED_AT_DTTM'
[0m23:53:30.200369 [error] [Thread-1  ]: 1 of 1 ERROR elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60  [[31mERROR[0m in 1.48s]
[0m23:53:30.202928 [debug] [Thread-1  ]: Finished running node test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2
[0m23:53:30.206338 [info ] [MainThread]: 
[0m23:53:30.208716 [info ] [MainThread]: Running 1 on-run-end hook
[0m23:53:30.243361 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:30.246022 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
select artifacts_model, metadata_hash from "NBA"."DBT_PARKER_ELEMENTARY"."DBT_ARTIFACTS_HASHES"
    order by metadata_hash
[0m23:53:30.248525 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m23:53:31.309975 [debug] [MainThread]: SQL status: SUCCESS 115 in 1.061 seconds
[0m23:53:31.317503 [debug] [MainThread]: Elementary: Uploading dbt artifacts.
[0m23:53:31.350463 [debug] [MainThread]: Elementary: [DBT_MODELS] Flattening the artifacts.
[0m23:53:31.427139 [debug] [MainThread]: Elementary: [DBT_MODELS] Flattened 38 artifacts.
[0m23:53:31.436656 [debug] [MainThread]: Elementary: [DBT_MODELS] Comparing the artifacts state.
[0m23:53:31.439783 [debug] [MainThread]: Elementary: [DBT_MODELS] Artifacts did not change.
[0m23:53:31.443219 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_MODELS]:
[0m23:53:31.445996 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_MODELS].artifacts_flatten: 0:00:00.073459 (1 runs)
[0m23:53:31.448741 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_MODELS]: 0:00:00.092737 (1 runs)
[0m23:53:31.456422 [debug] [MainThread]: Elementary: [DBT_TESTS] Flattening the artifacts.
[0m23:53:31.551897 [debug] [MainThread]: Elementary: [DBT_TESTS] Flattened 1 artifacts.
[0m23:53:31.555310 [debug] [MainThread]: Elementary: [DBT_TESTS] Comparing the artifacts state.
[0m23:53:31.558194 [debug] [MainThread]: Elementary: [DBT_TESTS] Artifacts did not change.
[0m23:53:31.561315 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_TESTS]:
[0m23:53:31.563975 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_TESTS].artifacts_flatten: 0:00:00.092295 (1 runs)
[0m23:53:31.566697 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_TESTS]: 0:00:00.104838 (1 runs)
[0m23:53:31.574018 [debug] [MainThread]: Elementary: [DBT_SOURCES] Flattening the artifacts.
[0m23:53:31.599633 [debug] [MainThread]: Elementary: [DBT_SOURCES] Flattened 7 artifacts.
[0m23:53:31.603047 [debug] [MainThread]: Elementary: [DBT_SOURCES] Comparing the artifacts state.
[0m23:53:31.605937 [debug] [MainThread]: Elementary: [DBT_SOURCES] Artifacts did not change.
[0m23:53:31.609228 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_SOURCES]:
[0m23:53:31.611895 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_SOURCES].artifacts_flatten: 0:00:00.022626 (1 runs)
[0m23:53:31.614529 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_SOURCES]: 0:00:00.035137 (1 runs)
[0m23:53:31.622091 [debug] [MainThread]: Elementary: [DBT_SNAPSHOTS] Flattening the artifacts.
[0m23:53:31.625662 [debug] [MainThread]: Elementary: [DBT_SNAPSHOTS] Flattened 0 artifacts.
[0m23:53:31.628827 [debug] [MainThread]: Elementary: [DBT_SNAPSHOTS] Comparing the artifacts state.
[0m23:53:31.631569 [debug] [MainThread]: Elementary: [DBT_SNAPSHOTS] Artifacts did not change.
[0m23:53:31.634782 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_SNAPSHOTS]:
[0m23:53:31.637697 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_SNAPSHOTS].artifacts_flatten: 0:00:00.000488 (1 runs)
[0m23:53:31.640766 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_SNAPSHOTS]: 0:00:00.012632 (1 runs)
[0m23:53:31.648730 [debug] [MainThread]: Elementary: [DBT_METRICS] Flattening the artifacts.
[0m23:53:31.652656 [debug] [MainThread]: Elementary: [DBT_METRICS] Flattened 0 artifacts.
[0m23:53:31.656633 [debug] [MainThread]: Elementary: [DBT_METRICS] Comparing the artifacts state.
[0m23:53:31.659808 [debug] [MainThread]: Elementary: [DBT_METRICS] Artifacts did not change.
[0m23:53:31.663189 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_METRICS]:
[0m23:53:31.666112 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_METRICS].artifacts_flatten: 0:00:00.000377 (1 runs)
[0m23:53:31.669152 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_METRICS]: 0:00:00.014404 (1 runs)
[0m23:53:31.676977 [debug] [MainThread]: Elementary: [DBT_EXPOSURES] Flattening the artifacts.
[0m23:53:31.680778 [debug] [MainThread]: Elementary: [DBT_EXPOSURES] Flattened 0 artifacts.
[0m23:53:31.683986 [debug] [MainThread]: Elementary: [DBT_EXPOSURES] Comparing the artifacts state.
[0m23:53:31.686787 [debug] [MainThread]: Elementary: [DBT_EXPOSURES] Artifacts did not change.
[0m23:53:31.689965 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_EXPOSURES]:
[0m23:53:31.692593 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_EXPOSURES].artifacts_flatten: 0:00:00.000520 (1 runs)
[0m23:53:31.695439 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_EXPOSURES]: 0:00:00.012979 (1 runs)
[0m23:53:31.702916 [debug] [MainThread]: Elementary: [DBT_SEEDS] Flattening the artifacts.
[0m23:53:31.706411 [debug] [MainThread]: Elementary: [DBT_SEEDS] Flattened 0 artifacts.
[0m23:53:31.709344 [debug] [MainThread]: Elementary: [DBT_SEEDS] Comparing the artifacts state.
[0m23:53:31.711995 [debug] [MainThread]: Elementary: [DBT_SEEDS] Artifacts did not change.
[0m23:53:31.715015 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_SEEDS]:
[0m23:53:31.717558 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_SEEDS].artifacts_flatten: 0:00:00.000630 (1 runs)
[0m23:53:31.720167 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_SEEDS]: 0:00:00.012048 (1 runs)
[0m23:53:31.733520 [debug] [MainThread]: Elementary: [DBT_COLUMNS] Flattening the artifacts.
[0m23:53:31.825481 [debug] [MainThread]: Elementary: [DBT_COLUMNS] Flattened 69 artifacts.
[0m23:53:31.828878 [debug] [MainThread]: Elementary: [DBT_COLUMNS] Comparing the artifacts state.
[0m23:53:31.831817 [debug] [MainThread]: Elementary: [DBT_COLUMNS] Artifacts did not change.
[0m23:53:31.835012 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_COLUMNS]:
[0m23:53:31.837583 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_COLUMNS].artifacts_flatten: 0:00:00.084698 (1 runs)
[0m23:53:31.840074 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_COLUMNS]: 0:00:00.101486 (1 runs)
[0m23:53:31.842597 [debug] [MainThread]: Elementary: Uploaded dbt artifacts.
[0m23:53:31.849325 [debug] [MainThread]: Elementary: Uploading run results.
[0m23:53:31.852642 [debug] [MainThread]: Elementary: [DBT_RUN_RESULTS] Flattening the artifacts.
[0m23:53:31.877319 [debug] [MainThread]: Elementary: [DBT_RUN_RESULTS] Flattened 1 artifacts.
[0m23:53:31.910365 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:31.912908 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
describe table "NBA"."DBT_PARKER_ELEMENTARY"."DBT_RUN_RESULTS"
[0m23:53:32.041592 [debug] [MainThread]: SQL status: SUCCESS 22 in 0.126 seconds
[0m23:53:32.047709 [debug] [MainThread]: Elementary: Inserting 1 rows to table "NBA"."DBT_PARKER_ELEMENTARY"."DBT_RUN_RESULTS"
[0m23:53:32.106549 [debug] [MainThread]: Elementary: [1/1] Running insert query.
[0m23:53:32.110651 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:32.113052 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
insert into "NBA"."DBT_PARKER_ELEMENTARY"."DBT_RUN_RESULTS"
         (MODEL_EXECUTION_ID,UNIQUE_ID,INVOCATION_ID,GENERATED_AT,CREATED_AT,NAME,MESSAGE,STATUS,RESOURCE_TYPE,EXECUTION_TIME,EXECUTE_STARTED_AT,EXECUTE_COMPLETED_AT,COMPILE_STARTED_AT,COMPILE_COMPLETED_AT,ROWS_AFFECTED,FULL_REFRESH,COMPILED_CODE,FAILURES,QUERY_ID,THREAD_ID,MATERIALIZATION,ADAPTER_RESPONSE) values
    ('be03fe54-adc1-4dd3-bf00-f4a62660d4cb.test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2','test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2','be03fe54-adc1-4dd3-bf00-f4a62660d4cb','2024-09-20 23:53:31',
  current_timestamp::timestamp
,'elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60','Database Error in test elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60 (models/sources/schema.yml)\n  000904 (42000): SQL compilation error: error line 9 at position 17\n  invalid identifier \'LOADED_AT_DTTM\'','error','test',1.4817399978637695,NULL,NULL,'2024-09-20T23:53:28.723907Z','2024-09-20T23:53:29.975046Z',NULL,False,NULL,NULL,NULL,'Thread-1','test','{}')
[0m23:53:32.559953 [debug] [MainThread]: SQL status: SUCCESS 1 in 0.445 seconds
[0m23:53:32.566636 [debug] [MainThread]: Elementary: Measured durations for context - upload_artifacts_to_table[DBT_RUN_RESULTS]:
[0m23:53:32.569387 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS].artifacts_flatten: 0:00:00.021702 (1 runs)
[0m23:53:32.571924 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS].insert_rows.get_columns_in_relation: 0:00:00.148884 (1 runs)
[0m23:53:32.574582 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS].insert_rows.get_insert_rows_queries.base_query_calc: 0:00:00.000531 (1 runs)
[0m23:53:32.577297 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS].insert_rows.get_insert_rows_queries.render_row_to_sql: 0:00:00.033748 (1 runs)
[0m23:53:32.579961 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS].insert_rows.get_insert_rows_queries: 0:00:00.041827 (1 runs)
[0m23:53:32.582782 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS].insert_rows.run_insert_rows_query: 0:00:00.454778 (1 runs)
[0m23:53:32.585392 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS].insert_rows.commit: 0:00:00.000405 (1 runs)
[0m23:53:32.588076 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS].insert_rows: 0:00:00.666888 (1 runs)
[0m23:53:32.590885 [debug] [MainThread]: Elementary:     upload_artifacts_to_table[DBT_RUN_RESULTS]: 0:00:00.713877 (1 runs)
[0m23:53:32.593732 [debug] [MainThread]: Elementary: Uploaded run results successfully.
[0m23:53:32.607163 [debug] [MainThread]: Elementary: Handling test results.
[0m23:53:32.666674 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:32.669166 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
describe table "NBA"."DBT_PARKER_ELEMENTARY"."ELEMENTARY_TEST_RESULTS"
[0m23:53:32.787663 [debug] [MainThread]: SQL status: SUCCESS 28 in 0.116 seconds
[0m23:53:32.794144 [debug] [MainThread]: Elementary: Inserting 1 rows to table "NBA"."DBT_PARKER_ELEMENTARY"."ELEMENTARY_TEST_RESULTS"
[0m23:53:32.889800 [debug] [MainThread]: Elementary: [1/1] Running insert query.
[0m23:53:32.894203 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:32.896653 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
insert into "NBA"."DBT_PARKER_ELEMENTARY"."ELEMENTARY_TEST_RESULTS"
         (ID,DATA_ISSUE_ID,TEST_EXECUTION_ID,TEST_UNIQUE_ID,MODEL_UNIQUE_ID,INVOCATION_ID,DETECTED_AT,CREATED_AT,DATABASE_NAME,SCHEMA_NAME,TABLE_NAME,COLUMN_NAME,TEST_TYPE,TEST_SUB_TYPE,TEST_RESULTS_DESCRIPTION,OWNERS,TAGS,TEST_RESULTS_QUERY,OTHER,TEST_NAME,TEST_PARAMS,SEVERITY,STATUS,FAILURES,TEST_SHORT_NAME,TEST_ALIAS,RESULT_ROWS,FAILED_ROW_COUNT) values
    ('be03fe54-adc1-4dd3-bf00-f4a62660d4cb.test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2',NULL,'be03fe54-adc1-4dd3-bf00-f4a62660d4cb.test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2','test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2','model.demo_project.nba_player_game_logs','be03fe54-adc1-4dd3-bf00-f4a62660d4cb',cast('2024-09-20 23:53:32' as timestamp),
  current_timestamp::timestamp
,'NBA','dbt_parker_staging','nba_player_game_logs',NULL,'anomaly_detection','generic','Database Error in test elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60 (models/sources/schema.yml)\n  000904 (42000): SQL compilation error: error line 9 at position 17\n  invalid identifier \'LOADED_AT_DTTM\'','[]','["elementary-tests"]',NULL,NULL,'elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60','{"timestamp_column": "loaded_at_dttm", "time_bucket": {"period": "day", "count": 1}, "detection_period": {"period": "day", "count": 14}, "training_period": {"period": "day", "count": 60}, "anomaly_sensitivity": 3, "detection_delay": {"period": "day", "count": 1}, "model": "{{ get_where_subquery(ref(\'nba_player_game_logs\')) }}"}','warn','error',NULL,'freshness_anomalies','elementary_freshness_anomalies_ad3a3454f0d4af73b00d93d3fa5f7cd9',NULL,NULL)
[0m23:53:33.290473 [debug] [MainThread]: SQL status: SUCCESS 1 in 0.391 seconds
[0m23:53:33.296454 [debug] [MainThread]: Elementary: Handled test results successfully.
[0m23:53:33.314256 [debug] [MainThread]: Elementary: Uploading dbt invocation.
[0m23:53:33.384471 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:33.387105 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
describe table "NBA"."DBT_PARKER_ELEMENTARY"."DBT_INVOCATIONS"
[0m23:53:33.543155 [debug] [MainThread]: SQL status: SUCCESS 35 in 0.154 seconds
[0m23:53:33.550052 [debug] [MainThread]: Elementary: Inserting 1 rows to table "NBA"."DBT_PARKER_ELEMENTARY"."DBT_INVOCATIONS"
[0m23:53:33.567990 [debug] [MainThread]: Elementary: [1/1] Running insert query.
[0m23:53:33.572299 [debug] [MainThread]: Using snowflake connection "master"
[0m23:53:33.574692 [debug] [MainThread]: On master: /* {"app": "dbt", "dbt_version": "1.8.5", "profile_name": "demo_project", "target_name": "dev", "connection_name": "master"} */
insert into "NBA"."DBT_PARKER_ELEMENTARY"."DBT_INVOCATIONS"
         (INVOCATION_ID,JOB_ID,JOB_NAME,JOB_RUN_ID,RUN_STARTED_AT,RUN_COMPLETED_AT,GENERATED_AT,CREATED_AT,COMMAND,DBT_VERSION,ELEMENTARY_VERSION,FULL_REFRESH,INVOCATION_VARS,VARS,TARGET_NAME,TARGET_DATABASE,TARGET_SCHEMA,TARGET_PROFILE_NAME,THREADS,SELECTED,YAML_SELECTOR,PROJECT_ID,PROJECT_NAME,ENV,ENV_ID,CAUSE_CATEGORY,CAUSE,PULL_REQUEST_ID,GIT_SHA,ORCHESTRATOR,DBT_USER,JOB_URL,JOB_RUN_URL,ACCOUNT_ID,TARGET_ADAPTER_SPECIFIC_FIELDS) values
    ('be03fe54-adc1-4dd3-bf00-f4a62660d4cb',NULL,NULL,NULL,'2024-09-20 23:53:23','2024-09-20 23:53:33','2024-09-20 23:53:33',
  current_timestamp::timestamp
,'test','1.8.5','0.15.0',False,'{}','{}','dev','NBA','dbt_parker','demo_project',8,'["nba_player_game_logs"]',NULL,NULL,'demo_project',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'{"warehouse": "COMPUTE_WH", "user": "JPOOSKEY", "role": "ACCOUNTADMIN"}')
[0m23:53:34.103003 [debug] [MainThread]: SQL status: SUCCESS 1 in 0.526 seconds
[0m23:53:34.109116 [debug] [MainThread]: Elementary: Uploaded dbt invocation successfully.
[0m23:53:34.118379 [debug] [MainThread]: Writing injected SQL for node "operation.elementary.elementary-on-run-end-0"
[0m23:53:34.125240 [info ] [MainThread]: 1 of 1 START hook: elementary.on-run-end.0 ..................................... [RUN]
[0m23:53:34.127887 [info ] [MainThread]: 1 of 1 OK hook: elementary.on-run-end.0 ........................................ [[32mOK[0m in 0.00s]
[0m23:53:34.130265 [info ] [MainThread]: 
[0m23:53:34.132628 [debug] [MainThread]: On master: Close
[0m23:53:34.314833 [debug] [MainThread]: Connection 'master' was properly closed.
[0m23:53:34.317397 [debug] [MainThread]: Connection 'list_NBA_dbt_parker_elementary' was properly closed.
[0m23:53:34.319687 [debug] [MainThread]: Connection 'list_NBA_dbt_parker' was properly closed.
[0m23:53:34.321954 [debug] [MainThread]: Connection 'test.demo_project.elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60.4f1339d7b2' was properly closed.
[0m23:53:34.324380 [info ] [MainThread]: 
[0m23:53:34.326675 [info ] [MainThread]: Finished running 1 test, 2 project hooks in 0 hours 0 minutes and 7.92 seconds (7.92s).
[0m23:53:34.329294 [debug] [MainThread]: Command end result
[0m23:53:34.449650 [info ] [MainThread]: 
[0m23:53:34.452109 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m23:53:34.454345 [info ] [MainThread]: 
[0m23:53:34.456658 [error] [MainThread]:   Database Error in test elementary_freshness_anomalies_nba_player_game_logs_3__day__1__day__14__day__1__loaded_at_dttm__day__60 (models/sources/schema.yml)
  000904 (42000): SQL compilation error: error line 9 at position 17
  invalid identifier 'LOADED_AT_DTTM'
[0m23:53:34.458829 [info ] [MainThread]: 
[0m23:53:34.461025 [info ] [MainThread]: Done. PASS=0 WARN=0 ERROR=1 SKIP=0 TOTAL=1
[0m23:53:34.463840 [debug] [MainThread]: Resource report: {"command_name": "test", "command_wall_clock_time": 10.83694, "process_user_time": 5.049172, "process_kernel_time": 0.298179, "process_mem_max_rss": "227612", "process_out_blocks": "9568", "command_success": false, "process_in_blocks": "0"}
[0m23:53:34.466426 [debug] [MainThread]: Command `dbt test` failed at 23:53:34.466287 after 10.84 seconds
[0m23:53:34.468807 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffab2d2e50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffffaaf8ea00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0xffff91608af0>]}
[0m23:53:34.471148 [debug] [MainThread]: Flushing usage events
